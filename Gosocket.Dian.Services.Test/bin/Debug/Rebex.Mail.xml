<doc>
  <assembly>
    <name>Rebex.Mail</name>
  </assembly>
  <members>
    <member name="T:Rebex.Mail.AlternateView">
      <summary>
            Represents a single alternate form of an e-mail message body.
            </summary>
    </member>
    <member name="T:Rebex.Mail.AttachmentBase">
      <summary>
            The base class that represents an e-mail attachment.
            </summary>
    </member>
    <member name="M:Rebex.Mail.AttachmentBase.GetContentStream(System.Boolean)">
      <summary>
            Returns the stream representing a content of this attachment.
            </summary>
      <param name="writable">Specifies whether to return a writable or read-only stream.</param>
      <returns>The stream representing a content of this attachment.</returns>
      <remarks>
        <p>
            To set the content of this entity, it is recommended to use one of <see cref="M:Rebex.Mail.AttachmentBase.SetContent(System.String)" />
            or SetContentFromFile methods.
            </p>
        <p>
            Please note that it is not currently possible to get a writable content stream of an embedded message.
            </p>
      </remarks>
    </member>
    <member name="M:Rebex.Mail.AttachmentBase.GetContentStream">
      <summary>
            Returns the read-only stream representing a content of this attachment.
            </summary>
      <returns>The read-only stream representing a content of this attachment.</returns>
      <remarks>
            To set the content of this attachment, use one of <see cref="M:Rebex.Mail.AttachmentBase.SetContent(System.String)" />
            or SetContentFromFile methods.
            </remarks>
    </member>
    <member name="M:Rebex.Mail.AttachmentBase.GetContentLength">
      <summary>
            Gets the length of the attachment.
            </summary>
      <returns>The length of the attachment.</returns>
    </member>
    <member name="M:Rebex.Mail.AttachmentBase.SetContent(System.String)">
      <summary>
            Sets the content of this attachment to the specified text.
            </summary>
      <param name="text">Content to set.</param>
      <remarks>
            Media type is set to 'text/plain'.
            Character set and transfer encoding are determined automatically.
            </remarks>
    </member>
    <member name="M:Rebex.Mail.AttachmentBase.SetContent(System.String,System.String)">
      <summary>
            Sets the content of this attachment to the specified text and media type.
            </summary>
      <param name="text">Content to set.</param>
      <param name="mediaType">Media type.</param>
      <remarks>
            Character set and transfer encoding are determined automatically.
            </remarks>
    </member>
    <member name="M:Rebex.Mail.AttachmentBase.SetContent(System.String,System.String,System.Text.Encoding)">
      <summary>
            Sets the content of this attachment to the specified text, media type and character set.
            </summary>
      <param name="text">Content to set.</param>
      <param name="mediaType">Media type.</param>
      <param name="charset">Character set to use for encoding the text.</param>
      <remarks>
            Transfer encoding is determined automatically.
            </remarks>
    </member>
    <member name="M:Rebex.Mail.AttachmentBase.SetContent(System.String,System.String,System.Text.Encoding,Rebex.Mime.TransferEncoding)">
      <summary>
            Sets the content of this attachment to the specified text, media type and character set.
            </summary>
      <param name="text">Content to set.</param>
      <param name="mediaType">Media type.</param>
      <param name="charset">Character set to use for encoding the text.</param>
      <param name="transferEncoding">Transfer encoding.</param>
    </member>
    <member name="M:Rebex.Mail.AttachmentBase.Save(System.String)">
      <summary>
            Writes the content of the attachment or view into a supplied file.
            </summary>
      <param name="fileName">Path to the file to write the content to.</param>
    </member>
    <member name="M:Rebex.Mail.AttachmentBase.Save(System.IO.Stream)">
      <summary>
            Writes the content of the attachment into the supplied stream.
            </summary>
      <param name="output">Stream to write the content to.</param>
    </member>
    <member name="M:Rebex.Mail.AttachmentBase.#ctor(Rebex.Mime.MimeEntity)">
      <summary>
            Initializes an instance of <see cref="T:Rebex.Mail.AttachmentBase" /> class from the specified entity.
            </summary>
      <param name="entity" />
    </member>
    <member name="M:Rebex.Mail.AttachmentBase.ToMimeEntity">
      <summary>
            Converts this instance to a <see cref="T:Rebex.Mime.MimeEntity" />.
            </summary>
      <returns>A <see cref="T:Rebex.Mime.MimeEntity" />.</returns>
    </member>
    <member name="M:Rebex.Mail.AttachmentBase.#ctor">
      <summary>
            Initializes an instance of <see cref="T:Rebex.Mail.AttachmentBase" /> class.
            </summary>
    </member>
    <member name="P:Rebex.Mail.AttachmentBase.TransferEncoding">
      <summary>
            Gets or sets the <see cref="P:Rebex.Mail.AttachmentBase.TransferEncoding" /> of the content of this attachment.
            </summary>
      <value>
        <see cref="P:Rebex.Mail.AttachmentBase.TransferEncoding" /> of the content.
            </value>
    </member>
    <member name="P:Rebex.Mail.AttachmentBase.ContentType">
      <summary>
            Gets the content type of this attachment.
            </summary>
      <value>Content type.</value>
    </member>
    <member name="P:Rebex.Mail.AttachmentBase.MediaType">
      <summary>
            Gets the media type of this attachment.
            </summary>
      <value>Media type.</value>
      <remarks>This is equivalent to calling <see cref="P:Rebex.Mail.AttachmentBase.ContentType" />.MediaType.</remarks>
    </member>
    <member name="P:Rebex.Mail.AttachmentBase.ContentDisposition">
      <summary>
            Gets the content disposition of this attachment.
            </summary>
      <value>Content disposition.</value>
    </member>
    <member name="P:Rebex.Mail.AttachmentBase.ContentDescription">
      <summary>
            Gets or sets the content description of this attachment.
            </summary>
      <value>Content description .</value>
    </member>
    <member name="P:Rebex.Mail.AttachmentBase.ContentId">
      <summary>
            Gets or sets the content ID of this attachment.
            </summary>
      <value>Content ID.</value>
    </member>
    <member name="P:Rebex.Mail.AttachmentBase.ContentLocation">
      <summary>
            Gets or sets the absolute or relative URI of this message part.
            </summary>
      <value>URI.</value>
    </member>
    <member name="P:Rebex.Mail.AttachmentBase.ContentString">
      <summary>
            Gets the content string of this attachment.
            </summary>
      <value>The content string of this attachment; or null if the content cannot be represented as string.</value>
      <remarks>
        <p>
            To set the content of this attachment, use one of <see cref="M:Rebex.Mail.AttachmentBase.SetContent(System.String)" />
            or SetContentFromFile methods.
            </p>
      </remarks>
    </member>
    <member name="P:Rebex.Mail.AttachmentBase.Charset">
      <summary>
            Gets the charset (<see cref="T:System.Text.Encoding" />) of the content of this attachment.
            </summary>
      <value>
            The charset of the content; or null if it has no charset or unknown charset.
            </value>
    </member>
    <member name="P:Rebex.Mail.AttachmentBase.Options">
      <summary>
            Gets or sets verious options for MIME parser and writer.
            </summary>
      <value>MIME parser and writer options.</value>
    </member>
    <member name="M:Rebex.Mail.AlternateView.SetContentFromFile(System.String,System.String)">
      <summary>
            Sets the content of this view to data read from the specified file and sets media type.
            </summary>
      <param name="fileName">Path to the file to read data from.</param>
      <param name="mediaType">Media type.</param>
    </member>
    <member name="M:Rebex.Mail.AlternateView.SetContentFromFile(System.String)">
      <summary>
            Sets the content of this view to data read from the specified file.
            </summary>
      <param name="fileName">Path to the file to read data from.</param>
      <remarks>Media type is set to 'text/plain'.</remarks>
    </member>
    <member name="M:Rebex.Mail.AlternateView.SetContent(System.IO.Stream,System.String)">
      <summary>
            Sets the content of this view to data read from the specified stream and sets media type.
            </summary>
      <param name="contentStream">Stream from which the data will be read.</param>
      <param name="mediaType">Media type.</param>
    </member>
    <member name="M:Rebex.Mail.AlternateView.SetContent(System.IO.Stream)">
      <summary>
            Sets the content of this view to data read from the specified stream.
            </summary>
      <param name="contentStream">Stream from which the data will be read.</param>
      <remarks>Media type is set to 'text/plain'.</remarks>
    </member>
    <member name="M:Rebex.Mail.AlternateView.#ctor">
      <summary>
            Initializes a new empty instance of a <see cref="T:Rebex.Mail.AlternateView" />.
            </summary>
    </member>
    <member name="M:Rebex.Mail.AlternateView.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of a <see cref="T:Rebex.Mail.AlternateView" />
            with the content of the specified file and with media type.
            </summary>
      <param name="fileName">Path to the file to provide data for the view.</param>
      <param name="mediaType">A MIME media type of the file.</param>
    </member>
    <member name="M:Rebex.Mail.AlternateView.#ctor(System.String)">
      <summary>
            Initializes a new instance of a <see cref="T:Rebex.Mail.AlternateView" />
            with the content of the specified file.
            </summary>
      <param name="fileName">Path to the file to provide data for the view.</param>
    </member>
    <member name="M:Rebex.Mail.AlternateView.#ctor(System.IO.Stream,System.String)">
      <summary>
            Initializes a new instance of a <see cref="T:Rebex.Mail.AlternateView" />
            with the content of the supplied stream and with a media type.
            </summary>
      <param name="contentStream">Stream from which the data will be read.</param>
      <param name="mediaType">A MIME media type of the file.</param>
    </member>
    <member name="M:Rebex.Mail.AlternateView.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of a <see cref="T:Rebex.Mail.AlternateView" />
            with the content of the supplied stream.
            </summary>
      <param name="contentStream">Stream from which the data will be read.</param>
    </member>
    <member name="T:Rebex.Mail.AlternateViewCollection">
      <summary>
            Represents the collection of alternate mail message views.
            </summary>
    </member>
    <member name="M:Rebex.Mail.AlternateViewCollection.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Rebex.Mail.AlternateViewCollection" />.
            </summary>
    </member>
    <member name="M:Rebex.Mail.AlternateViewCollection.Insert(System.Int32,Rebex.Mail.AlternateView)">
      <summary>
            Inserts an item into the collection at the specified index.
            </summary>
      <param name="index">A zero-based index at which an item should be inserted.</param>
      <param name="value">An alternate view to be inserted.</param>
    </member>
    <member name="M:Rebex.Mail.AlternateViewCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the item at the specified index from the list.
            </summary>
      <param name="index">A zero-based index of an item to remove.</param>
    </member>
    <member name="M:Rebex.Mail.AlternateViewCollection.Add(Rebex.Mail.AlternateView)">
      <summary>
            Adds an item to the end of the list.
            </summary>
      <param name="value">An alternate view to be added.</param>
      <returns>Index of the newly added item.</returns>
    </member>
    <member name="M:Rebex.Mail.AlternateViewCollection.AddRange(System.Collections.ICollection)">
      <summary>
            Adds a range of items contained in the specified collection.
            </summary>
      <param name="collection">Collection of alternate views to be added.</param>
    </member>
    <member name="M:Rebex.Mail.AlternateViewCollection.GetEnumerator">
      <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the <see cref="T:Rebex.Mail.AlternateViewCollection" /> collection.
            </summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the collection.</returns>
    </member>
    <member name="M:Rebex.Mail.AlternateViewCollection.CopyTo(Rebex.Mail.AlternateView[],System.Int32)">
      <summary>
            Copies the range of elements from the <see cref="T:Rebex.Mail.AlternateViewCollection" /> to a compatible one-dimensional
            array, starting at the specified index of the target array.
            </summary>
      <param name="array">One-dimensional zero-based array that is the destination of the elements copied from <see cref="T:Rebex.Mail.AttachmentCollection" />.</param>
      <param name="index">A zero-based index in the destination array at which copying begins.</param>
    </member>
    <member name="P:Rebex.Mail.AlternateViewCollection.Count">
      <summary>
            Gets the number of items in the collection.
            </summary>
      <value>The number of items is the collection.</value>
    </member>
    <member name="P:Rebex.Mail.AlternateViewCollection.Item(System.Int32)">
      <summary>
            Gets or sets the list item at the specified index.
            </summary>
      <param name="index">The zero-based index of the list item to get or set.</param>
      <value>An alternate view to get or set.</value>
    </member>
    <member name="P:Rebex.Mail.AlternateViewCollection.IsSynchronized">
      <summary>
            Gets a value indicating whether access to <see cref="T:Rebex.Mail.AlternateViewCollection" /> is synchronized (thread-safe).
            </summary>
      <value>A value indicating whether access to <see cref="T:Rebex.Mail.AlternateViewCollection" /> is synchronized.</value>
    </member>
    <member name="P:Rebex.Mail.AlternateViewCollection.SyncRoot">
      <summary>
            Gets an object that can be used to synchronize access to <see cref="T:Rebex.Mail.AlternateViewCollection" /> object.
            </summary>
      <value>an object that can be used to synchronize access to <see cref="T:Rebex.Mail.AlternateViewCollection" /> object.</value>
    </member>
    <member name="T:Rebex.Mail.Attachment">
      <summary>
            Represents an e-mail attachment.
            </summary>
    </member>
    <member name="M:Rebex.Mail.Attachment.SetContentFromFile(System.String,System.String,System.String)">
      <summary>
            Sets the content of this attachment to data read from the specified file and sets media type and file name.
            </summary>
      <param name="fileName">Path to the file to read data from.</param>
      <param name="name">File name to assign to the content.</param>
      <param name="mediaType">Media type.</param>
    </member>
    <member name="M:Rebex.Mail.Attachment.SetContentFromFile(System.String,System.String)">
      <summary>
            Sets the content of this attachment to data read from the specified file and sets file name.
            </summary>
      <param name="fileName">Path to the file to read data from.</param>
      <param name="name">File name to assign to the content.</param>
    </member>
    <member name="M:Rebex.Mail.Attachment.SetContentFromFile(System.String)">
      <summary>
            Sets the content of this attachment to data read from the specified file.
            </summary>
      <param name="fileName">Path to the file to read data from.</param>
      <remarks>
            File name is determined from the path.
            Media type is set to 'application/octet-stream'.
            </remarks>
    </member>
    <member name="M:Rebex.Mail.Attachment.SetContent(System.IO.Stream,System.String,System.String)">
      <summary>
            Sets the content of this attachment to data read from the specified stream and sets media type and file name.
            </summary>
      <param name="source">Source stream to read data from.</param>
      <param name="name">File name to assign to the content.</param>
      <param name="mediaType">Media type.</param>
    </member>
    <member name="M:Rebex.Mail.Attachment.SetContent(System.IO.Stream,System.String)">
      <summary>
            Sets the content of this attachment to data read from the specified stream and sets file name.
            </summary>
      <param name="source">Source stream to read data from.</param>
      <param name="name">File name to assign to the content.</param>
      <remarks>Media type is set to 'application/octet-stream'.</remarks>
    </member>
    <member name="M:Rebex.Mail.Attachment.#ctor">
      <summary>
            Initializes a new empty instance of a <see cref="T:Rebex.Mail.Attachment" />.
            </summary>
    </member>
    <member name="M:Rebex.Mail.Attachment.#ctor(Rebex.Mail.MailMessage)">
      <summary>
            Initializes a new instance of a <see cref="T:Rebex.Mail.Attachment" />
            that represents an attached e-mail message.
            </summary>
      <param name="message">E-mail message to be used as an attachment.</param>
    </member>
    <member name="M:Rebex.Mail.Attachment.#ctor(System.String)">
      <summary>
            Initializes a new instance of a <see cref="T:Rebex.Mail.Attachment" />
            with the content of the specified file.
            </summary>
      <param name="fileName">Path to the file to provide data for the attachment.</param>
    </member>
    <member name="M:Rebex.Mail.Attachment.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of a <see cref="T:Rebex.Mail.Attachment" />
            with the content of the specified file and with a suggested name.
            </summary>
      <param name="fileName">Path to the file to provide data for the attachment.</param>
      <param name="name">A suggested name of the attachment.</param>
    </member>
    <member name="M:Rebex.Mail.Attachment.#ctor(System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of a <see cref="T:Rebex.Mail.Attachment" />
            with the content of the specified file and with a media type and suggested name.
            </summary>
      <param name="fileName">Path to the file to provide data for the attachment.</param>
      <param name="name">A suggested name of the attachment.</param>
      <param name="mediaType">A MIME media type of the file.</param>
    </member>
    <member name="M:Rebex.Mail.Attachment.#ctor(System.IO.Stream,System.String)">
      <summary>
            Initializes a new instance of a <see cref="T:Rebex.Mail.Attachment" />
            with the content of the supplied stream and with suggested name.
            </summary>
      <param name="contentStream">Stream from which the data will be read.</param>
      <param name="name">A suggested name of the attachment.</param>
    </member>
    <member name="M:Rebex.Mail.Attachment.#ctor(System.IO.Stream,System.String,System.String)">
      <summary>
            Initializes a new instance of a <see cref="T:Rebex.Mail.Attachment" />
            with the content of the supplied stream and with a media type and suggested name.
            </summary>
      <param name="contentStream">Stream from which the data will be read.</param>
      <param name="name">A suggested name of the attachment.</param>
      <param name="mediaType">A MIME media type of the file.</param>
    </member>
    <member name="M:Rebex.Mail.Attachment.#ctor(System.Byte[],System.String)">
      <summary>
            Initializes a new instance of a <see cref="T:Rebex.Mail.Attachment" />
            with the content of the supplied byte array and with suggested name.
            </summary>
      <param name="content">Byte array from which the data will be read.</param>
      <param name="name">A suggested name of the attachment.</param>
    </member>
    <member name="M:Rebex.Mail.Attachment.#ctor(System.Byte[],System.String,System.String)">
      <summary>
            Initializes a new instance of a <see cref="T:Rebex.Mail.Attachment" />
            with the content of the supplied byte array and with a media type and suggested name.
            </summary>
      <param name="content">Byte array from which the data will be read.</param>
      <param name="name">A suggested name of the attachment.</param>
      <param name="mediaType">A MIME media type of the file.</param>
    </member>
    <member name="P:Rebex.Mail.Attachment.DisplayName">
      <summary>
            Gets the suggested display name of this attachment.
            </summary>
      <value>A suggested display name.</value>
    </member>
    <member name="P:Rebex.Mail.Attachment.FileName">
      <summary>
            Gets or sets the file name of this attachment.
            </summary>
      <value>A suggested file name.</value>
    </member>
    <member name="P:Rebex.Mail.Attachment.ContentMessage">
      <summary>
            Gets the inner message of this attachment if it is an attached message of "message/rfc822" content type.
            </summary>
      <value>The inner message of this attachment; or null if not available.</value>
      <remarks>
        <p>
            To set the content of this attachment, use one of <see cref="M:Rebex.Mail.Attachment.SetContent(System.IO.Stream,System.String)" />
            or <see cref="M:Rebex.Mail.Attachment.SetContentFromFile(System.String)" /> methods.
            </p>
      </remarks>
    </member>
    <member name="T:Rebex.Mail.AttachmentCollection">
      <summary>
            Represents the collection of mail message attachments.
            </summary>
    </member>
    <member name="M:Rebex.Mail.AttachmentCollection.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Rebex.Mail.AttachmentCollection" />.
            </summary>
    </member>
    <member name="M:Rebex.Mail.AttachmentCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the item at the specified index from the list.
            </summary>
      <param name="index">A zero-based index of an item to remove.</param>
    </member>
    <member name="M:Rebex.Mail.AttachmentCollection.Add(Rebex.Mail.Attachment)">
      <summary>
            Adds an item to the end of the list.
            </summary>
      <param name="value">Item to be added.</param>
      <returns>Index of the newly added item.</returns>
    </member>
    <member name="M:Rebex.Mail.AttachmentCollection.AddRange(System.Collections.ICollection)">
      <summary>
            Adds a range of items contained in the specified collection.
            </summary>
      <param name="collection">Collection of items to be added.</param>
    </member>
    <member name="M:Rebex.Mail.AttachmentCollection.GetEnumerator">
      <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the <see cref="T:Rebex.Mail.AttachmentCollection" /> collection.
            </summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the collection.</returns>
    </member>
    <member name="M:Rebex.Mail.AttachmentCollection.CopyTo(Rebex.Mail.Attachment[],System.Int32)">
      <summary>
            Copies the range of elements from the <see cref="T:Rebex.Mail.AttachmentCollection" /> to a compatible one-dimensional
            array, starting at the specified index of the target array.
            </summary>
      <param name="array">One-dimensional zero-based array that is the destination of the elements copied from <see cref="T:Rebex.Mail.AttachmentCollection" />.</param>
      <param name="index">A zero-based index in the destination array at which copying begins.</param>
    </member>
    <member name="P:Rebex.Mail.AttachmentCollection.Count">
      <summary>
            Gets the number of items in the collection.
            </summary>
      <value>The number of items is the collection.</value>
    </member>
    <member name="P:Rebex.Mail.AttachmentCollection.Item(System.Int32)">
      <summary>
            Gets or sets the list item at the specified index.
            </summary>
      <param name="index">The zero-based index of the list item to get or set.</param>
      <value>An item.</value>
    </member>
    <member name="P:Rebex.Mail.AttachmentCollection.IsSynchronized">
      <summary>
            Gets a value indicating whether access to <see cref="T:Rebex.Mail.AttachmentCollection" /> is synchronized (thread-safe).
            </summary>
      <value>A value indicating whether access to <see cref="T:Rebex.Mail.AttachmentCollection" /> is synchronized.</value>
    </member>
    <member name="P:Rebex.Mail.AttachmentCollection.SyncRoot">
      <summary>
            Gets an object that can be used to synchronize access to <see cref="T:Rebex.Mail.AttachmentCollection" /> object.
            </summary>
      <value>an object that can be used to synchronize access to <see cref="T:Rebex.Mail.AttachmentCollection" /> object.</value>
    </member>
    <member name="T:Rebex.Mail.LinkedResource">
      <summary>
            Represents an embedded resource such as an image or a CSS file referenced from the message views.
            </summary>
    </member>
    <member name="M:Rebex.Mail.LinkedResource.SetContentFromFile(System.String,System.String)">
      <summary>
            Sets the content of this resource to data read from the specified file and sets media type.
            </summary>
      <param name="fileName">Path to the file to read data from.</param>
      <param name="mediaType">Media type.</param>
    </member>
    <member name="M:Rebex.Mail.LinkedResource.SetContent(System.IO.Stream,System.String)">
      <summary>
            Sets the content of this resource to data read from the specified stream and sets media type.
            </summary>
      <param name="contentStream">Stream from which the data will be read.</param>
      <param name="mediaType">Media type.</param>
    </member>
    <member name="M:Rebex.Mail.LinkedResource.#ctor">
      <summary>
            Initializes a new empty instance of a <see cref="T:Rebex.Mail.LinkedResource" />.
            </summary>
    </member>
    <member name="M:Rebex.Mail.LinkedResource.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of a <see cref="T:Rebex.Mail.LinkedResource" />
            with the content of the specified file and with media type.
            </summary>
      <param name="fileName">Path to the file to provide data for the resource.</param>
      <param name="mediaType">A MIME media type of the file.</param>
    </member>
    <member name="M:Rebex.Mail.LinkedResource.#ctor(System.IO.Stream,System.String)">
      <summary>
            Initializes a new instance of a <see cref="T:Rebex.Mail.LinkedResource" />
            with the content of the supplied stream and with a media type.
            </summary>
      <param name="contentStream">Stream from which the data will be read.</param>
      <param name="mediaType">A MIME media type of the file.</param>
    </member>
    <member name="M:Rebex.Mail.LinkedResource.#ctor(System.IO.Stream,System.String,System.String)">
      <summary>
            Initializes a new instance of a <see cref="T:Rebex.Mail.LinkedResource" />
            with the content of the supplied stream and with a media type and suggested name.
            </summary>
      <param name="contentStream">Stream from which the data will be read.</param>
      <param name="name">A suggested name of the resource.</param>
      <param name="mediaType">A MIME media type of the file.</param>
    </member>
    <member name="P:Rebex.Mail.LinkedResource.FileName">
      <summary>
            Gets the suggested file name of this attachment.
            </summary>
      <value>A suggested file name.</value>
    </member>
    <member name="T:Rebex.Mail.LinkedResourceCollection">
      <summary>
            Represents the collection of embedded resources referred by a <see cref="T:Rebex.Mail.AlternateView" />.
            </summary>
    </member>
    <member name="M:Rebex.Mail.LinkedResourceCollection.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Rebex.Mail.LinkedResourceCollection" />.
            </summary>
    </member>
    <member name="M:Rebex.Mail.LinkedResourceCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the item at the specified index from the list.
            </summary>
      <param name="index">A zero-based index of an item to remove.</param>
    </member>
    <member name="M:Rebex.Mail.LinkedResourceCollection.Add(Rebex.Mail.LinkedResource)">
      <summary>
            Adds an item to the end of the list.
            </summary>
      <param name="value">Item to be added.</param>
      <returns>Index of the newly added item.</returns>
    </member>
    <member name="M:Rebex.Mail.LinkedResourceCollection.AddRange(System.Collections.ICollection)">
      <summary>
            Adds a range of items contained in the specified collection.
            </summary>
      <param name="collection">Collection of items to be added.</param>
    </member>
    <member name="M:Rebex.Mail.LinkedResourceCollection.GetEnumerator">
      <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the <see cref="T:Rebex.Mail.LinkedResourceCollection" /> collection.
            </summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the collection.</returns>
    </member>
    <member name="M:Rebex.Mail.LinkedResourceCollection.CopyTo(Rebex.Mail.LinkedResource[],System.Int32)">
      <summary>
            Copies the range of elements from the <see cref="T:Rebex.Mail.LinkedResourceCollection" /> to a compatible one-dimensional
            array, starting at the specified index of the target array.
            </summary>
      <param name="array">One-dimensional zero-based array that is the destination of the elements copied from <see cref="T:Rebex.Mail.AttachmentCollection" />.</param>
      <param name="index">A zero-based index in the destination array at which copying begins.</param>
    </member>
    <member name="P:Rebex.Mail.LinkedResourceCollection.Count">
      <summary>
            Gets the number of items in the collection.
            </summary>
      <value>The number of items is the collection.</value>
    </member>
    <member name="P:Rebex.Mail.LinkedResourceCollection.Item(System.Int32)">
      <summary>
            Gets or sets the list item at the specified index.
            </summary>
      <param name="index">The zero-based index of the list item to get or set.</param>
      <value>An item.</value>
    </member>
    <member name="P:Rebex.Mail.LinkedResourceCollection.IsSynchronized">
      <summary>
            Gets a value indicating whether access to <see cref="T:Rebex.Mail.LinkedResourceCollection" /> is synchronized (thread-safe).
            </summary>
      <value>A value indicating whether access to <see cref="T:Rebex.Mail.LinkedResourceCollection" /> is synchronized.</value>
    </member>
    <member name="P:Rebex.Mail.LinkedResourceCollection.SyncRoot">
      <summary>
            Gets an object that can be used to synchronize access to <see cref="T:Rebex.Mail.LinkedResourceCollection" /> object.
            </summary>
      <value>an object that can be used to synchronize access to <see cref="T:Rebex.Mail.LinkedResourceCollection" /> object.</value>
    </member>
    <member name="T:Rebex.Mail.MailException">
      <summary>
            The exception that is thrown when an e-mail related error occurs.
            </summary>
    </member>
    <member name="M:Rebex.Mail.MailException.#ctor">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mail.MailException" />.
            </summary>
    </member>
    <member name="M:Rebex.Mail.MailException.#ctor(System.String)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mail.MailException" /> with the specified message.
            </summary>
      <param name="message">Message that describes the error.</param>
    </member>
    <member name="M:Rebex.Mail.MailException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mail.MailException" /> with the specified message and inner exception.
            </summary>
      <param name="message">Message that describes the error.</param>
      <param name="inner">The exception that was the cause of this exception.</param>
    </member>
    <member name="M:Rebex.Mail.MailException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:Rebex.Mail.MailException" /> class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="T:Rebex.Mail.MailMessage">
      <summary>
            Represents an e-mail message that can be saved, loaded, processed or sent.
            </summary>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Clone">
      <summary>
            Creates a copy of this message.
            </summary>
      <returns>A new message.</returns>
    </member>
    <member name="M:Rebex.Mail.MailMessage.CreateReply(Rebex.Mime.Headers.MailAddress,Rebex.Mail.ReplyBodyTransformation)">
      <summary>
            Creates a new message that is a reply to the current message.
            </summary>
      <param name="sender">The sender of the reply.</param>
      <param name="transformation">Transformation mode for the original message body.</param>
      <returns>A new message.</returns>
    </member>
    <member name="M:Rebex.Mail.MailMessage.CreateReply(Rebex.Mime.Headers.MailAddress,Rebex.Mail.ReplyBodyTransformation,System.Boolean)">
      <summary>
            Creates a new message that is a reply to the current message.
            </summary>
      <param name="sender">The sender of the reply.</param>
      <param name="transformation">Transformation mode for the original message body.</param>
      <param name="replyToAll">True if the reply is to be sent to all e-mail addresses
            that were in the original 'From', 'Reply-To', 'To' and 'CC' fields.</param>
      <returns>A new message.</returns>
    </member>
    <member name="M:Rebex.Mail.MailMessage.#ctor">
      <summary>
            Initializes an instance of an empty e-mail message.
            </summary>
    </member>
    <member name="M:Rebex.Mail.MailMessage.#ctor(Rebex.Mime.MimeMessage)">
      <summary>
            Initializes an instance of <see cref="T:Rebex.Mail.MailMessage" /> using a <see cref="T:Rebex.Mime.MimeMessage" />.
            </summary>
      <param name="message">A <see cref="T:Rebex.Mime.MimeMessage" />.</param>
    </member>
    <member name="M:Rebex.Mail.MailMessage.op_Implicit(Rebex.Mime.MimeMessage)~Rebex.Mail.MailMessage">
      <summary>
            Converts a <see cref="T:Rebex.Mime.MimeMessage" /> to a <see cref="T:Rebex.Mail.MailMessage" />.
            </summary>
      <param name="message">A <see cref="T:Rebex.Mime.MimeMessage" />.</param>
      <returns>A <see cref="T:Rebex.Mail.MailMessage" />.</returns>
    </member>
    <member name="M:Rebex.Mail.MailMessage.ToMimeMessage">
      <summary>
            Converts a <see cref="T:Rebex.Mail.MailMessage" /> to a <see cref="T:Rebex.Mime.MimeMessage" />.
            </summary>
      <returns>A <see cref="T:Rebex.Mime.MimeMessage" />.</returns>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Load(System.IO.Stream)">
      <summary>
            Loads a mail message from the supplied stream.
            </summary>
      <param name="input">Stream to load the message from.</param>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Load(System.String)">
      <summary>
            Loads a mail message from the supplied file.
            </summary>
      <param name="fileName">Path to the file to load the message from.</param>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Load(System.Byte[])">
      <summary>
            Loads a mail message from its byte array representation.
            </summary>
      <param name="data">Byte array representation of the mail message.</param>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Save(System.IO.Stream)">
      <summary>
            Saves the mail message to the supplied stream in MIME format.
            </summary>
      <param name="output">Stream to save the message to.</param>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Save(System.String)">
      <summary>
            Saves the mail message to the supplied file in MIME format.
            </summary>
      <param name="fileName">Path to the file to save the message to.</param>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Save(System.IO.Stream,Rebex.Mail.MailFormat)">
      <summary>
            Saves the mail message to the supplied stream.
            </summary>
      <param name="output">Stream to save the message to.</param>
      <param name="format">Format of the saved message.</param>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Save(System.String,Rebex.Mail.MailFormat)">
      <summary>
            Saves the mail message to the supplied file.
            </summary>
      <param name="fileName">Path to the file to save the message to.</param>
      <param name="format">Format of the saved message.</param>
    </member>
    <member name="M:Rebex.Mail.MailMessage.ToByteArray">
      <summary>
            Returns a byte array representation of the mail message.
            This is the same as the content of a file saved using the <see cref="M:Rebex.Mail.MailMessage.Save(System.String)" /> message.
            </summary>
      <returns>Byte array representation of the mail message.</returns>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Decrypt">
      <summary>
            Decrypts an encrypted message, making the content accessible.
            </summary>
      <remarks>
        <p>
            For a successful decryption, a recipient's private key must be available -
            see the <see cref="P:Rebex.Mail.MailMessage.CanDecrypt" /> property.
            </p>
        <p>
            Unless the message is signed as well, this will make it possible to modify
            the resulting message.
            </p>
      </remarks>
    </member>
    <member name="M:Rebex.Mail.MailMessage.RemoveSignature">
      <summary>
            Removes a signature from a signed message.
            </summary>
      <remarks>
            Unless the message is encrypted as well, this will make it possible to modify
            the resulting message.
            </remarks>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Encrypt(System.Collections.Generic.IEnumerable{Rebex.Security.Certificates.Certificate})">
      <summary>
            Encrypts a message.
            </summary>
      <param name="recipients">The list of recipients' certificates. At least one must be specified.</param>
      <remarks>
            Encrypting the message will make its content inaccessible until it is decrypted.
            </remarks>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Encrypt(Rebex.Security.Certificates.Certificate[])">
      <summary>
            Encrypts a message.
            </summary>
      <param name="recipients">The list of recipients' certificates. At least one must be specified.</param>
      <remarks>
            Encrypting the message will make its content inaccessible until it is decrypted.
            </remarks>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Encrypt(Rebex.Mail.MailEncryptionAlgorithm,System.Collections.Generic.IEnumerable{Rebex.Security.Certificates.Certificate})">
      <summary>
            Encrypts a message.
            </summary>
      <param name="encryptionAlgorithm">An encryption algorithm to use.</param>
      <param name="recipients">The list of recipients' certificates. At least one must be specified.</param>
      <remarks>
            Encrypting the message will make its content inaccessible until it is decrypted.
            </remarks>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Encrypt(Rebex.Mail.MailEncryptionAlgorithm,Rebex.Security.Certificates.Certificate[])">
      <summary>
            Encrypts a message.
            </summary>
      <param name="encryptionAlgorithm">An encryption algorithm to use.</param>
      <param name="recipients">The list of recipients' certificates. At least one must be specified.</param>
      <remarks>
            Encrypting the message will make its content inaccessible until it is decrypted.
            </remarks>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Encrypt(Rebex.Mail.MailEncryptionParameters,System.Collections.Generic.IEnumerable{Rebex.Security.Certificates.Certificate})">
      <summary>
            Encrypts a message.
            </summary>
      <param name="encryptionparameters">Encryption parameters (to specify RSAES-OAEP parameters). Can be null (for PKCS #1).</param>
      <param name="recipients">The list of recipients' certificates. At least one must be specified.</param>
      <remarks>
            Encrypting the message will make its content inaccessible until it is decrypted.
            </remarks>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Encrypt(Rebex.Mail.MailEncryptionParameters,Rebex.Security.Certificates.Certificate[])">
      <summary>
            Encrypts a message.
            </summary>
      <param name="encryptionParameters">Encryption parameters (to specify RSAES-OAEP parameters). Can be null (for PKCS #1).</param>
      <param name="recipients">The list of recipients' certificates. At least one must be specified.</param>
      <remarks>
            Encrypting the message will make its content inaccessible until it is decrypted.
            </remarks>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Sign(System.Collections.Generic.IEnumerable{Rebex.Security.Certificates.Certificate})">
      <summary>
            Signs a message.
            </summary>
      <param name="signers">The list of signers' certificates. At least one must be specified. Also, private keys for the certificates must be available.</param>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Sign(Rebex.Security.Certificates.Certificate[])">
      <summary>
            Signs a message.
            </summary>
      <param name="signers">The list of signers' certificates. At least one must be specified. Also, private keys for the certificates must be available.</param>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Sign(Rebex.Security.Certificates.SignatureHashAlgorithm,System.Collections.Generic.IEnumerable{Rebex.Security.Certificates.Certificate})">
      <summary>
            Signs a message.
            </summary>
      <param name="signers">The list of signers' certificates. At least one must be specified. Also, private keys for the certificates must be available.</param>
      <param name="algorithm">Message digest algorithm.</param>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Sign(Rebex.Security.Certificates.SignatureHashAlgorithm,Rebex.Security.Certificates.Certificate[])">
      <summary>
            Signs a message.
            </summary>
      <param name="signers">The list of signers' certificates. At least one must be specified. Also, private keys for the certificates must be available.</param>
      <param name="algorithm">Message digest algorithm.</param>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Sign(Rebex.Security.Certificates.SignatureHashAlgorithm,Rebex.Mail.MailSignatureStyle,System.Collections.Generic.IEnumerable{Rebex.Security.Certificates.Certificate})">
      <summary>
            Signs a message.
            </summary>
      <param name="signers">The list of signers' certificates. At least one must be specified. Also, private keys for the certificates must be available.</param>
      <param name="style">Signature style.</param>
      <param name="algorithm">Message digest algorithm.</param>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Sign(Rebex.Security.Certificates.SignatureHashAlgorithm,Rebex.Mail.MailSignatureStyle,Rebex.Security.Certificates.Certificate[])">
      <summary>
            Signs a message.
            </summary>
      <param name="signers">The list of signers' certificates. At least one must be specified. Also, private keys for the certificates must be available.</param>
      <param name="style">Signature style.</param>
      <param name="algorithm">Message digest algorithm.</param>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Sign(Rebex.Mail.MailSignatureParameters,System.Collections.Generic.IEnumerable{Rebex.Security.Certificates.Certificate})">
      <summary>
            Signs a message.
            </summary>
      <param name="signatureParameters">Signature parameters (to specify RSASSA-PSS parameters). Can be null (for PKCS #1 detached signature).</param>
      <param name="signers">The list of signers' certificates. At least one must be specified. Also, private keys for the certificates must be available.</param>
    </member>
    <member name="M:Rebex.Mail.MailMessage.Sign(Rebex.Mail.MailSignatureParameters,Rebex.Security.Certificates.Certificate[])">
      <summary>
            Signs a message.
            </summary>
      <param name="signatureParameters">Signature parameters (to specify RSASSA-PSS parameters). Can be null (for PKCS #1 detached signature).</param>
      <param name="signers">The list of signers' certificates. At least one must be specified. Also, private keys for the certificates must be available.</param>
    </member>
    <member name="M:Rebex.Mail.MailMessage.ValidateSignature">
      <summary>
            Validates all digital signatures on a signed message
            and validates all the signers' certificates.
            </summary>
      <returns>Validation result.</returns>
    </member>
    <member name="M:Rebex.Mail.MailMessage.ValidateSignature(Rebex.Mail.MailSignatureValidationOptions)">
      <summary>
            Validates all digital signatures on a signed message.
            The specified validation options are taken into account.
            </summary>
      <param name="signatureValidationOptions">Signature validation options.</param>
      <returns>Validation result.</returns>
    </member>
    <member name="M:Rebex.Mail.MailMessage.ValidateSignature(System.Boolean,Rebex.Security.Certificates.ValidationOptions)">
      <summary>
            Validates all digital signatures on a signed message.
            Optionally, signers' certificates are not validated, and the specified validation
            options are taken into account.
            </summary>
      <param name="verifySignatureOnly">Specifies whether to only verify the signatures, skipping the certificate validation.</param>
      <param name="options">Certificate validation options (not supported by CertificateChainEngine.Native engine on Xamarin.iOS and Xamarin.Android).</param>
      <returns>Validation result.</returns>
    </member>
    <member name="M:Rebex.Mail.MailMessage.ValidateSignature(System.Boolean,Rebex.Security.Certificates.ValidationOptions,Rebex.Security.Certificates.CertificateChainEngine)">
      <summary>
            Validates all digital signatures on a signed message with the specified engine.
            Optionally, signers' certificates are not validated, and the specified validation
            options are taken into account.
            </summary>
      <param name="verifySignatureOnly">Specifies whether to only verify the signatures, skipping the certificate validation.</param>
      <param name="options">Certificate validation options (not supported by CertificateChainEngine.Native engine on Xamarin.iOS and Xamarin.Android).</param>
      <param name="certificateEngine">Certificate chain engine.</param>
      <returns>Validation result.</returns>
    </member>
    <member name="M:Rebex.Mail.MailMessage.ValidateSignature(Rebex.Mail.MailSignatureValidationOptions,Rebex.Security.Certificates.ValidationOptions,Rebex.Security.Certificates.CertificateChainEngine)">
      <summary>
            Validates all digital signatures on a signed message with the specified engine.
            The specified validation options are taken into account.
            </summary>
      <param name="signatureValidationOptions">Signature validation options.</param>
      <param name="options">Certificate validation options (not supported by CertificateChainEngine.Native engine on Xamarin.iOS and Xamarin.Android).</param>
      <param name="certificateEngine">Certificate chain engine.</param>
      <returns>Validation result.</returns>
    </member>
    <member name="P:Rebex.Mail.MailMessage.CertificateFinder">
      <summary>
            Gets or sets the <see cref="T:Rebex.Security.Cryptography.Pkcs.ICertificateFinder" /> to be used to find certificates
            used to encrypt or sign the message.
            </summary>
      <value>The certificate finder.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.Silent">
      <summary>
            Gets or sets a value indicating whether cryptographic providers
            are permitted to display any user interface (UI) when working with private keys.
            </summary>
      <value>A value indicating whether a cryptographic provider can display UI.</value>
      <remarks>
            In case of signing, the actual behavior is determined by the combination of this value and the value of
            <see cref="P:Rebex.Mail.MailSignatureParameters.Silent" /> passed to <see cref="O:Rebex.Mail.MailMessage.Sign" /> method.
            Cryptographic operations are only permitted to display a UI if both Silent properties are set to true.
            </remarks>
    </member>
    <member name="P:Rebex.Mail.MailMessage.IsDraft">
      <summary>
            Gets or sets a value indicating whether this mail is considered a Draft.
            This value indicates whether the message can be modified in e-mail clients.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailMessage.ReadOnly">
      <summary>
            Gets a value indicating whether the message is read-only.
            </summary>
      <value>A value indicating whether the message is read-only.</value>
      <remarks>
            Any message that is either signed or encrypted is read-only.
            </remarks>
    </member>
    <member name="P:Rebex.Mail.MailMessage.IsSigned">
      <summary>
            Gets a value indicating whether the message is signed.
            </summary>
      <value>A value indicating whether the message is signed.</value>
      <remarks>
        <p>
            Signers of a signed message are accessible through <see cref="P:Rebex.Mail.MailMessage.Signers" /> collection.
            The signature can be validated using <see cref="M:Rebex.Mail.MailMessage.ValidateSignature" /> method or removed
            using <see cref="M:Rebex.Mail.MailMessage.RemoveSignature" /> method. It is created using <see cref="M:Rebex.Mail.MailMessage.Sign(Rebex.Security.Certificates.Certificate[])" /> method.
            </p>
        <p>
            Please note that messages that are encrypted might also be signed, but because the signature
            itself is also encrypted as well, this fact will not be known until the message is decrypted.
            </p>
      </remarks>
    </member>
    <member name="P:Rebex.Mail.MailMessage.IsEncrypted">
      <summary>
            Gets a value indicating whether the message is encrypted.
            </summary>
      <value>A value indicating whether the message is encrypted.</value>
      <remarks>
        <p>
            Recipients of an encrypted message are accessible through <see cref="P:Rebex.Mail.MailMessage.Recipients" /> collection.
            The message can be decrypted using <see cref="M:Rebex.Mail.MailMessage.Decrypt" /> method. To encrypt a message,
            use <see cref="M:Rebex.Mail.MailMessage.Encrypt(Rebex.Security.Certificates.Certificate[])" /> method.
            </p>
        <p>
            Until an encrypted message is decrypted, its content is inaccessible.
            </p>
      </remarks>
    </member>
    <member name="P:Rebex.Mail.MailMessage.CanDecrypt">
      <summary>
            Gets a value indicating whether the message can be decrypted.
            </summary>
      <value>A value indicating whether the message can be decrypted.</value>
      <remarks>
            An encrypted message can only be decrypted if the corresponding private key are available.
            </remarks>
    </member>
    <member name="P:Rebex.Mail.MailMessage.EncryptionAlgorithm">
      <summary>
            Gets an encryption algorithm used to encrypt an encrypted message.
            </summary>
      <value>An encryption algorithm.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.Recipients">
      <summary>
            Gets the collection of recipients of an encrypted message.
            </summary>
      <value>A collection of recipients.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.Signers">
      <summary>
            Gets the collection of signers of a signed message.
            </summary>
      <value>A collection of signers.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.Date">
      <summary>
            Gets or sets the origination date of this message.
            If origination date is not available, return the date specified by the first 'Received' header.
            </summary>
      <value>The origination date.</value>
      <remarks>
            The origination date specifies the date and time at which the creator
            of the message indicated that the message was complete and ready to enter
            the mail delivery system.
            </remarks>
    </member>
    <member name="P:Rebex.Mail.MailMessage.ReceivedDate">
      <summary>
            Gets the received date of this message.
            </summary>
      <value>The received date.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.From">
      <summary>
            Gets or sets the list of authors of this message.
            </summary>
      <value>The list of authors.</value>
      <remarks>
        <p>
            This property specifies the the list of authors
            of the message.
            </p>
        <p>
            If this field contains multiple authors, the '<see cref="P:Rebex.Mail.MailMessage.Sender" />'
            field must be set to specify the agent responsible for the transmission
            of the message
            </p>
        <p>
            If this field contains a single author that is also the sender
            of the message, the '<see cref="P:Rebex.Mail.MailMessage.Sender" />' field should not be set.
            </p>
      </remarks>
    </member>
    <member name="P:Rebex.Mail.MailMessage.Sender">
      <summary>
            Gets or sets the sender of this message.
            </summary>
      <value>The sender of this message.</value>
      <remarks>
        <p>
            This property specifies the agent responsible for the transmission
            of the message. Use <see cref="P:Rebex.Mail.MailMessage.From" /> to specify the list of authors
            of the message.
            </p>
        <p>
            This field must be set if the '<see cref="P:Rebex.Mail.MailMessage.From" />' field contains multiple
            authors.
            </p>
        <p>
            This field should not be set if the '<see cref="P:Rebex.Mail.MailMessage.From" /> field contains
            a single author that is also the sender of the message.
            </p>
      </remarks>
    </member>
    <member name="P:Rebex.Mail.MailMessage.ReplyTo">
      <summary>
            Gets or sets the list of addresses that should receive replies
            to this message.
            </summary>
      <value>The list of addresses that should receive replies.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.To">
      <summary>
            Gets or sets the list of addresses of primary recipients of the message.
            </summary>
      <value>The list of primary recipients.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.CC">
      <summary>
            Gets the list of addresses of others who are to receive the message.
            </summary>
      <value>The list of other recipients.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.Bcc">
      <summary>
            Gets or sets the list of addresses of recipients that are not to be revealed to other recipients of the message.
            </summary>
      <value>The list of recipients.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.MessageId">
      <summary>
            Gets or sets the unique identifier of the message.
            </summary>
      <value>The unique identifier.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.InReplyTo">
      <summary>
            Gets or sets the list of identifiers of messages to which the message is a reply.
            </summary>
      <value>The list of message identifiers.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.Subject">
      <summary>
            Gets or sets the subject of the message.
            </summary>
      <value>The subject.</value>
      <remarks>
            This property contains a short string identifying the topic
            of the message.
            </remarks>
    </member>
    <member name="P:Rebex.Mail.MailMessage.Headers">
      <summary>
            Gets the list of headers of this entity.
            </summary>
      <value>The list of headers.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.Attachments">
      <summary>
            Gets the collection of attachments of this message.
            </summary>
      <value>A collection of attachments of this message.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.AlternateViews">
      <summary>
            Gets the collection of alternate forms of the message body.
            </summary>
      <value>A collection of alternate forms of the message body.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.Resources">
      <summary>
            Gets the collection of embedded resources referred by message views.
            </summary>
      <value>A collection of embedded resources.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.References">
      <summary>
            Gets or sets the list of identifiers of messages in the same "thread" of conversation.
            </summary>
      <value>The list of message identifiers.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.EnvelopeId">
      <summary>
            Gets or sets the envelope identifier to be transmitted along with the message
            and included in any DSNs issued.
            </summary>
      <value>The envelope identifier.</value>
      <remarks>
        <p>
            The purpose of the envelope identifier is to allow the sender of a message
            to identify the transaction for which the DSN was issued.
            </p>
        <p>
            Please note that the envelope ID is not a part of a mail message and is not saved with it.
            Its purpose is to be used while sending the message.
            </p>
        <p>
            Envelope ID must be an ASCII string up to 100 characters in length.
            Characters &lt; 33 and character '+', '=' and character 127 are represented as three characters.
            </p>
      </remarks>
    </member>
    <member name="P:Rebex.Mail.MailMessage.Priority">
      <summary>
            Gets or sets the priority of the message.
            </summary>
      <value>Message priority.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.HasBodyHtml">
      <summary>
            Gets the value indicating whether the message has a HTML body.
            </summary>
      <value>A value indicating whether the message has a HTML body.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.HasBodyText">
      <summary>
            Gets the value indicating whether the message has a text body.
            </summary>
      <value>A value indicating whether the message has a text body.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.BodyHtml">
      <summary>
            Gets the HTML body of the message, or an empty string if it has no HTML body.
            </summary>
      <value>The HTML body of the message.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.BodyText">
      <summary>
            Gets the text body of the message, or an empty string if it has no text body.
            </summary>
      <value>The text body of the message.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.DefaultCharset">
      <summary>
            Gets or sets the default charset for MIME body and headers.
            </summary>
      <value>Default charset.</value>
      <remarks>
            Only set this if you want to specify your own charset instead of letting the built-in automatic charset detector do its work.
            </remarks>
    </member>
    <member name="P:Rebex.Mail.MailMessage.Options">
      <summary>
            Gets or sets various options for MIME parser and writer.
            </summary>
      <value>MIME parser and writer options.</value>
    </member>
    <member name="P:Rebex.Mail.MailMessage.Settings">
      <summary>
            Gets or sets MailMessage object settings.
            </summary>
      <value>MailMessage object settings.</value>
    </member>
    <member name="E:Rebex.Mail.MailMessage.UnparsableHeader">
      <summary>
            Occurs when an unparsable header is encountered while parsing a MIME message.
            </summary>
    </member>
    <member name="T:Rebex.Mail.MailEncryptionAlgorithm">
      <summary>
            Defines the encryption algorithm used to encrypt mail.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailEncryptionAlgorithm.None">
      <summary>
            No encryption algorithm.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailEncryptionAlgorithm.Unsupported">
      <summary>
            Unsupported encryption algorithm.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailEncryptionAlgorithm.TripleDES">
      <summary>
            3DES.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailEncryptionAlgorithm.DES">
      <summary>
            DES.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailEncryptionAlgorithm.RC2">
      <summary>
            RC2.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailEncryptionAlgorithm.GOST_28147_89">
      <summary>
            GOST 28147-89. Not supported.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailEncryptionAlgorithm.AES128">
      <summary>
            AES (128bit).
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailEncryptionAlgorithm.AES192">
      <summary>
            AES (192bit).
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailEncryptionAlgorithm.AES256">
      <summary>
            AES (256bit).
            </summary>
    </member>
    <member name="T:Rebex.Mail.MailEncryptionPaddingScheme">
      <summary>
            Defines the padding scheme used to encrypt mail.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailEncryptionPaddingScheme.Default">
      <summary>
            Default padding scheme (depends on key algorithm).
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailEncryptionPaddingScheme.Pkcs1">
      <summary>
            PKCS #1 padding scheme (RSAES-PKCS1-v1_5 defined by RFC 3447).
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailEncryptionPaddingScheme.Oaep">
      <summary>
            Optimal Asymmetric Encryption Padding (OAEP) padding scheme (RSAES-OAEP defined by RFC 3447).
            </summary>
    </member>
    <member name="T:Rebex.Mail.MailHashingAlgorithm">
      <summary>
            Defines the hashing algorithm used to sign mail.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailHashingAlgorithm.Default">
      <summary>
            Default hashing algorithm of the certificate used to sign mail.
            </summary>
      <remarks>
        <table>
          <th>
            <td>Key algorithm.</td>
            <td>Default hashing algorithm.</td>
          </th>
          <tr>
            <td>RSA</td>
            <td>SHA-256</td>
          </tr>
          <tr>
            <td>DSA</td>
            <td>SHA-1</td>
          </tr>
          <tr>
            <td>EdDSA</td>
            <td>SHA-512</td>
          </tr>
          <tr>
            <td>ECDSA</td>
            <td>Depends on key size.</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="F:Rebex.Mail.MailHashingAlgorithm.SHA1">
      <summary>
            SHA-1.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailHashingAlgorithm.SHA256">
      <summary>
            SHA-256.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailHashingAlgorithm.SHA384">
      <summary>
            SHA-384.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailHashingAlgorithm.SHA512">
      <summary>
            SHA-512.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailHashingAlgorithm.MD4">
      <summary>
            MD4.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailHashingAlgorithm.MD5">
      <summary>
            MD5.
            </summary>
    </member>
    <member name="T:Rebex.Mail.MailSignaturePaddingScheme">
      <summary>
            Defines the padding scheme used to sign mail.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailSignaturePaddingScheme.Default">
      <summary>
            Default padding scheme (depends on key algorithm).
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailSignaturePaddingScheme.Pkcs1">
      <summary>
            PKCS #1 padding scheme (RSASSA-PKCS1-v1_5 defined by RFC 3447).
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailSignaturePaddingScheme.Pss">
      <summary>
            Probabilistic Signature Scheme (PSS) padding scheme (RSASSA-PSS defined by RFC 3447).
            </summary>
    </member>
    <member name="T:Rebex.Mail.ReplyBodyTransformation">
      <summary>
            Defines how to process the original message body when creating a reply.
            </summary>
    </member>
    <member name="F:Rebex.Mail.ReplyBodyTransformation.None">
      <summary>
            Use a blank body in the new message.
            </summary>
    </member>
    <member name="F:Rebex.Mail.ReplyBodyTransformation.KeepOriginal">
      <summary>
            Copy the original body into the new message.
            </summary>
    </member>
    <member name="F:Rebex.Mail.ReplyBodyTransformation.Attachment">
      <summary>
            Add the original body as an attachment into the new message.
            </summary>
    </member>
    <member name="T:Rebex.Mail.MailSignatureStyle">
      <summary>
            Specifies the style of signed content.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailSignatureStyle.None">
      <summary>No signed content.</summary>
    </member>
    <member name="F:Rebex.Mail.MailSignatureStyle.Detached">
      <summary>
            Detached signature - the mail message will be readable even by clients
            that don't support S/MIME.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailSignatureStyle.Enveloped">
      <summary>
            Enveloped signature - the mail message will only be readable by clients
            that support S/MIME.
            </summary>
    </member>
    <member name="T:Rebex.Mail.MailFormat">
      <summary>
            Specifies mail message file format.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailFormat.Mime">
      <summary>
            Represents a MIME (*.eml) mail message.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailFormat.OutlookMsg">
      <summary>
            Represents an Outlook (*.msg) mail message.
            </summary>
    </member>
    <member name="T:Rebex.Mail.MailSignatureParameters">
      <summary>
            Mail signature parameters.
            </summary>
    </member>
    <member name="M:Rebex.Mail.MailSignatureParameters.#ctor">
      <summary>
            Initializes new instance of <see cref="T:Rebex.Mail.MailSignatureParameters" />.
            </summary>
    </member>
    <member name="M:Rebex.Mail.MailSignatureParameters.#ctor(Rebex.Mail.MailHashingAlgorithm)">
      <summary>
            Initializes new instance of <see cref="T:Rebex.Mail.MailSignatureParameters" />.
            </summary>
      <param name="hashAlgorithm">Signature hashing algorithm.</param>
    </member>
    <member name="M:Rebex.Mail.MailSignatureParameters.#ctor(Rebex.Mail.MailHashingAlgorithm,Rebex.Mail.MailSignatureStyle)">
      <summary>
            Initializes new instance of <see cref="T:Rebex.Mail.MailSignatureParameters" />.
            </summary>
      <param name="hashAlgorithm">Signature hashing algorithm.</param>
      <param name="style">Signature style.</param>
    </member>
    <member name="P:Rebex.Mail.MailSignatureParameters.Style">
      <summary>
            Signature style.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSignatureParameters.HashAlgorithm">
      <summary>
            Hashing algorithm.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSignatureParameters.PaddingScheme">
      <summary>
            Signature padding scheme.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSignatureParameters.SaltLength">
      <summary>
            Salt length in bytes (only used for <see cref="F:Rebex.Mail.MailSignaturePaddingScheme.Pss" />).
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSignatureParameters.Silent">
      <summary>
            Gets or sets a value indicating whether cryptographic providers
            are permitted to display any user interface (UI) when working with private keys.
            Only used for signing operations.
            </summary>
      <remarks>
            If silent operation is requested and the cryptographic provider needs to display a UI to operate, the requested method will fail.
            </remarks>
    </member>
    <member name="T:Rebex.Mail.MailEncryptionParameters">
      <summary>
            Mail encryption parameters.
            </summary>
    </member>
    <member name="M:Rebex.Mail.MailEncryptionParameters.#ctor">
      <summary>
            Initializes new instance of <see cref="T:Rebex.Mail.MailEncryptionParameters" />.
            </summary>
    </member>
    <member name="M:Rebex.Mail.MailEncryptionParameters.#ctor(Rebex.Mail.MailEncryptionAlgorithm)">
      <summary>
            Initializes new instance of <see cref="T:Rebex.Mail.MailEncryptionParameters" />.
            </summary>
      <param name="encryptionAlgorithm">Encryption algorithm.</param>
    </member>
    <member name="P:Rebex.Mail.MailEncryptionParameters.EncryptionAlgorithm">
      <summary>
            Encryption algorithm.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailEncryptionParameters.PaddingScheme">
      <summary>
            Encryption padding scheme.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailEncryptionParameters.HashAlgorithm">
      <summary>
            Hashing algorithm for padding generation (only used for <see cref="F:Rebex.Mail.MailEncryptionPaddingScheme.Oaep" />).
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailEncryptionParameters.Label">
      <summary>
            Optional input parameter for <see cref="F:Rebex.Mail.MailEncryptionPaddingScheme.Oaep" />.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailEncryptionParameters.Silent">
      <summary>
            This property is deprecated and has no effect.
            </summary>
    </member>
    <member name="T:Rebex.Mail.MailPriority">
      <summary>
            Mail message priority.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailPriority.Low">
      <summary>
            Low priority.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailPriority.Normal">
      <summary>
            Normal priority.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailPriority.High">
      <summary>
            High priority.
            </summary>
    </member>
    <member name="T:Rebex.Mail.MailSettings">
      <summary>
            Specifies various MailMessage settings.
            </summary>
    </member>
    <member name="M:Rebex.Mail.MailSettings.#ctor">
      <summary>
            Creates an instance of MailSettings.
            </summary>
    </member>
    <member name="M:Rebex.Mail.MailSettings.Clone">
      <summary>
            Creates a new object that is a shallow copy of the current instance.
            </summary>
      <returns>A new object that is a shallow copy of the current instance.</returns>
    </member>
    <member name="P:Rebex.Mail.MailSettings.DoNotParseMimeTree">
      <summary>
            Ignore the MIME tree and parse the message as a single-level entity.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSettings.ProcessAllHeaders">
      <summary>
            Parse and reencode all headers, even when not needed or modified.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSettings.IgnoreUnparsableHeaders">
      <summary>
            Ignore unparsable headers when parsing mail message.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSettings.AlwaysWriteContentTransferEncoding">
      <summary>
            Always write the content-transfer-encoding, even if it has default value of "7bit"
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSettings.IgnoreUnparsableSignatures">
      <summary>
            Ignore unparsable S/MIME signature entities when parsing mail message.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSettings.DoNotQuoteProblematicSequences">
      <summary>
            Disable encoding of leading 'F', '.' and '-' character in body parts using quoted-printable content transfer encoding.
            These leading characters used to cause problems to legacy mail transfer agents, so quoted-printable-encoding them was used
            as a workaround that doesn't cause any problems to properly-implemented mail agents.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSettings.OnlyParseHeaders">
      <summary>
            Only parse message headers and ignore the body.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSettings.DoNotAddDateIfNoSubjectAndFrom">
      <summary>
            Do not automatically add a date header if 'date', 'subject' or 'from' headers are missing from a top-level or embedded message.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSettings.DisableEncryptionKeyPreference">
      <summary>
            Do not include encryption key preference attribute in signed message attributes.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSettings.DisableSMimeCapabilitiesAttribute">
      <summary>
            Do not include S/MIME options attribute in signed message attributes.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSettings.SkipCertificateUsageCheck">
      <summary>
            Skip certificate usage check.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSettings.IgnoreInvalidTnefMessages">
      <summary>
            Ignore invalid TNEF (winmail.dat) attachments when parsing mail message.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSettings.SkipSenderCheck">
      <summary>
            Skip sender check.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSettings.DisableSinglePartHtmlWorkaround">
      <summary>
            Disable a workaround for broken mail clients such as Mac mail that don't correctly parse HTML-only messages.
            By default, MailMessage class constructs a single-part multipart/alternative structure to solve this. This property
            turns off this behavior.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSettings.LoadMsgProperties">
      <summary>
            Load Outlook MSG properties into custom MIME headers.
            All these MIME headers start with X-Outlook- string.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSettings.SkipTnefMessageProcessing">
      <summary>
            Skip TNEF (winmail.dat) attachment processing. If specified, the 'winmail.dat' attachment is not processed at all.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSettings.PreferExplicitBody">
      <summary>
            Prefer BodyText and BodyHtml to be taken from its original .msg message fields.
            Default is false, which means BodyText and BodyHtml are taken from BodyRtf if possible (if embedded).
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSettings.RtfMode">
      <summary>
            The mode to process RTF in mails.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSettings.IgnoreMsgTransportHeaders">
      <summary>
            Ignore TransportMessageHeaders field when loading .msg file.
            If set to true, some fields are taken directly from the .msg structure instead of the TransportMessageHeaders field.
            The affected fields are: Sender, From, To, CC, Bcc, Subject, Date, MessageId.
            Any MIME headers stored in TransportMessageHeaders field are not loaded either.
            </summary>
    </member>
    <member name="P:Rebex.Mail.MailSettings.TreatMixedInlineAsAttachment">
      <summary>
            Treat sub-entities of 'multipart/mixed' as attachments even if their Content-Disposition is 'inline'.
            </summary>
    </member>
    <member name="T:Rebex.Mail.RtfProcessingMode">
      <summary>
            The mode to process RTF mails.
            </summary>
    </member>
    <member name="F:Rebex.Mail.RtfProcessingMode.Default">
      <summary>
            Convert RTF to HTML and discard the RTF in case of successful conversion.
            In case of unsuccessful conversion, the RTF is kept as attachment (with the "X-Rebex-RTF-Body" header set).
            This is the default behavior.
            </summary>
    </member>
    <member name="F:Rebex.Mail.RtfProcessingMode.TreatAsAttachment">
      <summary>
            RTF is not converted into HTML and is always treated as attachment. The appropriate "X-Rebex-RTF-Body" header is set.
            </summary>
    </member>
    <member name="F:Rebex.Mail.RtfProcessingMode.Legacy">
      <summary>
            Legacy mode that turns on the legacy behavior.
            RTF is converted to HTML and kept either as Attachment (for binary RTF's) or as AlternateView (for non-binary RTF's).
            In case that RTF is added as attachment, then the "X-Rebex-RTF-Body" header is set.
            </summary>
    </member>
    <member name="T:Rebex.Mail.MailSignatureStatus">
      <summary>
            Mail signature status.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailSignatureStatus.CertificateNotValid">
      <summary>The certificate is not valid.</summary>
    </member>
    <member name="F:Rebex.Mail.MailSignatureStatus.CertificateNotAvailable">
      <summary>Certificate is not available.</summary>
    </member>
    <member name="F:Rebex.Mail.MailSignatureStatus.SignatureNotValid">
      <summary>The signature is not valid.</summary>
    </member>
    <member name="F:Rebex.Mail.MailSignatureStatus.MissingSender">
      <summary>There was not sender in the message.</summary>
    </member>
    <member name="F:Rebex.Mail.MailSignatureStatus.SenderSignatureMissing">
      <summary>A signature for one of the originators (from 'Sender' or 'From' headers) is missing.</summary>
    </member>
    <member name="T:Rebex.Mail.MailSignatureValidationOptions">
      <summary>
            Mail signature validation options.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailSignatureValidationOptions.SkipHeaderCheck">
      <summary>
            Skip 'Sender' and 'From' headers check.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailSignatureValidationOptions.SkipCertificateCheck">
      <summary>
            Skip certificate validation.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailSignatureValidationOptions.IgnoreMissingNonSenderOriginators">
      <summary>
            If the 'Sender' header is present and OK, missing 'From' signers will not cause the validation to fail.
            </summary>
    </member>
    <member name="T:Rebex.Mail.MailSignatureValidity">
      <summary>
            Represents the result of message signature validation.
            </summary>
    </member>
    <member name="M:Rebex.Mail.MailSignatureValidity.GetMissingSignatures">
      <summary>
            Returns a list of e-mail addresses whose signatures are missing.
            </summary>
      <value>A list of e-mail addresses whose signatures are missing.</value>
    </member>
    <member name="P:Rebex.Mail.MailSignatureValidity.Status">
      <summary>
            Gets the validity status mask.
            </summary>
      <value>Validity status mask.</value>
    </member>
    <member name="P:Rebex.Mail.MailSignatureValidity.SignatureValidationStatus">
      <summary>
            Gets the signature validity status mask.
            </summary>
      <value>Signature validity status mask.</value>
    </member>
    <member name="P:Rebex.Mail.MailSignatureValidity.CertificateValidationStatus">
      <summary>
            Gets the certificate validation status mask.
            </summary>
      <value>Certificate validation status mask.</value>
    </member>
    <member name="P:Rebex.Mail.MailSignatureValidity.Valid">
      <summary>
            Gets the certificate chain validity status.
            </summary>
      <value>True if valid, false if not valid.</value>
    </member>
    <member name="T:Rebex.Mail.MailServerType">
      <summary>
            Represents mail server type.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MailServerType.None">
      <summary>No server.</summary>
    </member>
    <member name="F:Rebex.Mail.MailServerType.Iis">
      <summary>Microsoft IIS SMTP server. Only supported on Windows platform.</summary>
    </member>
    <member name="T:Rebex.Mail.MailSpool">
      <summary>
            Utility class that contains mail server spool related static methods.
            </summary>
    </member>
    <member name="M:Rebex.Mail.MailSpool.Send(Rebex.Mail.MailServerType,Rebex.Mime.MimeMessage,System.String)">
      <summary>
            Sends the message by submitting it into the MS IIS SMTP service's pickup directory.
            </summary>
      <param name="message">Message to be sent.</param>
      <param name="serverType">Server type.</param>
      <param name="pickupDirectory">The pickup directory to submit the message to (or null to detect automatically on Windows platforms).</param>
      <remarks>
            Microsoft SMTP service must be running at the computer where the code runs in order for this method to work.
            </remarks>
    </member>
    <member name="M:Rebex.Mail.MailSpool.Send(Rebex.Mail.MailServerType,Rebex.Mime.MimeMessage)">
      <summary>
            Sends the message by submitting it into the MS IIS SMTP service's pickup directory.
            </summary>
      <param name="message">Message to be sent.</param>
      <param name="serverType">Server type.</param>
      <remarks>
            Microsoft SMTP service must be running at the computer where the code runs in order for this method to work.
            </remarks>
    </member>
    <member name="M:Rebex.Mail.MailSpool.SendViaIis(Rebex.Mail.MailServerType,Rebex.Mail.MailMessage,System.String)">
      <summary>
            Sends the message by submitting it into the MS IIS SMTP service's pickup directory.
            </summary>
      <param name="message">Message to be sent.</param>
      <param name="serverType">Server type.</param>
      <param name="pickupDirectory">The pickup directory to submit the message to, or null to detect automatically.</param>
      <remarks>
            Microsoft SMTP service must be running at the computer where the code runs in order for this method to work.
            </remarks>
    </member>
    <member name="M:Rebex.Mail.MailSpool.Send(Rebex.Mail.MailServerType,Rebex.Mail.MailMessage,System.String)">
      <summary>
            Sends the message by submitting it into the MS IIS SMTP service's pickup directory.
            </summary>
      <param name="message">Message to be sent.</param>
      <param name="serverType">Server type.</param>
      <param name="pickupDirectory">The pickup directory to submit the message to, or null to detect automatically.</param>
      <remarks>
            Microsoft SMTP service must be running at the computer where the code runs in order for this method to work.
            </remarks>
    </member>
    <member name="M:Rebex.Mail.MailSpool.Send(Rebex.Mail.MailServerType,Rebex.Mail.MailMessage)">
      <summary>
            Sends the message by submitting it into the MS IIS SMTP service's pickup directory.
            </summary>
      <param name="message">Message to be sent.</param>
      <param name="serverType">Server type.</param>
      <remarks>
            Microsoft SMTP service must be running at the computer where the code runs in order for this method to work.
            </remarks>
    </member>
    <member name="T:Rebex.Mail.MediaTypeNames">
      <summary>
            Contains string representations of the common media types.
            </summary>
    </member>
    <member name="T:Rebex.Mail.MediaTypeNames.Application">
      <summary>
            Contains string representations of the common subtypes of 'application' type.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Application.Octet">
      <summary>"application/octet-stream"</summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Application.Zip">
      <summary>"application/zip"</summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Application.Pdf">
      <summary>"application/pdf"</summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Application.Rtf">
      <summary>"application/rtf"</summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Application.Soap">
      <summary>"application/soap+xml"</summary>
    </member>
    <member name="T:Rebex.Mail.MediaTypeNames.Image">
      <summary>
            Contains string representations of the common subtypes of 'image' type.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Image.Png">
      <summary>"image/png"</summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Image.Jpeg">
      <summary>"image/jpeg"</summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Image.Gif">
      <summary>"image/gif"</summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Image.Tiff">
      <summary>"image/tiff"</summary>
    </member>
    <member name="T:Rebex.Mail.MediaTypeNames.Text">
      <summary>
            Contains string representations of the common subtypes of 'text' type.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Text.Plain">
      <summary>"text/plain"</summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Text.Html">
      <summary>"text/html"</summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Text.Xml">
      <summary>"text/xml"</summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Text.Rtf">
      <summary>"text/rtf"</summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Text.Enriched">
      <summary>"text/enriched"</summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Text.RichText">
      <summary>"text/richtext"</summary>
    </member>
    <member name="T:Rebex.Mail.MediaTypeNames.Multipart">
      <summary>
            Contains string representations of the common subtypes of 'multipart' type.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Multipart.Mixed">
      <summary>"multipart/mixed"</summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Multipart.Alternative">
      <summary>"multipart/alternative"</summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Multipart.Digest">
      <summary>"multipart/digest"</summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Multipart.Related">
      <summary>"multipart/related"</summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Multipart.Parallel">
      <summary>"multipart/parallel"</summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Multipart.Report">
      <summary>"multipart/report"</summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Multipart.Signed">
      <summary>"multipart/signed"</summary>
    </member>
    <member name="T:Rebex.Mail.MediaTypeNames.Message">
      <summary>
            Contains string representations of the common subtypes of 'message' type.
            </summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Message.Rfc822">
      <summary>"message/rfc822"</summary>
    </member>
    <member name="F:Rebex.Mail.MediaTypeNames.Message.Partial">
      <summary>"message/partial"</summary>
    </member>
    <member name="T:Rebex.Mime.Headers.ContentDisposition">
      <summary>
            Represents the content disposition of a MIME entity.
            </summary>
      <remarks>
            Represents the <c>Content-Disposition</c> MIME header defined by RFC 2183.
            </remarks>
    </member>
    <member name="T:Rebex.Mime.Headers.IHeader">
      <summary>
            Common interface of all message header values.
            </summary>
      <remarks>
            Provides a method to write an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.Headers.IHeader.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.IHeader.Clone">
      <summary>
            Creates a copy of the header.
            </summary>
      <returns>A copy of the header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentDisposition.#ctor(System.String)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.ContentDisposition" /> header value
            with the specified disposition type.
            </summary>
      <param name="dispositionType">A dispositin type.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentDisposition.Clone">
      <summary>
            Creates a copy of the header.
            </summary>
      <returns>A copy of the header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentDisposition.ToString">
      <summary>
            Converts the value of this header to its <see cref="T:System.String" /> representation.
            </summary>
      <returns>A <see cref="T:System.String" /> representing the value of this header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentDisposition.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentDisposition.GetHashCode">
      <summary>
            Serves as a hash function for a particular type, suitable
            for use in hashing algorithms and data structures like a hash table.
            </summary>
      <returns>
            A hash code for the current <see cref="T:Rebex.Mime.Headers.ContentDisposition" />.
            </returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentDisposition.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:Rebex.Mime.Headers.ContentDisposition" /> is equal to the current <see cref="T:Rebex.Mime.Headers.ContentDisposition" />.
            </summary>
      <param name="obj">The <see cref="T:Rebex.Mime.Headers.ContentDisposition" /> to compare with the current <see cref="T:Rebex.Mime.Headers.ContentDisposition" />.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:Rebex.Mime.Headers.ContentDisposition" /> is equal to the
            current <see cref="T:Rebex.Mime.Headers.ContentDisposition" />; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:Rebex.Mime.Headers.ContentDisposition.Disposition">
      <summary>
            Gets the disposition.
            </summary>
      <value>A disposition.</value>
    </member>
    <member name="P:Rebex.Mime.Headers.ContentDisposition.Inline">
      <summary>
            Determines whether the content disposition is inline.
            </summary>
      <value>True if inline; false if attachment.</value>
    </member>
    <member name="P:Rebex.Mime.Headers.ContentDisposition.Parameters">
      <summary>
            Gets the list of parameters of this content disposition.
            </summary>
      <value>The list of parameters.</value>
    </member>
    <member name="P:Rebex.Mime.Headers.ContentDisposition.FileName">
      <summary>
            Gets or sets the file name of the attachment. 
            </summary>
      <value>The file name of the attachment. Empty string if not specified.</value>
      <remarks>
            https://tools.ietf.org/html/rfc2183#section-2.3
            </remarks>
    </member>
    <member name="P:Rebex.Mime.Headers.ContentDisposition.ReadDate">
      <summary>
            Gets or sets the read date of the attachment. This parameter is rarely used.
            </summary>
      <value>The read date of the attachment. Null reference (Nothing in Visual Basic) if not specified.</value>
      <remarks>
            The read-date parameter MAY be used to indicate the date at which the file was last read.
            If the read-date parameter is included, the parameter value MUST be a quoted-string which 
            contains a representation of the last-read date of the file in [RFC 822] `date-time' format.
            https://tools.ietf.org/html/rfc2183#section-2.6
            </remarks>
    </member>
    <member name="P:Rebex.Mime.Headers.ContentDisposition.CreationDate">
      <summary>
            Gets or sets the creation date of the attachment. This parameter is rarely used.
            </summary>
      <value>The creation date of the attachment. Null reference (Nothing in Visual Basic) if not specified.</value>
      <remarks>
            The creation-date parameter MAY be used to indicate the date at which the file was created.
            If this parameter is included, the paramter value MUST be a quoted-string which 
            contains a representation of the creation date of the file in [RFC 822] `date-time' format.
            https://tools.ietf.org/html/rfc2183#section-2.4
            </remarks>
    </member>
    <member name="P:Rebex.Mime.Headers.ContentDisposition.ModificationDate">
      <summary>
            Gets or sets the modification date of the attachment. This parameter is rarely used.
            </summary>
      <value>The modification date of the attachment. Null reference (Nothing in Visual Basic) if not specified.</value>
      <remarks>
            The modification-date parameter MAY be used to indicate the date at which the file was last modified.
            If the modification-date parameter is included, the paramter value MUST be a quoted-string which
            contains a representation of the last modification date of the file in [RFC 822] `date-time' format.
            https://tools.ietf.org/html/rfc2183#section-2.5
            </remarks>
    </member>
    <member name="P:Rebex.Mime.Headers.ContentDisposition.Size">
      <summary>
            Gets or sets the approximate size of the attachment. This parameter is rarely used.
            </summary>
      <value>The approximate size of the attachment. Null reference (Nothing in Visual Basic) if not specified.</value>
      <remarks>
            The size parameter indicates an approximate size of the file in octets.
            It can be used, for example, to pre-allocate space before attempting to store the file, 
            or to determine whether enough space exists.
            https://tools.ietf.org/html/rfc2183#section-2.7
            </remarks>
    </member>
    <member name="T:Rebex.Mime.Headers.ContentLocation">
      <summary>
            Represents the content location of a MIME entity.
            </summary>
      <remarks>
            Represents the <c>Content-Location</c> MIME header defined by RFC 2557.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentLocation.#ctor(System.String)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.ContentLocation" /> header value
            with the specified location (typically an URL).
            </summary>
      <param name="location">Location. Typically an URL.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentLocation.Clone">
      <summary>
            Creates a copy of the header.
            </summary>
      <returns>A copy of the header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentLocation.ToString">
      <summary>
            Converts the value of this header to its <see cref="T:System.String" /> representation.
            </summary>
      <returns>A <see cref="T:System.String" /> representing the value of this header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentLocation.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentLocation.GetHashCode">
      <summary>
            Serves as a hash function for a particular type, suitable
            for use in hashing algorithms and data structures like a hash table.
            </summary>
      <returns>
            A hash code for the current <see cref="T:Rebex.Mime.Headers.ContentLocation" />.
            </returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentLocation.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:Rebex.Mime.Headers.ContentLocation" /> is equal to the current <see cref="T:Rebex.Mime.Headers.ContentLocation" />.
            </summary>
      <param name="obj">The <see cref="T:Rebex.Mime.Headers.ContentLocation" /> to compare with the current <see cref="T:Rebex.Mime.Headers.ContentLocation" />.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:Rebex.Mime.Headers.ContentLocation" /> is equal to the
            current <see cref="T:Rebex.Mime.Headers.ContentLocation" />; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:Rebex.Mime.Headers.ContentLocation.Location">
      <summary>
            Gets the location value, typically an URL.
            </summary>
      <value>
            Location value, typically an URL.
            </value>
    </member>
    <member name="T:Rebex.Mime.Headers.ContentTransferEncoding">
      <summary>
            Represents the content transfer encoding of a MIME entity.
            </summary>
      <remarks>
            Represents the <c>Content-Transfer-Encoding</c> MIME header defined by RFC 2045.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentTransferEncoding.Clone">
      <summary>
            Creates a copy of the header.
            </summary>
      <returns>A copy of the header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentTransferEncoding.#ctor(Rebex.Mime.TransferEncoding)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.ContentTransferEncoding" /> header value
            with the specified transfer encoding.
            </summary>
      <param name="transferEncoding">Transfer encoding.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentTransferEncoding.ToString">
      <summary>
            Converts the value of this header to its <see cref="T:System.String" /> representation.
            </summary>
      <returns>A <see cref="T:System.String" /> representing the value of this header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentTransferEncoding.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentTransferEncoding.GetHashCode">
      <summary>
            Serves as a hash function for a particular type, suitable
            for use in hashing algorithms and data structures like a hash table.
            </summary>
      <returns>
            A hash code for the current <see cref="T:Rebex.Mime.Headers.ContentTransferEncoding" />.
            </returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentTransferEncoding.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:Rebex.Mime.Headers.ContentTransferEncoding" /> is equal to the current <see cref="T:Rebex.Mime.Headers.ContentTransferEncoding" />.
            </summary>
      <param name="obj">The <see cref="T:Rebex.Mime.Headers.ContentTransferEncoding" /> to compare with the current <see cref="T:Rebex.Mime.Headers.ContentTransferEncoding" />.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:Rebex.Mime.Headers.ContentTransferEncoding" /> is equal to the
            current <see cref="T:Rebex.Mime.Headers.ContentTransferEncoding" />; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentTransferEncoding.CreateDecodingStream(System.IO.Stream)">
      <summary>
            Creates a decoding stream for the transfer encoding.
            </summary>
      <param name="output">Stream that will receive decoded data.</param>
      <returns>Stream to write encoded data to.</returns>
    </member>
    <member name="P:Rebex.Mime.Headers.ContentTransferEncoding.IsKnown">
      <summary>
            Determines whether the transfer encoding is known.
            </summary>
      <value>
            True if the value of this object is
            "7bit", "8bit", "binary", "quoted-printable" or "base64";
            false otherwise.
            </value>
    </member>
    <member name="P:Rebex.Mime.Headers.ContentTransferEncoding.Encoding">
      <summary>
            Gets the transfer encoding.
            </summary>
      <value>Transfer encoding.</value>
    </member>
    <member name="T:Rebex.Mime.Headers.ContentType">
      <summary>
            Represents the content type of a MIME entity.
            </summary>
      <remarks>
            Represents the <c>Content-Type</c> MIME header defined by RFC 2045.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentType.#ctor(System.String)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.ContentType" /> header value
            with the specified media type.
            </summary>
      <param name="mediaType">Value of the unstructured header.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentType.Clone">
      <summary>
            Creates a copy of the header.
            </summary>
      <returns>A copy of the header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentType.ToString">
      <summary>
            Converts the value of this header to its <see cref="T:System.String" /> representation.
            </summary>
      <returns>A <see cref="T:System.String" /> representing the value of this header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentType.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentType.GetHashCode">
      <summary>
            Serves as a hash function for a particular type, suitable
            for use in hashing algorithms and data structures like a hash table.
            </summary>
      <returns>
            A hash code for the current <see cref="T:Rebex.Mime.Headers.ContentType" />.
            </returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ContentType.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:Rebex.Mime.Headers.ContentType" /> is equal to the current <see cref="T:Rebex.Mime.Headers.ContentType" />.
            </summary>
      <param name="obj">The <see cref="T:Rebex.Mime.Headers.ContentType" /> to compare with the current <see cref="T:Rebex.Mime.Headers.ContentType" />.</param>
      <returns>
        <see langword="true" /> if the specified <see cref="T:Rebex.Mime.Headers.ContentType" /> is equal to the
            current <see cref="T:Rebex.Mime.Headers.ContentType" />; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="P:Rebex.Mime.Headers.ContentType.MediaType">
      <summary>
            Gets the internet media type in the format of 'type/subtype'.
            </summary>
      <value>
            An internet media type.
            </value>
    </member>
    <member name="P:Rebex.Mime.Headers.ContentType.Parameters">
      <summary>
            Gets the list of parameters of this content type.
            </summary>
      <value>The list of parameters.</value>
    </member>
    <member name="P:Rebex.Mime.Headers.ContentType.Boundary">
      <summary>
            Gets or sets the 'boundary' parameter of this content type.
            </summary>
      <value>The 'boundary' parameter.</value>
    </member>
    <member name="P:Rebex.Mime.Headers.ContentType.CharSet">
      <summary>
            Gets or sets the 'charset' parameter of this content type.
            </summary>
      <value>The 'charset' parameter.</value>
    </member>
    <member name="P:Rebex.Mime.Headers.ContentType.Encoding">
      <summary>
            Gets the 'charset' of this content type to <see cref="P:Rebex.Mime.Headers.ContentType.Encoding" />.
            </summary>
      <returns>The encoding, or null if no charset or unknown charset is set.</returns>
    </member>
    <member name="T:Rebex.Mime.Headers.HeaderValueCollection">
      <summary>
            Represents the collection of header values.
            </summary>
    </member>
    <member name="M:Rebex.Mime.Headers.HeaderValueCollection.Clear">
      <summary>
            Removes all items from the list.
            </summary>
    </member>
    <member name="M:Rebex.Mime.Headers.HeaderValueCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the item at the specified index from the list.
            </summary>
      <param name="index">A zero-based index of an item to remove.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.HeaderValueCollection.AddRange(System.Collections.ICollection)">
      <summary>
            Adds a range of items contained in the specified collection.
            </summary>
      <param name="collection">Collection of items to be added.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.HeaderValueCollection.GetEnumerator">
      <summary>
            Gets an <see cref="T:System.Collections.IEnumerator" /> for the collection.
            </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the collection.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.HeaderValueCollection.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.HeaderValueCollection.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies the range of elements from the <see cref="T:Rebex.Mime.Headers.HeaderValueCollection" /> to a compatible one-dimensional
            <see cref="T:System.Array" />, starting at the specified index of the target array.
            </summary>
      <param name="array">One-dimensional zero-based array that is the destination of the elements copied from <see cref="T:Rebex.Mime.Headers.HeaderValueCollection" />.</param>
      <param name="index">A zero-based index in the destination array at which copying begins.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.HeaderValueCollection.Clone">
      <summary>
            Creates a copy of the header.
            </summary>
      <returns>A copy of the header.</returns>
    </member>
    <member name="P:Rebex.Mime.Headers.HeaderValueCollection.Count">
      <summary>
            Gets the number of items in the collection.
            </summary>
      <value>The number of items is the collection.</value>
    </member>
    <member name="P:Rebex.Mime.Headers.HeaderValueCollection.IsSynchronized">
      <summary>
            Gets a value indicating whether access to <see cref="T:Rebex.Mime.Headers.HeaderValueCollection" /> is synchronized (thread-safe).
            </summary>
      <value>A value indicating whether access to <see cref="T:Rebex.Mime.Headers.HeaderValueCollection" /> is synchronized.</value>
    </member>
    <member name="P:Rebex.Mime.Headers.HeaderValueCollection.SyncRoot">
      <summary>
            Gets an object that can be used to synchronize access to <see cref="T:Rebex.Mime.Headers.HeaderValueCollection" /> object.
            </summary>
      <value>an object that can be used to synchronize access to <see cref="T:Rebex.Mime.Headers.HeaderValueCollection" /> object.</value>
    </member>
    <member name="T:Rebex.Mime.Headers.ListCommandUrl">
      <summary>
            Represents a single URL of any of various 'List-*:' headers.
            </summary>
      <remarks>
            Represents a single URL defined by RFC 2369.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.Headers.ListCommandUrl.#ctor(System.Uri)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.ListCommandUrl" /> header value
            with the specified URL.
            </summary>
      <param name="url">URL.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.ListCommandUrl.#ctor(System.String)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.ListCommandUrl" /> header value
            with the specified URL.
            </summary>
      <param name="url">URL.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.ListCommandUrl.op_Implicit(System.Uri)~Rebex.Mime.Headers.ListCommandUrl">
      <summary>
            Converts a <see cref="T:System.String" /> to a <see cref="T:Rebex.Mime.Headers.ListCommandUrl" />.
            </summary>
      <param name="url">A single URL.</param>
      <returns>A <see cref="T:Rebex.Mime.Headers.ListCommandUrl" />.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ListCommandUrl.Clone">
      <summary>
            Creates a copy of the header.
            </summary>
      <returns>A copy of the header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ListCommandUrl.ToString">
      <summary>
            Converts the value of this header to its <see cref="T:System.String" /> representation.
            </summary>
      <returns>A <see cref="T:System.String" /> representing the value of this header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ListCommandUrl.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="P:Rebex.Mime.Headers.ListCommandUrl.Url">
      <summary>
            Gets the URL of this header value.
            </summary>
      <value>An URL.</value>
    </member>
    <member name="T:Rebex.Mime.Headers.ListCommandUrlCollection">
      <summary>
            Represents the collection of <see cref="T:Rebex.Mime.Headers.ListCommandUrl" /> objects.
            </summary>
      <remarks>
            Represents the <c>List-*</c> structured header defined by RFC 2369.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.Headers.ListCommandUrlCollection.#ctor">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.ListCommandUrlCollection" />.
            </summary>
    </member>
    <member name="M:Rebex.Mime.Headers.ListCommandUrlCollection.op_Implicit(Rebex.Mime.Headers.ListCommandUrl)~Rebex.Mime.Headers.ListCommandUrlCollection">
      <summary>
            Converts a <see cref="T:Rebex.Mime.Headers.ListCommandUrl" /> to a <see cref="T:Rebex.Mime.Headers.ListCommandUrlCollection" />.
            </summary>
      <param name="url">A single <see cref="T:Rebex.Mime.Headers.ListCommandUrl" />.</param>
      <returns>A <see cref="T:Rebex.Mime.Headers.ListCommandUrlCollection" />.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ListCommandUrlCollection.op_Implicit(System.String)~Rebex.Mime.Headers.ListCommandUrlCollection">
      <summary>
            Converts a <see cref="T:System.String" /> to a <see cref="T:Rebex.Mime.Headers.ListCommandUrlCollection" />.
            </summary>
      <param name="urls">A list of URLs.</param>
      <returns>A <see cref="T:Rebex.Mime.Headers.ListCommandUrlCollection" />.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ListCommandUrlCollection.Add(Rebex.Mime.Headers.ListCommandUrl)">
      <summary>
            Adds a <see cref="T:Rebex.Mime.Headers.ListCommandUrl" /> to the end of the list.
            </summary>
      <param name="url">A <see cref="T:Rebex.Mime.Headers.ListCommandUrl" /> to be added.</param>
      <returns>The index at which the URL has been added.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ListCommandUrlCollection.ToString">
      <summary>
            Converts the value of this header to its <see cref="T:System.String" /> representation.
            </summary>
      <returns>A <see cref="T:System.String" /> representing the value of this header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ListCommandUrlCollection.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.ListCommandUrlCollection.CopyTo(Rebex.Mime.Headers.ListCommandUrl[],System.Int32)">
      <summary>
            Copies the range of elements from the <see cref="T:Rebex.Mime.Headers.ListCommandUrlCollection" /> to a compatible one-dimensional
            array, starting at the specified index of the target array.
            </summary>
      <param name="array">One-dimensional zero-based array that is the destination of the elements copied from <see cref="T:Rebex.Mime.Headers.ListCommandUrlCollection" />.</param>
      <param name="index">A zero-based index in the destination array at which copying begins.</param>
    </member>
    <member name="P:Rebex.Mime.Headers.ListCommandUrlCollection.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:Rebex.Mime.Headers.ListCommandUrl" /> at the specified index.
            </summary>
      <param name="index">The zero-based index of the <see cref="T:Rebex.Mime.Headers.ListCommandUrl" /> to get or set.</param>
      <value>An URL.</value>
    </member>
    <member name="T:Rebex.Mime.Headers.MailAddress">
      <summary>
            Represents a mailbox that consists of address and a display name.
            </summary>
      <remarks>
            Represents the <c>mailbox</c> structured header defined by RFC 2822.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.Headers.MailAddress.#ctor(System.String)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.MailAddress" /> header value
            with the specified mail address.
            </summary>
      <param name="address">Mail address and (optionally) display name. Typically 'name.surname@company.net' or 'Name Surname &lt;name.surname@company.net&gt;' or '"Name Surname" &lt;name.surname@company.net&gt;'.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.MailAddress.#ctor(System.String,System.Boolean)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.MailAddress" /> header value
            with the specified mail address.
            </summary>
      <param name="address">Mail address and (optionally) display name. Typically 'name.surname@company.net' or 'Name Surname &lt;name.surname@company.net&gt;' or '"Name Surname" &lt;name.surname@company.net&gt;'.</param>
      <param name="omitBrackets">Setting to true omits the angle brackets when encoding the email address.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.MailAddress.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.MailAddress" /> header value
            with the specified mail address and display name.
            </summary>
      <param name="address">Mail address.</param>
      <param name="displayName">Display name.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.MailAddress.op_Implicit(System.String)~Rebex.Mime.Headers.MailAddress">
      <summary>
            Converts a <see cref="T:System.String" /> to a <see cref="T:Rebex.Mime.Headers.MailAddress" />.
            </summary>
      <param name="address">A single address and possibly a display name.</param>
      <returns>A <see cref="T:Rebex.Mime.Headers.MailAddress" />.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MailAddress.Clone">
      <summary>
            Creates a copy of the header.
            </summary>
      <returns>A copy of the header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MailAddress.ToString">
      <summary>
            Converts the value of this header to its <see cref="T:System.String" /> representation.
            </summary>
      <returns>A <see cref="T:System.String" /> representing the value of this header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MailAddress.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="P:Rebex.Mime.Headers.MailAddress.DisplayName">
      <summary>
            Gets the display name of this mailbox.
            </summary>
      <value>
            A display name.
            </value>
    </member>
    <member name="P:Rebex.Mime.Headers.MailAddress.Address">
      <summary>
            Gets the mail address of this mailbox.
            </summary>
      <value>The mail address.</value>
    </member>
    <member name="P:Rebex.Mime.Headers.MailAddress.User">
      <summary>
            Gets the local part of this mailbox.
            </summary>
      <value>The username.</value>
    </member>
    <member name="P:Rebex.Mime.Headers.MailAddress.Host">
      <summary>
            Gets the domain of this mailbox.
            </summary>
      <value>The hostname.</value>
    </member>
    <member name="T:Rebex.Mime.Headers.MailAddressCollection">
      <summary>
            Represents the collection of <see cref="T:Rebex.Mime.Headers.MailAddress" /> objects.
            </summary>
      <remarks>
            Represents the <c>mailbox-list</c> structured header defined by RFC 2822.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.Headers.MailAddressCollection.#ctor">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.MailAddressCollection" />.
            </summary>
    </member>
    <member name="M:Rebex.Mime.Headers.MailAddressCollection.#ctor(System.String)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.MailAddressCollection" /> filled with the specified list of mailboxes.
            </summary>
      <param name="addresses">List of addresses to parse (separated by comma or colon).</param>
    </member>
    <member name="M:Rebex.Mime.Headers.MailAddressCollection.op_Implicit(Rebex.Mime.Headers.MailAddress)~Rebex.Mime.Headers.MailAddressCollection">
      <summary>
            Converts a <see cref="T:Rebex.Mime.Headers.MailAddress" /> to a <see cref="T:Rebex.Mime.Headers.MailAddressCollection" />.
            </summary>
      <param name="mailbox">A single <see cref="T:Rebex.Mime.Headers.MailAddress" />.</param>
      <returns>A <see cref="T:Rebex.Mime.Headers.MailAddressCollection" />.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MailAddressCollection.op_Implicit(System.String)~Rebex.Mime.Headers.MailAddressCollection">
      <summary>
            Converts a <see cref="T:System.String" /> to a <see cref="T:Rebex.Mime.Headers.MailAddressCollection" />.
            </summary>
      <param name="addresses">List of addresses to parse (separated by comma or colon).</param>
      <returns>A <see cref="T:Rebex.Mime.Headers.MailAddressCollection" />.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MailAddressCollection.Add(System.String)">
      <summary>
            Adds an address to the end of the list.
            </summary>
      <param name="address">An address to be added.</param>
      <returns>The index at which the address has been added.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MailAddressCollection.Add(Rebex.Mime.Headers.MailAddress)">
      <summary>
            Adds a <see cref="T:Rebex.Mime.Headers.MailAddress" /> to the end of the list.
            </summary>
      <param name="address">A <see cref="T:Rebex.Mime.Headers.MailAddress" /> to be added.</param>
      <returns>The index at which the address has been added.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MailAddressCollection.ToString">
      <summary>
            Converts the value of this header to its <see cref="T:System.String" /> representation.
            </summary>
      <returns>A <see cref="T:System.String" /> representing the value of this header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MailAddressCollection.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.MailAddressCollection.CopyTo(Rebex.Mime.Headers.MailAddress[],System.Int32)">
      <summary>
            Copies the range of elements from the <see cref="T:Rebex.Mime.Headers.MailAddressCollection" /> to a compatible one-dimensional
            array, starting at the specified index of the target array.
            </summary>
      <param name="array">One-dimensional zero-based array that is the destination of the elements copied from <see cref="T:Rebex.Mime.Headers.MailAddressCollection" />.</param>
      <param name="index">A zero-based index in the destination array at which copying begins.</param>
    </member>
    <member name="P:Rebex.Mime.Headers.MailAddressCollection.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:Rebex.Mime.Headers.MailAddress" /> at the specified index.
            </summary>
      <param name="index">The zero-based index of the <see cref="T:Rebex.Mime.Headers.MailAddress" /> to get or set.</param>
      <value>A mailbox.</value>
    </member>
    <member name="T:Rebex.Mime.Headers.MailDateTime">
      <summary>
            Represents the date/time and the time zone.
            </summary>
      <remarks>
            Represents the <c>date-time</c> structured header defined by RFC 2822.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.Headers.MailDateTime.#ctor(System.DateTime)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.MailDateTime" /> header value
            with the specified local <see cref="T:System.DateTime" />.
            </summary>
      <param name="localTime">A local time.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.MailDateTime.op_Implicit(System.DateTime)~Rebex.Mime.Headers.MailDateTime">
      <summary>
            Converts a <see cref="T:System.DateTime" /> to a <see cref="T:Rebex.Mime.Headers.MailDateTime" />.
            </summary>
      <param name="localTime">A date and time.</param>
      <returns>A <see cref="T:Rebex.Mime.Headers.MailDateTime" />.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MailDateTime.#ctor(System.DateTime,System.TimeSpan)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.MailDateTime" /> header value
            with the specified universal <see cref="T:System.DateTime" /> and a <see cref="P:Rebex.Mime.Headers.MailDateTime.TimeZone" />.
            </summary>
      <param name="universalTime">A universal (UTC) time.</param>
      <param name="timeZone">A time zone.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.MailDateTime.Clone">
      <summary>
            Creates a copy of the header.
            </summary>
      <returns>A copy of the header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MailDateTime.ToString">
      <summary>
            Converts the value of this header to its <see cref="T:System.String" /> representation.
            </summary>
      <returns>A <see cref="T:System.String" /> representing the value of this header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MailDateTime.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="P:Rebex.Mime.Headers.MailDateTime.LocalTime">
      <summary>
            Gets the local date/time.
            </summary>
      <value>
            A <see cref="T:System.DateTime" />.
            </value>
    </member>
    <member name="P:Rebex.Mime.Headers.MailDateTime.UniversalTime">
      <summary>
            Gets the universal date/time.
            </summary>
      <value>
            A <see cref="T:System.DateTime" />.
            </value>
    </member>
    <member name="P:Rebex.Mime.Headers.MailDateTime.OriginalTime">
      <summary>
            Gets the original date/time (local to <see cref="P:Rebex.Mime.Headers.MailDateTime.TimeZone" />).
            </summary>
      <value>
            A <see cref="T:System.DateTime" />.
            </value>
    </member>
    <member name="P:Rebex.Mime.Headers.MailDateTime.TimeZone">
      <summary>
            Gets the time zone.
            </summary>
      <value>A <see cref="T:System.TimeSpan" />.</value>
    </member>
    <member name="T:Rebex.Mime.Headers.MessageId">
      <summary>
            Represents the message identifier.
            </summary>
      <remarks>
            Represents the <c>msg-id</c> structured header defined by RFC 2822.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.Headers.MessageId.#ctor(System.String)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.MessageId" /> header value
            with the specified message identifier.
            </summary>
      <param name="messageId">Message identifier.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.MessageId.#ctor">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.MessageId" /> header value
            and generates a new message identifier.
            </summary>
    </member>
    <member name="M:Rebex.Mime.Headers.MessageId.op_Implicit(System.String)~Rebex.Mime.Headers.MessageId">
      <summary>
            Converts a <see cref="T:System.String" /> to a <see cref="T:Rebex.Mime.Headers.MessageId" />.
            </summary>
      <param name="messageId">A single message ID.</param>
      <returns>A <see cref="T:Rebex.Mime.Headers.MessageId" />.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MessageId.Clone">
      <summary>
            Creates a copy of the header.
            </summary>
      <returns>A copy of the header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MessageId.ToString">
      <summary>
            Converts the value of this header to its <see cref="T:System.String" /> representation.
            </summary>
      <returns>A <see cref="T:System.String" /> representing the value of this header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MessageId.Equals(System.Object)">
      <summary>
            Returns a value indication whether this object equals another object.
            </summary>
      <param name="obj">Another object.</param>
      <returns>True if the objects are equal, false otherwise.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MessageId.GetHashCode">
      <summary>
            Returns the hash code for the value of this instance.
            </summary>
      <returns>Hash code.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MessageId.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="P:Rebex.Mime.Headers.MessageId.Id">
      <summary>
            Gets the message identifier.
            </summary>
      <value>Message identifier.</value>
    </member>
    <member name="T:Rebex.Mime.Headers.MessageIdCollection">
      <summary>
            Represents the collection of <see cref="T:Rebex.Mime.Headers.MessageId" /> objects.
            </summary>
      <remarks>
            Represents the list of <c>msg-id</c>s defined by RFC 2822.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.Headers.MessageIdCollection.#ctor">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.MessageIdCollection" />.
            </summary>
    </member>
    <member name="M:Rebex.Mime.Headers.MessageIdCollection.op_Implicit(Rebex.Mime.Headers.MessageId)~Rebex.Mime.Headers.MessageIdCollection">
      <summary>
            Converts a <see cref="T:Rebex.Mime.Headers.MessageId" /> to a <see cref="T:Rebex.Mime.Headers.MessageIdCollection" />.
            </summary>
      <param name="messageId">A single <see cref="T:Rebex.Mime.Headers.MessageId" />.</param>
      <returns>A <see cref="T:Rebex.Mime.Headers.MessageIdCollection" />.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MessageIdCollection.op_Implicit(System.String)~Rebex.Mime.Headers.MessageIdCollection">
      <summary>
            Converts a <see cref="T:System.String" /> to a <see cref="T:Rebex.Mime.Headers.MessageIdCollection" />.
            </summary>
      <param name="messageIDs">A list of message IDs.</param>
      <returns>A <see cref="T:Rebex.Mime.Headers.MessageIdCollection" />.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MessageIdCollection.Add(Rebex.Mime.Headers.MessageId)">
      <summary>
            Adds a <see cref="T:Rebex.Mime.Headers.MessageId" /> to the end of the list.
            </summary>
      <param name="messageId">A <see cref="T:Rebex.Mime.Headers.MessageId" /> to be added.</param>
      <returns>The index at which the message identificator has been added.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MessageIdCollection.ToString">
      <summary>
            Converts the value of this header to its <see cref="T:System.String" /> representation.
            </summary>
      <returns>A <see cref="T:System.String" /> representing the value of this header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MessageIdCollection.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.MessageIdCollection.CopyTo(Rebex.Mime.Headers.MessageId[],System.Int32)">
      <summary>
            Copies the range of elements from the <see cref="T:Rebex.Mime.Headers.MessageIdCollection" /> to a compatible one-dimensional
            array, starting at the specified index of the target array.
            </summary>
      <param name="array">One-dimensional zero-based array that is the destination of the elements copied from <see cref="T:Rebex.Mime.Headers.MessageIdCollection" />.</param>
      <param name="index">A zero-based index in the destination array at which copying begins.</param>
    </member>
    <member name="P:Rebex.Mime.Headers.MessageIdCollection.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:Rebex.Mime.Headers.MessageId" /> at the specified index.
            </summary>
      <param name="index">The zero-based index of the <see cref="T:Rebex.Mime.Headers.MessageId" /> to get or set.</param>
      <value>A message identifier.</value>
    </member>
    <member name="T:Rebex.Mime.Headers.MimeParameterList">
      <summary>
            Represents the collection of MIME header parameters.
            </summary>
    </member>
    <member name="M:Rebex.Mime.Headers.MimeParameterList.Add(System.String,System.String)">
      <summary>
            Adds a new parameter to the collection.
            </summary>
      <param name="name">The name of the parameter.</param>
      <param name="value">The value of the parameter.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.MimeParameterList.Remove(System.String)">
      <summary>
            Removes the parameter of the specified name from the collection.
            </summary>
      <param name="name">The name of the parameter.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.MimeParameterList.ToString">
      <summary>
            Converts the value of this header to its <see cref="T:System.String" /> representation.
            </summary>
      <returns>A <see cref="T:System.String" /> representing the value of this header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MimeParameterList.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="P:Rebex.Mime.Headers.MimeParameterList.Count">
      <summary>
            Gets the number of parameters in the collection.
            </summary>
      <value>The number of parameters is the collection.</value>
    </member>
    <member name="P:Rebex.Mime.Headers.MimeParameterList.Item(System.String)">
      <summary>
            Gets or sets the value of parameter at the specified index.
            </summary>
      <param name="name">The name of parameter whose value to get or set.</param>
      <value>An parameter value.</value>
    </member>
    <member name="P:Rebex.Mime.Headers.MimeParameterList.Names">
      <summary>
            Gets a collection containing the names of all parameters.
            </summary>
    </member>
    <member name="T:Rebex.Mime.Headers.MimeVersion">
      <summary>
            Represents the 'MIME-Version' header value
            </summary>
            Represents the <c>version</c> structured header value defined by RFC 2045.
        </member>
    <member name="M:Rebex.Mime.Headers.MimeVersion.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of MIME version header value.
            </summary>
      <param name="major">Major version number.</param>
      <param name="minor">Minor version number.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.MimeVersion.Clone">
      <summary>
            Creates a copy of the header.
            </summary>
      <returns>A copy of the header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MimeVersion.ToString">
      <summary>
            Converts the value of this header to its <see cref="T:System.String" /> representation.
            </summary>
      <returns>A <see cref="T:System.String" /> representing the value of this header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.MimeVersion.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="P:Rebex.Mime.Headers.MimeVersion.Major">
      <summary>
            Gets the major version number.
            </summary>
      <value>A major version number.</value>
    </member>
    <member name="P:Rebex.Mime.Headers.MimeVersion.Minor">
      <summary>
            Gets the minor version number.
            </summary>
      <value>A minor version number.</value>
    </member>
    <member name="T:Rebex.Mime.Headers.PhraseCollection">
      <summary>
            Represents the collection of phrases.
            </summary>
      <remarks>
            Represents the list of phrases defined by RFC 2822.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.Headers.PhraseCollection.#ctor">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.PhraseCollection" />.
            </summary>
    </member>
    <member name="M:Rebex.Mime.Headers.PhraseCollection.op_Implicit(System.String)~Rebex.Mime.Headers.PhraseCollection">
      <summary>
            Converts a phrase to a <see cref="T:Rebex.Mime.Headers.PhraseCollection" />.
            </summary>
      <param name="phrase">A single phrase.</param>
      <returns>A <see cref="T:Rebex.Mime.Headers.PhraseCollection" />.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.PhraseCollection.Add(System.String)">
      <summary>
            Adds a phrase to the end of the list.
            </summary>
      <param name="phrase">A phrase to be added.</param>
      <returns>The index at which the phrase has been added.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.PhraseCollection.ToString">
      <summary>
            Converts the value of this header to its <see cref="T:System.String" /> representation.
            </summary>
      <returns>A <see cref="T:System.String" /> representing the value of this header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.PhraseCollection.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.PhraseCollection.GetEnumerator">
      <summary>
            Gets an <see cref="T:System.Collections.IEnumerator" /> for the collection.
            </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the collection.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.PhraseCollection.AddRange(System.Collections.ICollection)">
      <summary>
            Adds a range of items contained in the specified collection.
            </summary>
      <param name="c">Collection of items to be added.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.PhraseCollection.CopyTo(System.String[],System.Int32)">
      <summary>
            Copies the range of elements from the <see cref="T:Rebex.Mime.Headers.PhraseCollection" /> to a compatible one-dimensional
            array, starting at the specified index of the target array.
            </summary>
      <param name="array">One-dimensional zero-based array that is the destination of the elements copied from <see cref="T:Rebex.Mime.Headers.PhraseCollection" />.</param>
      <param name="index">A zero-based index in the destination array at which copying begins.</param>
    </member>
    <member name="P:Rebex.Mime.Headers.PhraseCollection.Item(System.Int32)">
      <summary>
            Gets or sets the phrase at the specified index.
            </summary>
      <param name="index">The zero-based index of the phrase to get or set.</param>
      <value>A phrase.</value>
    </member>
    <member name="T:Rebex.Mime.Headers.Received">
      <summary>
            Represents a trace data header of arbitrary text.
            </summary>
      <remarks>
            Represents the <c>received </c> structured header defined by RFC 2822.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.Headers.Received.#ctor(System.String)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.Received" /> header value.
            </summary>
      <param name="data">Value of the received header. Should follow conventions defined by RFC 2822.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.Received.Clone">
      <summary>
            Creates a copy of the header.
            </summary>
      <returns>A copy of the header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.Received.ToString">
      <summary>
            Converts the value of this header to its <see cref="T:System.String" /> representation.
            </summary>
      <returns>A <see cref="T:System.String" /> representing the value of this header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.Received.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="T:Rebex.Mime.Headers.ReturnPath">
      <summary>
            Represents a mailbox that consists of address and a display name.
            </summary>
      <remarks>
            Represents the <c>mailbox</c> structured header defined by RFC 2822.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.Headers.ReturnPath.#ctor(System.String)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.ReturnPath" /> header value
            with the specified mail address.
            </summary>
      <param name="address">Mail address.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.ReturnPath.Clone">
      <summary>
            Creates a copy of the header.
            </summary>
      <returns>A copy of the header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ReturnPath.ToString">
      <summary>
            Converts the value of this header to its <see cref="T:System.String" /> representation.
            </summary>
      <returns>A <see cref="T:System.String" /> representing the value of this header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.ReturnPath.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="P:Rebex.Mime.Headers.ReturnPath.Address">
      <summary>
            Gets the mail address of this mailbox.
            </summary>
      <value>The mail address.</value>
    </member>
    <member name="P:Rebex.Mime.Headers.ReturnPath.User">
      <summary>
            Gets the local part of this mailbox.
            </summary>
      <value>The username.</value>
    </member>
    <member name="P:Rebex.Mime.Headers.ReturnPath.Host">
      <summary>
            Gets the domain of this mailbox.
            </summary>
      <value>The hostname.</value>
    </member>
    <member name="T:Rebex.Mime.Headers.Unparsed">
      <summary>
            Represents a header value that is not processed by the component in any way. Use with care.
            </summary>
    </member>
    <member name="M:Rebex.Mime.Headers.Unparsed.#ctor(System.String)">
      <summary>
            Creates an instance of <see cref="T:Rebex.Mime.Headers.Unparsed" /> class representing a specified data.
            </summary>
      <param name="value">Value.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.Unparsed.Clone">
      <summary>
            Creates a copy of the header.
            </summary>
      <returns>A copy of the header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.Unparsed.ToString">
      <summary>
            Converts the value of this header to its <see cref="T:System.String" /> representation.
            </summary>
      <returns>A <see cref="T:System.String" /> representing the value of this header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.Unparsed.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="T:Rebex.Mime.Headers.Unstructured">
      <summary>
            Represents an unstructured header of arbitrary text.
            </summary>
      <remarks>
            Represents the <c>unstructured</c> structured header defined by RFC 2822.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.Headers.Unstructured.#ctor(System.String)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.Headers.Unstructured" /> header value.
            </summary>
      <param name="value">Value of the unstructured header.</param>
    </member>
    <member name="M:Rebex.Mime.Headers.Unstructured.Clone">
      <summary>
            Creates a copy of the header.
            </summary>
      <returns>A copy of the header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.Unstructured.ToString">
      <summary>
            Converts the value of this header to its <see cref="T:System.String" /> representation.
            </summary>
      <returns>A <see cref="T:System.String" /> representing the value of this header.</returns>
    </member>
    <member name="M:Rebex.Mime.Headers.Unstructured.Encode(System.IO.TextWriter)">
      <summary>
            Writes an encoded header value into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
    </member>
    <member name="P:Rebex.Mime.Headers.Unstructured.Value">
      <summary>
            Gets the unstructured header value.
            </summary>
      <value>A value.</value>
      <remarks>Equivalent to <see cref="M:Rebex.Mime.Headers.Unstructured.ToString" /> method.</remarks>
    </member>
    <member name="T:Rebex.Mime.MimeEntity">
      <summary>
            A MIME entity.
            </summary>
      <remarks>
            Use <see cref="T:Rebex.Mime.MimeMessage" /> to represent a top-level MIME message.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.OnBrokenHeader(Rebex.Mime.MimeUnparsableHeaderEventArgs)">
      <summary>
            Raises the <see cref="E:Rebex.Mime.MimeEntity.UnparsableHeader" /> event.
            </summary>
      <param name="e">A <see cref="T:Rebex.Mime.MimeUnparsableHeaderEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.#ctor">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.MimeEntity" />.
            </summary>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.Clone">
      <summary>
            Creates a copy of this entity.
            </summary>
      <returns>A new entity.</returns>
      <remarks>
        <see cref="P:Rebex.Mime.MimeEntity.Parent" /> of the new entity will be set to null.</remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.ToMessage">
      <summary>
            Coverts the <see cref="T:Rebex.Mime.MimeEntity" /> into a <see cref="T:Rebex.Mime.MimeMessage" />.
            </summary>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.GetContentStream(System.Boolean)">
      <summary>
            Returns the stream representing a content of this entity.
            </summary>
      <param name="writable">Specifies whether to return a writable or read-only stream.</param>
      <returns>The stream representing a content of this entity.</returns>
      <remarks>
            To set the content of this entity, it is recommended to use one of <see cref="M:Rebex.Mime.MimeEntity.SetContent(System.String)" />
            or <see cref="M:Rebex.Mime.MimeEntity.SetContentFromFile(System.String)" /> methods.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.GetContentStream">
      <summary>
            Returns the read-only stream representing a content of this entity.
            </summary>
      <returns>The read-only stream representing a content of this entity.</returns>
      <remarks>
            To set the content of this entity, use one of <see cref="M:Rebex.Mime.MimeEntity.SetContent(System.String)" />
            or <see cref="M:Rebex.Mime.MimeEntity.SetContentFromFile(System.String)" /> methods.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.GetRawContentStream">
      <summary>
            Returns the read-only stream representing a raw content of this entity.
            Only available for messages that were parsed with <see cref="T:Rebex.Mime.MimeOptions" />.KeepRawEntityBody flag.
            You probably need to use <see cref="M:Rebex.Mime.MimeEntity.GetContentStream(System.Boolean)" /> instead.
            </summary>
      <returns>The read-only stream representing a raw content of this entity; or null if not available.</returns>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetContent(System.String)">
      <summary>
            Sets the content of this entity to the specified text.
            </summary>
      <param name="text">Content to set.</param>
      <remarks>
            Media type is set to 'text/plain'.
            Character set and transfer encoding are determined automatically.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetContent(System.String,System.String)">
      <summary>
            Sets the content of this entity to the specified text and media type.
            </summary>
      <param name="text">Content to set.</param>
      <param name="mediaType">Media type.</param>
      <remarks>
            Character set and transfer encoding are determined automatically.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetContent(System.String,System.String,System.Text.Encoding)">
      <summary>
            Sets the content of this entity to the specified text, media type and character set.
            </summary>
      <param name="text">Content to set.</param>
      <param name="mediaType">Media type.</param>
      <param name="charset">Character set to use for encoding the text.</param>
      <remarks>
            Transfer encoding is determined automatically.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetContent(System.String,System.String,System.Text.Encoding,Rebex.Mime.TransferEncoding)">
      <summary>
            Sets the content of this entity to the specified text, media type and character set.
            </summary>
      <param name="text">Content to set.</param>
      <param name="mediaType">Media type.</param>
      <param name="charset">Character set to use for encoding the text.</param>
      <param name="transferEncoding">Transfer encoding.</param>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetContent(Rebex.Mime.MimeEntity)">
      <summary>
            Sets the inner message of this entity to the specified message.
            </summary>
      <param name="entity">Entity.</param>
      <remarks>
            Media type is set to 'message/rfc822'.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetEnvelopedContent(Rebex.Mime.MimeEntity,Rebex.Security.Certificates.Certificate[])">
      <summary>
            Sets the content of this entity to the specified enveloped entity.
            </summary>
      <param name="entity">Entity to be enveloped.</param>
      <param name="recipients">The list of recipients' certificates.</param>
      <remarks>
        <p>
            The purpose of enveloped content is to be encrypted.
            Call the <see cref="M:Rebex.Mime.MimeEntity.Encrypt" /> method prior to saving or sending the message.
            </p>
      </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetEnvelopedContent(Rebex.Mime.MimeEntity,System.String,Rebex.Security.Certificates.Certificate[])">
      <summary>
            Sets the content of this entity to the specified enveloped entity.
            </summary>
      <param name="entity">Entity to be enveloped.</param>
      <param name="recipients">The list of recipients' certificates.</param>
      <param name="encryptionAlgorithm">Encryption algorithm OID. Can be null for 3DES.</param>
      <remarks>
        <p>
            The purpose of enveloped content is to be encrypted.
            Call the <see cref="M:Rebex.Mime.MimeEntity.Encrypt" /> method prior to saving or sending the message.
            </p>
        <p>
            Currently, 3DES ("1.2.840.113549.3.7"), 
            AES ("2.16.840.1.101.3.4.1.2" for 128-bit, "2.16.840.1.101.3.4.1.22" for 192-bit and "2.16.840.1.101.3.4.1.42" for 256-bit),
            DES ("1.3.14.3.2.7") and RC2 ("1.2.840.113549.3.2") encryption algorithms are supported.
            </p>
      </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetEnvelopedContent(Rebex.Mime.MimeEntity,System.String,System.Int32,Rebex.Security.Certificates.Certificate[])">
      <summary>
            Sets the content of this entity to the specified enveloped entity.
            </summary>
      <param name="entity">Entity to be enveloped.</param>
      <param name="recipients">The list of recipients' certificates.</param>
      <param name="encryptionAlgorithm">Encryption algorithm OID. Can be null for 3DES.</param>
      <param name="keyLength">The key length in bits (only used by RC2 algorithm).</param>
      <remarks>
        <p>
            The purpose of enveloped content is to be encrypted.
            Call the <see cref="M:Rebex.Mime.MimeEntity.Encrypt" /> method prior to saving or sending the message.
            </p>
        <p>
            Currently, 3DES ("1.2.840.113549.3.7"), 
            AES ("2.16.840.1.101.3.4.1.2" for 128-bit, "2.16.840.1.101.3.4.1.22" for 192-bit and "2.16.840.1.101.3.4.1.42" for 256-bit),
            DES ("1.3.14.3.2.7") and RC2 ("1.2.840.113549.3.2") encryption algorithms are supported.
            </p>
      </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetEnvelopedContent(Rebex.Mime.MimeEntity,System.String,Rebex.Security.Cryptography.EncryptionParameters,Rebex.Security.Certificates.Certificate[])">
      <summary>
            Sets the content of this entity to the specified enveloped entity.
            </summary>
      <param name="entity">Entity to be enveloped.</param>
      <param name="recipients">The list of recipients' certificates.</param>
      <param name="encryptionAlgorithm">Encryption algorithm OID. Can be null for 3DES.</param>
      <param name="encryptionParameters">Encryption parameters (to specify RSAES-OAEP parameters). Can be null (for PKCS #1).</param>
      <remarks>
        <p>
            The purpose of enveloped content is to be encrypted.
            Call the <see cref="M:Rebex.Mime.MimeEntity.Encrypt" /> method prior to saving or sending the message.
            </p>
        <p>
            Currently, 3DES ("1.2.840.113549.3.7"), 
            AES ("2.16.840.1.101.3.4.1.2" for 128-bit, "2.16.840.1.101.3.4.1.22" for 192-bit and "2.16.840.1.101.3.4.1.42" for 256-bit),
            DES ("1.3.14.3.2.7") and RC2 ("1.2.840.113549.3.2") encryption algorithms are supported.
            </p>
      </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetEnvelopedContent(Rebex.Mime.MimeEntity,Rebex.Security.Cryptography.SymmetricKeyAlgorithmId,Rebex.Security.Cryptography.EncryptionParameters,Rebex.Security.Certificates.Certificate[])">
      <summary>
            Sets the content of this entity to the specified enveloped entity.
            </summary>
      <param name="entity">Entity to be enveloped.</param>
      <param name="recipients">The list of recipients' certificates.</param>
      <param name="encryptionAlgorithm">Encryption algorithm.</param>
      <param name="encryptionParameters">Encryption parameters (to specify RSAES-OAEP parameters). Can be null (for PKCS #1).</param>
      <remarks>
        <p>
            The purpose of enveloped content is to be encrypted.
            Call the <see cref="M:Rebex.Mime.MimeEntity.Encrypt" /> method prior to saving or sending the message.
            </p>
        <p>
            Currently, AES-256, AES-192, AES-128, 3DES, DES, RC2 encryption algorithms are supported.
            </p>
      </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetEnvelopedContent(Rebex.Mime.MimeEntity,Rebex.Security.Cryptography.SymmetricKeyAlgorithmId,System.Nullable{System.Int32},Rebex.Security.Cryptography.EncryptionParameters,Rebex.Security.Certificates.Certificate[])">
      <summary>
            Sets the content of this entity to the specified enveloped entity.
            </summary>
      <param name="entity">Entity to be enveloped.</param>
      <param name="recipients">The list of recipients' certificates.</param>
      <param name="encryptionAlgorithm">Encryption algorithm.</param>
      <param name="keySize">The key size in bits. Only used for AES (to specify key size) and RC2 (to specify effective key size).</param>
      <param name="encryptionParameters">Encryption parameters (to specify RSAES-OAEP parameters). Can be null (for PKCS #1).</param>
      <remarks>
        <p>
            The purpose of enveloped content is to be encrypted.
            Call the <see cref="M:Rebex.Mime.MimeEntity.Encrypt" /> method prior to saving or sending the message.
            </p>
        <p>
            Currently, AES-256, AES-192, AES-128, 3DES, DES, RC2 encryption algorithms are supported.
            </p>
      </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetSignedContent(Rebex.Mime.MimeEntity,Rebex.Security.Certificates.Certificate[])">
      <summary>
            Sets the content of this entity to the specified signed entity.
            </summary>
      <param name="entity">Entity to be added as signed content.</param>
      <param name="signers">The list of signers' certificates with private keys to sign the content.</param>
      <remarks>
            Note: Due to a bug in MS Outlook Express, the <see cref="P:Rebex.Mime.MimeEntity.Epilogue" /> of the signed content will be set
            to null by this method.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetSignedContent(Rebex.Mime.MimeEntity,Rebex.Mime.MimeSignatureStyle,Rebex.Security.Certificates.Certificate[])">
      <summary>
            Sets the content of this entity to the specified signed content.
            </summary>
      <param name="entity">Entity to be added as signed content.</param>
      <param name="style">Signed content style.</param>
      <param name="signers">The list of signers' certificates with private keys to sign the content.</param>
      <remarks>
            Note: Due to a bug in MS Outlook Express, the <see cref="P:Rebex.Mime.MimeEntity.Epilogue" /> of the signed content will be set
            to null by this method.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetSignedContent(Rebex.Mime.MimeEntity,Rebex.Mime.MimeSignatureStyle,Rebex.Security.Certificates.SignatureHashAlgorithm,Rebex.Security.Certificates.Certificate[])">
      <summary>
            Sets the content of this entity to the specified signed content.
            </summary>
      <param name="entity">Entity to be added as signed content.</param>
      <param name="style">Signed content style.</param>
      <param name="algorithm">Digest algorithm.</param>
      <param name="signers">The list of signers' certificates with private keys to sign the content.</param>
      <remarks>
            Note: Due to a bug in MS Outlook Express, the <see cref="P:Rebex.Mime.MimeEntity.Epilogue" /> of the signed content will be set
            to null by this method.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetSignedContent(Rebex.Mime.MimeEntity,Rebex.Security.Cryptography.SignatureParameters,Rebex.Security.Certificates.Certificate[])">
      <summary>
            Sets the content of this entity to the specified signed content.
            </summary>
      <param name="entity">Entity to be added as signed content.</param>
      <param name="signatureParameters">Signature parameters (to specify RSASSA-PSS parameters). Can be null (for PKCS #1).</param>
      <param name="signers">The list of signers' certificates with private keys to sign the content.</param>
      <remarks>
            Note: Due to a bug in MS Outlook Express, the <see cref="P:Rebex.Mime.MimeEntity.Epilogue" /> of the signed content will be set
            to null by this method.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetSignedContent(Rebex.Mime.MimeEntity,Rebex.Mime.MimeSignatureStyle,Rebex.Security.Cryptography.SignatureParameters,Rebex.Security.Certificates.Certificate[])">
      <summary>
            Sets the content of this entity to the specified signed content.
            </summary>
      <param name="entity">Entity to be added as signed content.</param>
      <param name="style">Signed content style.</param>
      <param name="signatureParameters">Signature parameters (to specify RSASSA-PSS parameters). Can be null (for PKCS #1).</param>
      <param name="signers">The list of signers' certificates with private keys to sign the content.</param>
      <remarks>
            Note: Due to a bug in MS Outlook Express, the <see cref="P:Rebex.Mime.MimeEntity.Epilogue" /> of the signed content will be set
            to null by this method.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetContent(System.IO.Stream,System.String,System.String,Rebex.Mime.TransferEncoding)">
      <summary>
            Sets the content of this entity to data read from the specified stream and sets media type, file name and transfer encoding.
            </summary>
      <param name="source">Source stream to read data from.</param>
      <param name="mediaType">Media type.</param>
      <param name="name">File name to assign to the content.</param>
      <param name="transferEncoding">Transfer encoding.</param>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetContent(System.IO.Stream,System.String,System.String)">
      <summary>
            Sets the content of this entity to data read from the specified stream and sets media type and file name.
            </summary>
      <param name="source">Source stream to read data from.</param>
      <param name="mediaType">Media type.</param>
      <param name="name">File name to assign to the content, or null if no file name is to be assigned.</param>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetContent(System.IO.Stream,System.String)">
      <summary>
            Sets the content of this entity to data read from the specified stream and sets media type and file name.
            </summary>
      <param name="source">Source stream to read data from.</param>
      <param name="name">File name to assign to the content, or null if no file name is to be assigned.</param>
      <remarks>Media type is set to 'application/octet-stream'.</remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetContent(System.IO.Stream)">
      <summary>
            Sets the content of this entity to data read from the specified stream.
            </summary>
      <param name="source">Source stream to read data from.</param>
      <remarks>
            File name is not set automatically. Set it manually using <see cref="P:Rebex.Mime.MimeEntity.Name" /> if needed.
            Media type is set to 'application/octet-stream'.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetContentFromFile(System.String,System.String,System.String,Rebex.Mime.TransferEncoding)">
      <summary>
            Sets the content of this entity to data read from the specified file and sets media type, file name and transfer encoding.
            </summary>
      <param name="fileName">Path to the file to read data from.</param>
      <param name="mediaType">Media type.</param>
      <param name="name">File name to assign to the content, or null if no file name is to be assigned.</param>
      <param name="transferEncoding">Transfer encoding.</param>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetContentFromFile(System.String,System.String,System.String)">
      <summary>
            Sets the content of this entity to data read from the specified file and sets media type and file name.
            </summary>
      <param name="fileName">Path to the file to read data from.</param>
      <param name="mediaType">Media type.</param>
      <param name="name">File name to assign to the content, or null if no file name is to be assigned.</param>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetContentFromFile(System.String,System.String)">
      <summary>
            Sets the content of this entity to data read from the specified file and sets file name.
            </summary>
      <param name="fileName">Path to the file to read data from.</param>
      <param name="name">File name to assign to the content, or null if no file name is to be assigned.</param>
      <remarks>
            Media type is set to 'application/octet-stream'.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.SetContentFromFile(System.String)">
      <summary>
            Sets the content of this entity to data read from the specified file.
            </summary>
      <param name="fileName">Path to the file to read data from.</param>
      <remarks>
            File name is not set automatically. Set it manually using <see cref="P:Rebex.Mime.MimeEntity.Name" /> if needed.
            Media type is set to 'application/octet-stream'.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.Decrypt">
      <summary>
            Decrypts the contents of an enveloped entity.
            This method is only intended for entities with enveloped content.
            </summary>
      <remarks>For a successful decryption, a recipient's private key must be available.</remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.Encrypt">
      <summary>
            Encrypts the contents of an enveloped entity.
            This method is only intended for entities with enveloped content.
            </summary>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.Sign">
      <summary>
            Creates signatures for all signers that do not have one yet.
            This method is only intended for entities with signed content.
            </summary>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.ValidateSignature">
      <summary>
            Validates all digital signatures on this CMS/PKCS #7 signed message
            and validates all the signers' certificates.
            This method is only intended for entities with signed content.
            </summary>
      <returns>Validation result.</returns>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.ValidateSignature(System.Boolean,Rebex.Security.Certificates.ValidationOptions)">
      <summary>
            Validates all digital signatures on this CMS/PKCS #7 signed message.
            Optionally, no signers' certificates are not validated, and the specified validation
            options are taken into account.
            This method is only intended for entities with signed content.
            </summary>
      <param name="verifySignatureOnly">Specifies whether to only verify the signatures, skipping the certificate validation.</param>
      <param name="options">Certificate validation options (not supported by CertificateChainEngine.Native engine on Xamarin.iOS and Xamarin.Android).</param>
      <returns>Validation result.</returns>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.ValidateSignature(System.Boolean,Rebex.Security.Certificates.ValidationOptions,Rebex.Security.Certificates.CertificateChainEngine)">
      <summary>
            Validates all digital signatures on this CMS/PKCS #7 signed message.
            Optionally, no signers' certificates are not validated, and the specified validation
            options are taken into account.
            This method is only intended for entities with signed content.
            </summary>
      <param name="verifySignatureOnly">Specifies whether to only verify the signatures, skipping the certificate validation.</param>
      <param name="options">Certificate validation options (not supported by CertificateChainEngine.Native engine on Xamarin.iOS and Xamarin.Android).</param>
      <param name="certificateEngine">Certificate chain engine.</param>
      <returns>Validation result.</returns>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.GetSignatureEntity">
      <summary>
            Gets the signature entity if available. This can return this entity for signatures with inlined content.
            </summary>
      <value>Signature entity.</value>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.Load(System.String)">
      <summary>
            Loads the MIME entity from the specified file.
            </summary>
      <param name="fileName">The file from which to read the entity.</param>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.Load(System.IO.Stream)">
      <summary>
            Loads the MIME entity from the specified stream.
            </summary>
      <param name="input">The stream from which to read the entity.</param>
      <remarks>This method will close the stream when it is done.</remarks>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.Save(System.String)">
      <summary>
            Saves the MIME entity to the specified file.
            </summary>
      <param name="fileName">The file to which to save the entity.</param>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.Save(System.IO.Stream)">
      <summary>
            Saves the MIME entity to the specified stream.
            </summary>
      <param name="output">The stream to which to save the entity.</param>
    </member>
    <member name="M:Rebex.Mime.MimeEntity.ToStream">
      <summary>
            Returns a read-only stream that can be used to read the raw MIME message content.
            Copying all the content into another stream is identical to <see cref="M:Rebex.Mime.MimeEntity.Save(System.IO.Stream)" /> method.
            </summary>
      <returns>Read-only stream.</returns>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.CertificateFinder">
      <summary>
            Gets or sets the <see cref="T:Rebex.Security.Cryptography.Pkcs.ICertificateFinder" /> to be used to find certificates
            used to encrypt or sign the entity.
            </summary>
      <value>The certificate finder.</value>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.Silent">
      <summary>
            Gets or sets a value indicating whether cryptographic providers
            are allowed to display any user interface (UI) when working with private keys.
            </summary>
      <remarks>
            In case of signing, the actual behavior is determined by the combination of this value and the value of
            <see cref="P:Rebex.Security.Cryptography.SignatureParameters.Silent" /> passed to <see cref="O:Rebex.Mime.MimeEntity.SetSignedContent" /> method.
            Cryptographic operations are only permitted to display a UI if both Silent properties are set to true.
            </remarks>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.Headers">
      <summary>
            Gets the list of headers of this entity.
            </summary>
      <value>The list of headers.</value>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.Parts">
      <summary>
            Gets the list of child parts of this entity.
            </summary>
      <value>The list of parts.</value>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.Parent">
      <summary>
            Gets or sets the parent of this entity.
            </summary>
      <value>The parent of this entity, or null if this is a top-level entity.</value>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.Preamble">
      <summary>
            Gets or sets the preamble of this multipart entity.
            </summary>
      <value>Preamble of this multipart entity.</value>
      <remarks>
        <p>
            Preamble is only used for multipart entities.
            </p>
        <p>
            Preamble is a block of text preceding the first part of
            a multipart entity. It is usually used to store a short
            explanatory notice for non-MIME compliant user agents
            to display.
            </p>
        <p>
            Default value is "This is a multipart MIME message."
            </p>
        <p>
            The preamble is only used for multipart entities.
            </p>
      </remarks>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.Epilogue">
      <summary>
            Gets or sets the epilogue of this multipart entity.
            </summary>
      <value>Epilogue of this multipart entity.</value>
      <remarks>
        <p>
            Epilogue is only used for multipart entities.
            </p>
        <p>
            Epilogue is a block of text following the last part of
            a multipart entity. It might be used to store a message
            that non-MIME compliant user agents will display.
            </p>
        <p>
            Default value is an empty string.
            </p>
      </remarks>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.Options">
      <summary>
            Gets or sets various options for MIME parser and writer.
            </summary>
      <value>MIME parser and writer options.</value>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.DefaultCharset">
      <summary>
            Gets or sets the default charset for MIME body and headers.
            </summary>
      <value>Default charset.</value>
      <remarks>
            Only set this if you want to specify your own charset instead of letting the built-in automatic charset detector do its work.
            </remarks>
    </member>
    <member name="E:Rebex.Mime.MimeEntity.UnparsableHeader">
      <summary>
            Occurs when an unparsable header is encountered while parsing a MIME message.
            </summary>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.ReadOnly">
      <summary>
            Gets or sets a value indicating whether the entity is read-only.
            </summary>
      <remarks>
            Only the content that is signed is read-only.
            </remarks>
      <value>True if read-only; false otherwise.</value>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.ContentMessage">
      <summary>
            Gets the inner message of a 'message/rfc822' entity.
            </summary>
      <value>A <see cref="T:Rebex.Mime.MimeEntity" />; or null if this entity is not 'message/rfc822'.</value>
      <remarks>
            To set the content of this entity, use one of <see cref="M:Rebex.Mime.MimeEntity.SetContent(System.String)" />
            or <see cref="M:Rebex.Mime.MimeEntity.SetContentFromFile(System.String)" /> methods.
            </remarks>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.ContentString">
      <summary>
            Gets the content string of this entity.
            </summary>
      <value>The content string of this entity; or null if the content cannot be represented as string.</value>
      <remarks>
        <p>
            To set the content of this entity, use one of <see cref="M:Rebex.Mime.MimeEntity.SetContent(System.String)" />
            or <see cref="M:Rebex.Mime.MimeEntity.SetContentFromFile(System.String)" /> methods.
            </p>
      </remarks>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.Charset">
      <summary>
            Gets the charset (<see cref="T:System.Text.Encoding" />) of the content of this entity.
            </summary>
      <value>
            The charset of the content; or null if it has no charset or unknown charset.
            </value>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.TransferEncoding">
      <summary>
            Gets or sets the <see cref="P:Rebex.Mime.MimeEntity.TransferEncoding" /> of the content of this entity.
            </summary>
      <value>
        <see cref="P:Rebex.Mime.MimeEntity.TransferEncoding" /> of the content of this entity.
            </value>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.SignedContentInfo">
      <summary>
            Gets the <see cref="T:Rebex.Security.Cryptography.Pkcs.SignedData" /> object that contains information about signed content.
            This property is only set for entities with signed content.
            </summary>
      <value>A <see cref="T:Rebex.Security.Cryptography.Pkcs.SignedData" /> object.</value>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.EnvelopedContentInfo">
      <summary>
            Gets the <see cref="T:Rebex.Security.Cryptography.Pkcs.EnvelopedData" /> object that contains information about enveloped (encrypted) content.
            This property is only set for entities with enveloped content.
            </summary>
      <value>A <see cref="T:Rebex.Security.Cryptography.Pkcs.EnvelopedData" /> object.</value>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.SignatureStyle">
      <summary>
            Gets or sets the signature style of a signed entity container.
            This property is only intended for entities with signed content.
            </summary>
      <value>The signature style.</value>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.Kind">
      <summary>
            Gets the type of the entity.
            </summary>
      <value>An entity type.</value>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.IsMultipart">
      <summary>
            Determines whether the entity is a multipart entity.
            </summary>
      <value>True if the entity is a multipart entity; false otherwise.</value>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.ContentType">
      <summary>
            Gets or sets the content type of this entity.
            </summary>
      <value>Content type.</value>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.ContentTransferEncoding">
      <summary>
            Gets or sets the content transfer encoding of this entity.
            </summary>
      <value>Content transfer encoding.</value>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.ContentDisposition">
      <summary>
            Gets or sets the content disposition of this entity.
            </summary>
      <value>Content disposition.</value>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.ContentId">
      <summary>
            Gets or sets the content ID of this entity.
            </summary>
      <value>Content ID.</value>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.ContentDescription">
      <summary>
            Gets or sets the content description of this entity.
            </summary>
      <value>Content description.</value>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.ContentLocation">
      <summary>
            Gets or sets the content location of this entity.
            </summary>
      <value>Content location.</value>
    </member>
    <member name="P:Rebex.Mime.MimeEntity.Name">
      <summary>
            Gets or sets the suggested file name of this entity, if it is present.
            </summary>
      <value>A suggested file name.</value>
    </member>
    <member name="T:Rebex.Mime.MimeEntityCollection">
      <summary>
            Represents the collection of <see cref="T:Rebex.Mime.MimeEntity" /> objects that are parts of this <see cref="T:Rebex.Mime.MimeEntity" />.
            </summary>
    </member>
    <member name="M:Rebex.Mime.MimeEntityCollection.Insert(System.Int32,Rebex.Mime.MimeEntity)">
      <summary>
            Inserts a <see cref="T:Rebex.Mime.MimeEntity" /> into the list at the specified index.
            </summary>
      <param name="index">A zero-based index at which the entity should be inserted.</param>
      <param name="entity">A entity to insert.</param>
    </member>
    <member name="M:Rebex.Mime.MimeEntityCollection.Add(Rebex.Mime.MimeEntity)">
      <summary>
            Adds a <see cref="T:Rebex.Mime.MimeEntity" /> to the end of the list.
            </summary>
      <param name="entity">A entity to be added.</param>
      <returns>The index at which the value has been added.</returns>
    </member>
    <member name="M:Rebex.Mime.MimeEntityCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the <see cref="T:Rebex.Mime.MimeEntity" /> at the specified index from the list.
            </summary>
      <param name="index">A zero-based index of entity to remove.</param>
    </member>
    <member name="M:Rebex.Mime.MimeEntityCollection.Remove(Rebex.Mime.MimeEntity)">
      <summary>
            Removes the specified <see cref="T:Rebex.Mime.MimeEntity" /> from the list.
            </summary>
      <param name="entity">Entity to remove.</param>
    </member>
    <member name="M:Rebex.Mime.MimeEntityCollection.Clear">
      <summary>
            Removes all entities from the list.
            </summary>
    </member>
    <member name="M:Rebex.Mime.MimeEntityCollection.GetEnumerator">
      <summary>
            Gets an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:Rebex.Mime.MimeEntityCollection" /> collection.
            </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the collection.</returns>
    </member>
    <member name="M:Rebex.Mime.MimeEntityCollection.GetEnumerator(System.Int32,System.Int32)">
      <summary>
            Returns an enumerator for a section of the <see cref="T:Rebex.Mime.MimeEntityCollection" /> collection
            </summary>
      <param name="index">The zero-based starting index of the <see cref="T:Rebex.Mime.MimeEntityCollection" /> section that the enumerator should refer to.</param>
      <param name="count">The number of elements in the <see cref="T:Rebex.Mime.MimeEntityCollection" /> section that the enumerator should refer to.</param>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the specified section of the <see cref="T:Rebex.Mime.MimeEntityCollection" />.</returns>
      <remarks>Not supported by Rebex Mail for .NET Compact Framework.</remarks>
    </member>
    <member name="P:Rebex.Mime.MimeEntityCollection.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:Rebex.Mime.MimeEntity" /> at the specified index.
            </summary>
      <param name="index">The zero-based index of the <see cref="T:Rebex.Mime.MimeEntity" /> to get or set.</param>
      <value>
        <see cref="T:Rebex.Mime.MimeEntity" /> of the specified index.</value>
    </member>
    <member name="P:Rebex.Mime.MimeEntityCollection.SyncRoot">
      <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:Rebex.Mime.MimeEntityCollection" />.
            </summary>
      <value>An object that can be used to synchronize access to the <see cref="T:Rebex.Mime.MimeEntityCollection" />.</value>
    </member>
    <member name="P:Rebex.Mime.MimeEntityCollection.Count">
      <summary>
            Gets the number of entities contained in the <see cref="T:Rebex.Mime.MimeEntityCollection" />.
            </summary>
      <value>The number of entities contained in the <see cref="T:Rebex.Mime.MimeEntityCollection" />.</value>
    </member>
    <member name="T:Rebex.Mime.MimeUnparsableHeaderEventHandler">
      <summary>
            Represents the method that will handle the <see cref="E:Rebex.Mime.MimeEntity.UnparsableHeader">UnparsableHeader</see> event of a <see cref="T:Rebex.Mime.MimeEntity" /> class.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:Rebex.Mime.MimeUnparsableHeaderEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:Rebex.Mime.MimeUnparsableHeaderSeverity">
      <summary>
            Specifies the header error severity.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeUnparsableHeaderSeverity.Warning">
      <summary>A less serious problem that does not cause an exception to be thrown by default.</summary>
    </member>
    <member name="F:Rebex.Mime.MimeUnparsableHeaderSeverity.Error">
      <summary>A serious problem that causes an exception to be thrown by default.</summary>
    </member>
    <member name="T:Rebex.Mime.MimeUnparsableHeaderStatus">
      <summary>
            Specifies the problem encountered by the header parser.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeUnparsableHeaderStatus.UnableToParse">
      <summary>
            Unable to parse the header.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeUnparsableHeaderStatus.UnknownCharset">
      <summary>
            Unknown charset in Content-type header.
            </summary>
    </member>
    <member name="T:Rebex.Mime.MimeUnparsableHeaderEventArgs">
      <summary>
            Provides data for the <see cref="E:Rebex.Mime.MimeEntity.UnparsableHeader">UnparsableHeader</see> event.
            </summary>
    </member>
    <member name="M:Rebex.Mime.MimeUnparsableHeaderEventArgs.SetHeaderValue(Rebex.Mime.Headers.IHeader)">
      <summary>
            Sets the header value to the specified object. Use this to override the default parser and provide your own value.
            </summary>
      <param name="value">Header value.</param>
      <remarks>This method also sets the <see cref="P:Rebex.Mime.MimeUnparsableHeaderEventArgs.Ignore" /> property to true.</remarks>
    </member>
    <member name="P:Rebex.Mime.MimeUnparsableHeaderEventArgs.Name">
      <summary>
            Gets the header name.
            </summary>
      <value>The header name.</value>
    </member>
    <member name="P:Rebex.Mime.MimeUnparsableHeaderEventArgs.Raw">
      <summary>
            Gets the raw text representation of this header.
            </summary>
      <value>Raw header text.</value>
    </member>
    <member name="P:Rebex.Mime.MimeUnparsableHeaderEventArgs.Error">
      <summary>
            Gets the header parser error for this header.
            </summary>
      <value>Header parser error.</value>
    </member>
    <member name="P:Rebex.Mime.MimeUnparsableHeaderEventArgs.Ignore">
      <summary>
            Gets or sets the value indicating whether to ignore this error. A default value is determined by the <see cref="T:Rebex.Mime.MimeOptions">IgnoreUnparsableHeaders</see> flag of <see cref="P:Rebex.Mime.MimeEntity.Options" /> property.
            </summary>
      <value>A value indicating whether to ignore this error.</value>
    </member>
    <member name="P:Rebex.Mime.MimeUnparsableHeaderEventArgs.Severity">
      <summary>
            Gets the severity of the header parser problem.
            </summary>
    </member>
    <member name="P:Rebex.Mime.MimeUnparsableHeaderEventArgs.Status">
      <summary>
            Gets the status of the header parser problem.
            </summary>
    </member>
    <member name="T:Rebex.Mime.MimeExceptionStatus">
      <summary>
            Defines status codes for the <see cref="T:Rebex.Mime.MimeException" /> class.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeExceptionStatus.UnspecifiedError">
      <summary>
            An unclassifiable error occurred. This is the default value for <see cref="P:Rebex.Mime.MimeException.Status" />.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeExceptionStatus.MessageParserError">
      <summary>
            An error occurred inside the message parser.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeExceptionStatus.HeaderParserError">
      <summary>
            An error occurred inside the message header parser.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeExceptionStatus.OperationError">
      <summary>
            Unable to complete the requested operation.
            </summary>
    </member>
    <member name="T:Rebex.Mime.MimeException">
      <summary>
            The exception that is thrown when a MIME-related error occurs.
            </summary>
    </member>
    <member name="M:Rebex.Mime.MimeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:Rebex.Mime.MimeException" /> class with serialized data.
            </summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:Rebex.Mime.MimeException.#ctor">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.MimeException" />.
            </summary>
    </member>
    <member name="M:Rebex.Mime.MimeException.#ctor(System.String)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.MimeException" /> with the specified message.
            </summary>
      <param name="message">Message that describes the error.</param>
    </member>
    <member name="M:Rebex.Mime.MimeException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.MimeException" /> with the specified message and inner exception.
            </summary>
      <param name="message">Message that describes the error.</param>
      <param name="inner">The exception that was the cause of this exception.</param>
    </member>
    <member name="P:Rebex.Mime.MimeException.Status">
      <summary>
            Gets the status of the response.
            </summary>
      <value>One of the <see cref="T:Rebex.Mime.MimeExceptionStatus" /> values.</value>
    </member>
    <member name="P:Rebex.Mime.MimeException.Message">
      <summary>
            Gets a message that describes the current exception.
            </summary>
      <value>A message that describes the current exception.</value>
    </member>
    <member name="T:Rebex.Mime.MimeHeader">
      <summary>
            A single MIME header.
            </summary>
    </member>
    <member name="M:Rebex.Mime.MimeHeader.ToString">
      <summary>
            Returns a string representation of this header.
            </summary>
      <returns>A string representation of the header.</returns>
      <remarks>The format of the result is "{name}: {value}".</remarks>
    </member>
    <member name="M:Rebex.Mime.MimeHeader.#ctor(System.String,Rebex.Mime.Headers.IHeader)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.MimeHeader" /> class.
            </summary>
      <param name="name">Header name.</param>
      <param name="value">Header value.</param>
    </member>
    <member name="M:Rebex.Mime.MimeHeader.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of <see cref="T:Rebex.Mime.MimeHeader" /> class.
            </summary>
      <param name="name">Header name.</param>
      <param name="value">Header value.</param>
    </member>
    <member name="M:Rebex.Mime.MimeHeader.Clone">
      <summary>
            Creates a copy of the header.
            </summary>
      <returns>A copy of the header.</returns>
    </member>
    <member name="M:Rebex.Mime.MimeHeader.Encode(System.IO.TextWriter)">
      <summary>
            Write the encoded value of the header into a <see cref="T:System.IO.TextWriter" />.
            </summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> to receive the encoded value.</param>
      <remarks>Encoded value include the name, the value and trailing end-of-line sequence (CRLF).</remarks>
    </member>
    <member name="M:Rebex.Mime.MimeHeader.DecodeMimeHeader(System.String)">
      <summary>
            Decodes a raw MIME-encoded header value using 'B' or 'Q' encoding.
            </summary>
      <param name="value">Raw header value.</param>
      <returns>Decoded header value.</returns>
    </member>
    <member name="P:Rebex.Mime.MimeHeader.Name">
      <summary>
            Gets the name of this header,
            </summary>
      <value>Header name.</value>
    </member>
    <member name="P:Rebex.Mime.MimeHeader.Value">
      <summary>
            Gets the value of this header,
            </summary>
      <value>Header value.</value>
      <remarks>This might be any of various classes
            that implement the <see cref="T:Rebex.Mime.Headers.IHeader" /> interface.
            </remarks>
    </member>
    <member name="P:Rebex.Mime.MimeHeader.Unparsable">
      <summary>
            Gets a value indicating whether the header was unparsable.
            </summary>
      <value>True if unparsable; false if parsable.</value>
    </member>
    <member name="P:Rebex.Mime.MimeHeader.Raw">
      <summary>
            Gets the raw text representation of this header.
            </summary>
      <value>Raw header text.</value>
    </member>
    <member name="T:Rebex.Mime.MimeHeaderCollection">
      <summary>
            Represents the collection of <see cref="T:Rebex.Mime.MimeHeader" /> objects of this <see cref="T:Rebex.Mime.MimeEntity" />.
            </summary>
    </member>
    <member name="M:Rebex.Mime.MimeHeaderCollection.GetEnumerator">
      <summary>
            Gets an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:Rebex.Mime.MimeHeaderCollection" /> collection.
            </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the collection.</returns>
    </member>
    <member name="M:Rebex.Mime.MimeHeaderCollection.GetEnumerator(System.Int32,System.Int32)">
      <summary>
            Gets an enumerator for a section of the <see cref="T:Rebex.Mime.MimeHeaderCollection" /> collection
            </summary>
      <param name="index">The zero-based starting index of the <see cref="T:Rebex.Mime.MimeHeaderCollection" /> section that the enumerator should refer to.</param>
      <param name="count">The number of elements in the <see cref="T:Rebex.Mime.MimeHeaderCollection" /> section that the enumerator should refer to.</param>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the specified section of the <see cref="T:Rebex.Mime.MimeHeaderCollection" />.</returns>
      <remarks>Not supported by Rebex Mail for .NET Compact Framework.</remarks>
    </member>
    <member name="M:Rebex.Mime.MimeHeaderCollection.Insert(System.Int32,Rebex.Mime.MimeHeader)">
      <summary>
            Inserts a <see cref="T:Rebex.Mime.MimeHeader" /> into the list at the specified index.
            </summary>
      <param name="index">A zero-based index at which the header should be inserted.</param>
      <param name="header">A header to insert.</param>
    </member>
    <member name="M:Rebex.Mime.MimeHeaderCollection.Insert(System.Int32,System.String,System.String)">
      <summary>
            Inserts a headerinto the list at the specified index.
            </summary>
      <param name="index">A zero-based index at which the header should be inserted.</param>
      <param name="headerName">Name of header to insert.</param>
      <param name="headerValue">Value of header to insert.</param>
    </member>
    <member name="M:Rebex.Mime.MimeHeaderCollection.Add(Rebex.Mime.MimeHeader)">
      <summary>
            Adds a <see cref="T:Rebex.Mime.MimeHeader" /> to the end of the list.
            </summary>
      <param name="header">A header to be added.</param>
      <returns>The index at which the value has been added.</returns>
    </member>
    <member name="M:Rebex.Mime.MimeHeaderCollection.Add(System.String,System.String)">
      <summary>
            Adds a new header to the end of the list.
            </summary>
      <param name="headerName">Name of header to be added.</param>
      <param name="headerValue">Value of header to be added.</param>
      <returns>The index at which the value has been added.</returns>
    </member>
    <member name="M:Rebex.Mime.MimeHeaderCollection.Remove(System.String)">
      <summary>
            Removes all <see cref="T:Rebex.Mime.MimeHeader" />s of the specified name from the list.
            </summary>
      <param name="name">Name of headers to remove.</param>
      <returns>The number headers removed.</returns>
    </member>
    <member name="M:Rebex.Mime.MimeHeaderCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the <see cref="T:Rebex.Mime.MimeHeader" /> at the specified index from the list.
            </summary>
      <param name="index">A zero-based index of header to remove.</param>
    </member>
    <member name="M:Rebex.Mime.MimeHeaderCollection.Clear">
      <summary>
            Removes all headers from the list.
            </summary>
    </member>
    <member name="M:Rebex.Mime.MimeHeaderCollection.Remove(Rebex.Mime.MimeHeader)">
      <summary>
            Removes the first occurance of specified <see cref="T:Rebex.Mime.MimeHeader" /> from the list.
            </summary>
      <param name="header">Header to remove.</param>
    </member>
    <member name="M:Rebex.Mime.MimeHeaderCollection.GetRaw(System.String)">
      <summary>
            Gets the raw text representation of the specified header if available.
            </summary>
      <param name="headerName">The name of the header to get.</param>
      <value>Raw header text, or null if not available.</value>
    </member>
    <member name="M:Rebex.Mime.MimeHeaderCollection.GetAllHeaders(System.String)">
      <summary>
            Gets all <see cref="T:Rebex.Mime.MimeHeader" /> of the specified name.
            </summary>
      <param name="headerName">The name of the headers to get.</param>
      <value>Array of <see cref="T:Rebex.Mime.MimeHeader" /> of the specified name.</value>
    </member>
    <member name="M:Rebex.Mime.MimeHeaderCollection.GetAllHeaderValuesRaw(System.String)">
      <summary>
            Gets raw text representations of all headers of the specified name.
            </summary>
      <param name="headerName">The name of the headers to get.</param>
      <value>Array of raw text representations of all headers of the specified name.</value>
    </member>
    <member name="P:Rebex.Mime.MimeHeaderCollection.SyncRoot">
      <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:Rebex.Mime.MimeHeaderCollection" /> collection.
            </summary>
      <value>An object that can be used to synchronize access to the <see cref="T:Rebex.Mime.MimeHeaderCollection" /> collection.</value>
    </member>
    <member name="P:Rebex.Mime.MimeHeaderCollection.Count">
      <summary>
            Gets the number of headers contained in the <see cref="T:Rebex.Mime.MimeHeaderCollection" />.
            </summary>
      <value>The number of headers contained in the <see cref="T:Rebex.Mime.MimeHeaderCollection" />.</value>
    </member>
    <member name="P:Rebex.Mime.MimeHeaderCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:Rebex.Mime.MimeHeader" /> at the specified index.
            </summary>
      <param name="index">The zero-based index of the <see cref="T:Rebex.Mime.MimeHeader" /> to get.</param>
      <value>
        <see cref="T:Rebex.Mime.MimeHeader" /> of the specified index.</value>
    </member>
    <member name="P:Rebex.Mime.MimeHeaderCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:Rebex.Mime.MimeHeader" /> of the specified name.
            </summary>
      <param name="headerName">The name of the header to get.</param>
      <value>
        <see cref="T:Rebex.Mime.MimeHeader" /> of the specified name.</value>
      <remarks>
        <p>
            If no header of the specified name is found, the return value is null.
            </p>
        <p>
            If more than one headers are found, only the first is returned.
            </p>
        <p>
            When assinging value, the first header of specified name is changed
            and remaining headers of the same name are removed.
            </p>
      </remarks>
    </member>
    <member name="T:Rebex.Mime.MimeMessage">
      <summary>
            A MIME e-mail message.
            </summary>
      <remarks>
            Adds useful properties to <see cref="T:Rebex.Mime.MimeEntity" /> class.
            </remarks>
    </member>
    <member name="M:Rebex.Mime.MimeMessage.#ctor">
      <summary>
            Initializes an instance of <see cref="T:Rebex.Mime.MimeMessage" />.
            </summary>
    </member>
    <member name="M:Rebex.Mime.MimeMessage.Clone">
      <summary>
            Creates a copy of this message.
            </summary>
      <returns>A new message.</returns>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.EnvelopeId">
      <summary>
            Gets or sets the envelope identifier to be transmitted along with the message
            and included in any DSNs issued.
            </summary>
      <value>The envelope identifier.</value>
      <remarks>
        <p>
            The purpose of the envelope identifier is to allow the sender of a message
            to identify the transaction for which the DSN was issued.
            </p>
        <p>
            Please note that the envelope ID is not a part of a mail message and is not saved with it.
            Its purpose is to be used while sending the message.
            </p>
        <p>
            Envelope ID must be an ASCII string up to 100 characters in length.
            Characters &lt;33 and character '+', '=' and character 127 are represented as three characters.
            </p>
      </remarks>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.Priority">
      <summary>
            Gets or sets the priority of the message.
            </summary>
      <value>Message priority.</value>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.Date">
      <summary>
            Gets or sets the origination date of this message.
            </summary>
      <value>The origination date.</value>
      <remarks>
            The origination date specifies the date and time at which the creator
            of the message indicated that the message was complete and ready to enter
            the mail delivery system.
            </remarks>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.From">
      <summary>
            Gets or sets the list of authors of this message.
            </summary>
      <value>The list of authors.</value>
      <remarks>
        <p>
            This property specifies the the list of authors
            of the message.
            </p>
        <p>
            If this field contains multiple authors, the '<see cref="P:Rebex.Mime.MimeMessage.Sender" />'
            field must be set to specify the agent responsible for the transmission
            of the message
            </p>
        <p>
            If this field contains a single author that is also the sender
            of the message, the '<see cref="P:Rebex.Mime.MimeMessage.Sender" />' field should not be set.
            </p>
      </remarks>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.Sender">
      <summary>
            Gets or sets the sender of this message.
            </summary>
      <value>The sender of this message.</value>
      <remarks>
        <p>
            This property specifies the agent responsible for the transmission
            of the message. Use <see cref="P:Rebex.Mime.MimeMessage.From" /> to specify the list of authors
            of the message.
            </p>
        <p>
            This field must be set if the '<see cref="P:Rebex.Mime.MimeMessage.From" />' field contains multiple
            authors.
            </p>
        <p>
            This field should not be set if the '<see cref="P:Rebex.Mime.MimeMessage.From" /> field contains
            a single author that is also the sender of the message.
            </p>
      </remarks>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.ReplyTo">
      <summary>
            Gets or sets the list of addresses that should receive replies
            to this message.
            </summary>
      <value>The list of addresses that should receive replies.</value>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.To">
      <summary>
            Gets or sets the list of addresses of primary recipients of the message.
            </summary>
      <value>The list of primary recipients.</value>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.CC">
      <summary>
            Gets or sets the list of addresses of others who are to receive the message.
            </summary>
      <value>The list of other recipients.</value>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.Bcc">
      <summary>
            Gets or sets the list of addresses of recipients that are not to be revealed to other recipients of the message.
            </summary>
      <value>The list of recipients.</value>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.MessageId">
      <summary>
            Gets or sets the unique identifier of the message.
            </summary>
      <value>The unique identifier.</value>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.InReplyTo">
      <summary>
            Gets or sets the list of identifiers of messages to which the message is a reply.
            </summary>
      <value>The list of message identifiers.</value>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.References">
      <summary>
            Gets or sets the list of identifiers of messages in the same "thread" of conversation.
            </summary>
      <value>The list of message identifiers.</value>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.Subject">
      <summary>
            Gets or sets the subject of the message.
            </summary>
      <value>The subject.</value>
      <remarks>
            This property contains a short string identifying the topic
            of the message.
            </remarks>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.Comments">
      <summary>
            Gets or sets the comments on the message.
            </summary>
      <value>Comments.</value>
      <remarks>
            This property contains additional comments on the contents
            of the message.
            </remarks>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.Keywords">
      <summary>
            Gets or sets the list of keywords.
            </summary>
      <value>The list of keywords.</value>
      <remarks>
            This is a list of important words and phrases that might be useful
            for the recipient of the message.
            </remarks>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.DispositionNotificationTo">
      <summary>
            Gets or sets the list of mailboxes that should be notified
            of message disposition by the receiving user agent.
            </summary>
      <value>The list of mailboxes.</value>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.ListArchive">
      <summary>
            Gets or sets the list of URLs of the 'List-Archive' header.
            </summary>
      <value>The list of URLs.</value>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.ListHelp">
      <summary>
            Gets or sets the list of URLs of the 'List-Help' header.
            </summary>
      <value>The list of URLs.</value>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.ListOwner">
      <summary>
            Gets or sets the list of URLs of the 'List-Owner' header.
            </summary>
      <value>The list of URLs.</value>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.ListSubscribe">
      <summary>
            Gets or sets the list of URLs of the 'List-Subscribe' header.
            </summary>
      <value>The list of URLs.</value>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.ListPost">
      <summary>
            Gets or sets the list of URLs of the 'List-Post' header.
            </summary>
      <value>The list of URLs.</value>
    </member>
    <member name="P:Rebex.Mime.MimeMessage.ListUnsubscribe">
      <summary>
            Gets or sets the list of URLs of the 'List-Unsubscribe' header.
            </summary>
      <value>The list of URLs.</value>
    </member>
    <member name="T:Rebex.Mime.MimeOptions">
      <summary>
            Specifies various options for MIME parser and writer.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.DoNotWriteBcc">
      <summary>
            Do not write the "Bcc" header into output stream.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.DoNotParseMimeTree">
      <summary>
            Ignore the MIME tree and parse the message as a single-level entity.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.ProcessAllHeaders">
      <summary>
            Parses and reencodes all headers, even when not needed or modified.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.IgnoreUnparsableHeaders">
      <summary>
            Ignore unparsable headers when parsing mail message.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.AlwaysWriteContentTransferEncoding">
      <summary>
            Always write a content-transfer-encoding, even if it has a default value of "7bit"
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.IgnoreUnparsableSignatures">
      <summary>
            Ignore unparsable S/MIME signature entities when parsing mail message.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.AllowAnyTextCharacters">
      <summary>
            Skips checking of text content for text/* entities. When this options is enabled,
            it is possible to use any characters inside text entities.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.DoNotQuoteProblematicSequences">
      <summary>
            Disables encoding of leading 'F', '.' and '-' character in body parts using quoted-printable content transfer encoding.
            These leading characters used to cause problems to legacy mail transfer agents, so quoted-printable-encoding them was used
            as a workaround that doesn't cause any problems to properly-implemented mail agents.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.OnlyParseHeaders">
      <summary>
            Only parses message headers and ignores the body.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.DoNotAddDateIfNoSubjectAndFrom">
      <summary>
            Do not automatically add a date header if 'date', 'subject' or 'from' headers are missing from a top-level or embedded message.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.DisableEncryptionKeyPreference">
      <summary>
            Do not include encryption key preference attribute in signed message attributes.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.DisableSMimeCapabilitiesAttribute">
      <summary>
            Do not include S/MIME options attribute in signed message attributes.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.SkipCertificateUsageCheck">
      <summary>
            Skip certificate usage check.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.IgnoreInvalidTnefMessages">
      <summary>
            Ignore invalid TNEF (winmail.dat) attachments when parsing mail messages.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.SkipSenderCheck">
      <summary>
            Skip sender check.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.KeepRawEntityBody">
      <summary>
            Keep the raw entity body when parsing MIME messages and make it accessible using <see cref="M:Rebex.Mime.MimeEntity.GetRawContentStream" />.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.DoNotCloseStreamAfterLoad">
      <summary>
            Keep the input stream open when <see cref="M:Rebex.Mime.MimeEntity.Load(System.IO.Stream)" /> method is done.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.DoNotPreloadAttachments">
      <summary>
            Try to conserve memory by not preloading attachment content when constructing a message.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.DisableSinglePartHtmlWorkaround">
      <summary>
            Disable a workaround for broken mail clients such as Mac mail that don't correctly parse HTML-only messages.
            By default, MailMessage class constructs a single-part multipart/alternative structure to solve this. Enabling
            this flag turns off this behavior.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.LoadMsgProperties">
      <summary>
            Load Outlook MSG properties into custom MIME headers.
            All these MIME headers start with X-Outlook- string.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.DoNotTrimHeaderValues">
      <summary>
            Instructs the MIME header parser not to trim the headers while parsing them.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.DisableRtfToHtmlConversion">
      <summary>
            Do not convert RTF views to HTML.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.TreatBinaryRtfAsAlternateView">
      <summary>
            Treat binary RTF as AlternateView.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeOptions.SkipTnefMessageProcessing">
      <summary>
            Skip TNEF (winmail.dat) attachment processing. If specified, the 'winmail.dat' attachment is not processed at all.
            </summary>
    </member>
    <member name="T:Rebex.Mime.TransferEncoding">
      <summary>
            Type of transfer encoding of the content.
            </summary>
    </member>
    <member name="F:Rebex.Mime.TransferEncoding.Unknown">
      <summary>
            Unknown content encoding.
            </summary>
    </member>
    <member name="F:Rebex.Mime.TransferEncoding.QuotedPrintable">
      <summary>
            Quoted-Printable encoding.
            </summary>
      <remarks>
            The Quoted-Printable encoding is intended to represent data that
            largely consists of octets that correspond to printable characters
            in the US-ASCII character set.
            </remarks>
    </member>
    <member name="F:Rebex.Mime.TransferEncoding.Base64">
      <summary>
            Base64 encoding.
            </summary>
      <remarks>
            The Base64 encoding is designed to represent arbitrary
            sequences of octets in a form that is not humanly readable.
            </remarks>
    </member>
    <member name="F:Rebex.Mime.TransferEncoding.SevenBit">
      <summary>
            No encoding, content data is 7bit.
            </summary>
      <remarks>
        <p>
            7bit data refers to data that is all represented as relatively
            short lines with 998 octets or less between CRLF line separation
            sequences. No octets with decimal values greater than 127 are allowed
            and neither are NULs (octets with decimal value 0).
            CR (decimal value 13) and LF (decimal value 10) octets only occur
            as part of CRLF line separation sequences.
            </p>
      </remarks>
    </member>
    <member name="F:Rebex.Mime.TransferEncoding.EightBit">
      <summary>
            No encoding, content data is 8bit.
            </summary>
      <remarks>
            8bit data refers to data that is all represented as relatively
            short lines with 998 octets or less between CRLF line separation
            sequences. Octets with decimal values greater than 127 may be used.
            CR (decimal value 13) and LF (decimal value 10) octets only occur
            as part of CRLF line separation sequences.
            </remarks>
    </member>
    <member name="F:Rebex.Mime.TransferEncoding.Binary">
      <summary>
            No encoding, content data is binary.
            </summary>
      <remarks>
            Binary data refers to data where any sequence of octets is allowed.
            </remarks>
    </member>
    <member name="T:Rebex.Mime.DispositionTypeNames">
      <summary>
            Contains string representations of disposition type names.
            </summary>
    </member>
    <member name="F:Rebex.Mime.DispositionTypeNames.Attachment">
      <summary>Attachment ("attachment")</summary>
    </member>
    <member name="F:Rebex.Mime.DispositionTypeNames.Inline">
      <summary>Inline ("inline").</summary>
    </member>
    <member name="T:Rebex.Mime.MimeSignatureStyle">
      <summary>
            Specifies the style of signed content.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeSignatureStyle.None">
      <summary>No signed content.</summary>
    </member>
    <member name="F:Rebex.Mime.MimeSignatureStyle.Detached">
      <summary>
            Detached signature - the mail message will be readable even by clients
            that don't support S/MIME.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeSignatureStyle.Enveloped">
      <summary>
            Enveloped signature - the mail message will only be readable by clients
            that support S/MIME.
            </summary>
    </member>
    <member name="T:Rebex.Mime.MimeEntityKind">
      <summary>
            Represents the kind of MIME entity.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeEntityKind.Body">
      <summary>
            Body entity - an entity with a body and no child parts.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeEntityKind.Multipart">
      <summary>
            Multipart entity - a container for multiple child parts.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeEntityKind.Message">
      <summary>
            RFC822 message container entity - en entity that contains a mail message.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeEntityKind.Signed">
      <summary>
            Signed message container entity - an entity that contains a signed content.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimeEntityKind.Enveloped">
      <summary>
            Encrypted message container entity - an entity that contains an encrypted content.
            </summary>
    </member>
    <member name="T:Rebex.Mime.MimePriority">
      <summary>
            Mime message priority.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimePriority.Low">
      <summary>
            Low priority.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimePriority.Normal">
      <summary>
            Normal priority.
            </summary>
    </member>
    <member name="F:Rebex.Mime.MimePriority.High">
      <summary>
            High priority.
            </summary>
    </member>
    <member name="T:Rebex.Mail.SubjectInfo">
      <summary>
            Represents a message signer or an encrypted message recipient.
            </summary>
    </member>
    <member name="P:Rebex.Mail.SubjectInfo.Identifier">
      <summary>
            Gets the identifier of the signer or recipient
            </summary>
      <value>Identifier of the signer or recipient.</value>
    </member>
    <member name="P:Rebex.Mail.SubjectInfo.Certificate">
      <summary>
            Gets the certificate associated with the signer or recipient, or null if not available.
            </summary>
      <remarks>The signer's/recipient's certificate, or null.</remarks>
    </member>
    <member name="P:Rebex.Mail.SubjectInfo.CertificateChain">
      <summary>
            Gets the certificate chain associated with the signer or recipient, or null if not available.
            </summary>
      <remarks>The signer's/recipient's certificate chain, or null.</remarks>
    </member>
    <member name="P:Rebex.Mail.SubjectInfo.DigestAlgorithm">
      <summary>
            Gets the digest algorithm used to produce a signature. Only set for signers, not for recipients.
            </summary>
      <value>Digest algorithm.</value>
    </member>
    <member name="P:Rebex.Mail.SubjectInfo.SignatureParameters">
      <summary>
            Gets mail signature parameters. Only set for senders of signed mail.
            </summary>
      <value>Mail signature parameters.</value>
    </member>
    <member name="P:Rebex.Mail.SubjectInfo.EncryptionParameters">
      <summary>
            Gets mail encryption parameters. Only set for recipients of encrypted mail.
            </summary>
      <value>Mail encryption parameters.</value>
    </member>
    <member name="T:Rebex.Mail.SubjectInfoCollection">
      <summary>
            Represents the collection of alternate mail message views.
            </summary>
    </member>
    <member name="M:Rebex.Mail.SubjectInfoCollection.GetEnumerator">
      <summary>
            Gets an <see cref="T:System.Collections.IEnumerator" /> for the collection.
            </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the collection.</returns>
    </member>
    <member name="M:Rebex.Mail.SubjectInfoCollection.CopyTo(Rebex.Mail.SubjectInfo[],System.Int32)">
      <summary>
            Copies the range of elements from the <see cref="T:Rebex.Mail.SubjectInfoCollection" /> to a compatible one-dimensional
            array, starting at the specified index of the target array.
            </summary>
      <param name="array">One-dimensional zero-based array that is the destination of the elements copied from <see cref="T:Rebex.Mail.SubjectInfoCollection" />.</param>
      <param name="index">A zero-based index in the destination array at which copying begins.</param>
    </member>
    <member name="P:Rebex.Mail.SubjectInfoCollection.Count">
      <summary>
            Gets the number of items in the collection.
            </summary>
      <value>The number of items is the collection.</value>
    </member>
    <member name="P:Rebex.Mail.SubjectInfoCollection.Item(System.Int32)">
      <summary>
            Gets the list item at the specified index.
            </summary>
      <param name="index">The zero-based index of the list item to get or set.</param>
      <value>An item.</value>
    </member>
    <member name="P:Rebex.Mail.SubjectInfoCollection.IsSynchronized">
      <summary>
            Gets a value indicating whether access to <see cref="T:Rebex.Mail.SubjectInfoCollection" /> is synchronized (thread-safe).
            </summary>
      <value>A value indicating whether access to <see cref="T:Rebex.Mail.SubjectInfoCollection" /> is synchronized.</value>
    </member>
    <member name="P:Rebex.Mail.SubjectInfoCollection.SyncRoot">
      <summary>
            Gets an object that can be used to synchronize access to <see cref="T:Rebex.Mail.SubjectInfoCollection" /> object.
            </summary>
      <value>an object that can be used to synchronize access to <see cref="T:Rebex.Mail.SubjectInfoCollection" /> object.</value>
    </member>
  </members>
</doc>