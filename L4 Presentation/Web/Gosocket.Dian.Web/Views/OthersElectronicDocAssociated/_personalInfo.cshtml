@using Gosocket.Dian.Infrastructure;
@model Gosocket.Dian.Web.Models.OthersElectronicDocAssociatedViewModel
@Html.AntiForgeryToken()
@{
    ViewBag.Title = "Datos";
}
<div class="row radian-subtitle-container" style="margin:12px;">
    <p class="sub-title">
        @ViewBag.Title
    </p>
</div>
<div class="row radian-personal-info"  style="margin:12px;">
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(m => m.Nit, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Nit, new { @class = "form-control contributorFileType-props input-general", disabled = "disabled" })
            </div>
        </div>
        @if (Model.EsElectronicDocNomina || Model.EsElectronicDocNominaNoOFE)
        {
            <div class="col-sm-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.Name, new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control contributorFileType-props input-general", disabled = "disabled" })
                </div>
            </div>
        }
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(m => m.BusinessName, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.BusinessName, new { @class = "form-control contributorFileType-props input-general", disabled = "disabled" })
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control contributorFileType-props input-general", disabled = "disabled" })
            </div>
        </div>
        <div class="col-sm-4">
            <div class="form-group">
                @Html.LabelFor(m => m.State, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.State, new { @class = "form-control contributorFileType-props input-general", disabled = "disabled" })
            </div>
        </div>
        @if (Model.EsElectronicDocNomina || Model.EsElectronicDocNominaNoOFE)
        {
            <div class="col-sm-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.ContributorType, new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.ContributorType, new { @class = "form-control contributorFileType-props input-general", disabled = "disabled" })
                </div>
            </div>
        }
        </div>
    @*@if (Model.Step == 3 )
    {
        <div class="row">
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.State, new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.State, new { @class = "form-control contributorFileType-props input-general", disabled = "disabled" })
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.ContributorType, new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.ContributorType, new { @class = "form-control contributorFileType-props input-general", disabled = "disabled" })
                </div>
            </div>
        </div>
    }*@
     @*@if ((ConfigurationManager.GetValue("Environment") == "Hab" || ConfigurationManager.GetValue("Environment") == "Local" || ConfigurationManager.GetValue("Environment") == "Test") && Model.State == "Habilitado" && !User.IsInRole("Administrador") && ConfigurationManager.GetValue("BotonSincronizar") == "true" )
	 {
            <div id="panel" data-target="#panel-form" data-toggle="panel-overlay" class="panel panel-bordered-dian margin-bottom-0">
                <div class="panel-body text-right">
                    <div class="col-md-3 col-md-offset-9">
                        <button type="button" class="btn btn-default btn-sync-to-production">Sincronizar a Producción</button>
                    </div>
                </div>
            </div>
        }*@
</div>

