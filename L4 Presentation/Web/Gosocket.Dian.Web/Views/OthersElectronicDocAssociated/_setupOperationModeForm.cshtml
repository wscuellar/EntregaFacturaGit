@using Gosocket.Dian.Domain.Common
@using Gosocket.Dian.Infrastructure;

@model Gosocket.Dian.Web.Models.OtherDocElecSetupOperationModeViewModel

<div class="row margin-horizontal-0 margin-bottom-10" style="margin-left:5px; margin-right:5px;">
    <div class="col-md-12 padding-horizontal-0">
        <div id="panel-form" data-target="#panel-form" data-toggle="panel-overlay" class="panel panel-bordered-dian">
            <div class="panel-body padding-20 padding-bottom-0">

                <div class="row">
                    <div class="col-sm-6 col-md-3 padding-xs-0">
                        <div class="form-group">
                            @Html.LabelFor(m => m.OperationModeId, new { @class = "control-label" })
                            @Html.DropDownListFor(m => m.OperationModeId, Model.OperationModeList, new { @class = "form-control selectpicker" })
                        </div>
                    </div>
                    <div class="col-sm-5 padding-xs-0">
                        <div class="form-group">
                            @Html.Label("Url de recepción de eventos", new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.SoftwareUrl, new { @class = "form-control input-general", disabled = "disabled" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <h4 class="panel-title-radian padding-0"><strong>Datos de empresa y software</strong></h4>
                    <hr class="margin-5" />

                    <div class="section-software-technology-provider">
                        <div class="col-sm-6 col-md-3 padding-xs-0">
                            <div class="form-group">
                                @Html.Label("ProviderId", "Nombre empresa proveedora", new { @class = "control-label" })
                                @Html.DropDownListFor(m => m.ProviderId, (SelectList)ViewBag.ListTechnoProviders, "Seleccione...", new { @class = "form-control selectpicker" })
                                @Html.ValidationMessageFor(m => m.ProviderId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-sm-5 col-md-3 padding-xs-0">
                            <div class="form-group">
                                @Html.LabelFor(m => m.SoftwareName, new { @class = "control-label" }) 
                                @*@Html.DropDownListFor(m => m.SoftwareId, new SelectList(ViewBag.ListSoftwares, "Id", "Name"), "Seleccione...", new { @class = "form-control selectpicker" })*@
                                @Html.DropDownList("ddlsoftware", new SelectList(ViewBag.ListSoftwares, "Id", "Name"), "Seleccione...", new { @class = "form-control selectpicker" })
                                @*@Html.ValidationMessageFor(m => m.SoftwareId, "", new { @class = "text-danger" })*@
                                <div id="validddlSoftwareName" class="text-danger"></div>
                            </div>
                        </div>
                    </div>

                    <div class="section-own-software">
                        <div class="col-sm-3 padding-xs-0">
                            <div class="form-group">
                                @Html.Label("Nombre empresa proveedora", new { @class = "control-label" })
                                @Html.TextBoxFor(m => m.Provider, new { @class = "form-control input-general", disabled = "disabled" })
                            </div>
                        </div>
                        <div class="col-sm-3 padding-xs-0" id="divSoftwareName">
                            <div class="form-group">
                                @Html.LabelFor(m => m.SoftwareName, new { @class = "control-label" })
                                @Html.TextBoxFor(m => m.SoftwareName, new { @id = "SoftwareName", @name = "SoftwareName", @class = "form-control input-general", @style = "background: #ffffff;" })
                                @Html.ValidationMessageFor(m => m.SoftwareName, null, new { @class = "text-danger" })
                                <div id="validSoftwareName" class="text-danger"></div>
                            </div>
                        </div>
                        <div class="col-sm-3 padding-xs-0" id="divSoftwarePin">
                            <div class="form-group">
                                @Html.LabelFor(m => m.SoftwarePin, new { @class = "control-label" })
                                @Html.TextBoxFor(m => m.SoftwarePin, new { @id = "SoftwarePin", @name = "SoftwarePin", @class = "form-control input-general", @style = "background: #ffffff;" })
                                @Html.ValidationMessageFor(m => m.SoftwarePin, null, new { @class = "text-danger" })
                                <div id="validSoftwarePin" class="text-danger"></div>
                            </div>
                        </div>
                        <div class="col-sm-3 padding-xs-0" id="DivSoftwareId">
                            <div class="form-group">
                                @Html.Label("ID del Software", new { @class = "control-label" })
                                @Html.TextBox("txtsoftware", Model.SoftwareId, new { @class = "form-control input-general", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>

                    @if (Model.OperationModeId == (int)OtherDocElecOperationMode.OwnSoftware)
                    {

                    }

                </div>
            </div>
            <div class="text-left">
                @if (ConfigurationManager.GetValue("Environment") != "Prod")
                {
                    <button type="button" name="Submit" id="save-operation-mode" class="btn btn-primary btn-radian-success">Adicionar</button>
                }
            </div>

        </div>
    </div>
</div>
