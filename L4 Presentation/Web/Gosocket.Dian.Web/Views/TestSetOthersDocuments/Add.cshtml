@model Gosocket.Dian.Web.Models.TestSetOthersDocumentsViewModel

@{
    ViewBag.Title = "Configurar Set de Pruebas";
}

@section css
{
    <style type="text/css">

        .btn-success:focus, .btn-hover-success:active, .btn-hover-success.active, .btn.btn-active-success:active, .btn.btn-active-success.active, .dropdown.open > .btn.btn-active-success, .btn-group.open .dropdown-toggle.btn.btn-active-success {
            background-color: #348441 !important;
            border-color: #348441 !important;
            color: #fff !important;
        }

        .buttonAddRightOtherDoc {
            padding-right: 0px !important;
            margin-right: 0px !important;
        }

        .buttonAddLeftOtherDoc {
            padding-left: 0px !important;
            margin-left: 0px !important;
            padding-top: 20px !important;
        }

        .btnAddOthersDocs {
            height: 41px !important;
            width: 22px;
            font-size: 14pt;
            color: #fff;
            background-color: #348441;
            border-right-width: 0px !important;
            border-right-style: none;
            border-top-right-radius: 6px !important;
            border-bottom-right-radius: 6px !important;
            border-top-left-radius: 0px !important;
            border-bottom-left-radius: 0px !important;
            text-align: center;
            padding-left: 0px;
            padding-right: 0px;
            margin-left: -3px;
        }

            .btnAddOthersDocs:hover {
                background-color: #62C7AB;
                background: #62C7AB;
                border-color: #62C7AB;
                color: #fff;
            }

        .btn-success:hover, btn-radian-success:hover {
            background-color: #62C7AB;
            background: #62C7AB;
            border-color: #62C7AB;
            color: #fff;
        }

        .button.selectpicker {
            border-right-color: #fff !important;
            border-right-width: 0px !important;
            border-right-style: none;
            border-top-right-radius: 0px !important;
            border-bottom-right-radius: 0px !important;
            border-top-left-radius: 4px !important;
            border-bottom-left-radius: 4px !important;
        }

        .btn dropdown-toggle selectpicker btn-default {
            border-right-color: #fff !important;
            border-right-width: 0px !important;
            border-right-style: none;
            border-top-right-radius: 0px !important;
            border-bottom-right-radius: 0px !important;
        }

        .input-general {
            background: #fff !important;
        }

        .form-control[disabled], .form-control[readonly], fieldset[disabled] .form-control {
            cursor: not-allowed;
            background-color: #eee !important;
        }

        .btnCloseOtherDocument {
            color: #fff;
            background: #348441 !important;
            background-color: #348441 !important;
            /*border-radius: 10px !important;*/
            float: right;
            cursor: pointer;
            opacity: 100 !important;
            padding-left: 5px !important;
            padding-right: 5px !important;
            padding-top: 1px !important;
            padding-bottom: 2px !important;
            font-weight: normal !important;
            font-family: auto !important;
            margin-top: 3px !important;
            margin-right: 1px !important;
        }

        .prompt-comment .modal-body {
            width: 96%;
        }

        .modal-body .close, .modal-header .close {
            background-color: #348441 !important;
        }

        .btnSuccessOtherDocument {
            height: 33px;
            border-radius: 4px;
            margin-top: 18px;
            height: 36px;
        }

        #validNewElectronicDocument {
            display: none;
            font-size: 12px;
            padding-left: 17px;
        }
    </style>
}
<div class="page-content margin-15">
    
    <div class="row margin-horizontal-0" style="margin-top: 37px;">
        <div class="tab-base">
            <div class="tab-content padding-0">
                <div id="tab-current-country" class="tab-pane fade active in">
                    <div class="panel">

                        <div class="panel-body padding-top-20">
                            <div class="row margin-horizontal-0">
                                <div id="panel-form" data-target="#panel-form" data-toggle="panel-overlay" class="panel panel-bordered-dian margin-bottom-0">
                                    @using (Html.BeginForm("Add", "TestSetOthersDocuments", FormMethod.Post, new { id = "add-testset-form" }))
                                    {
                                        @Html.Partial("_form")
                                        <p id="greaterThanTotalRequired" style="display:none" class="text-danger margin-left-20">El total de Documentos Aceptados requeridos no puede superar al Total de Documentos Requeridos</p>
                                        <div class="panel-footer text-right">
                                            <a href="@Url.Action("List", "TestSetOthersDocuments")" class="btn btn-default btn-radian-default">Volver</a>
                                            <button type="button" class="btn btn-success btn-radian-success btn-save">Guardar</button>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Add Electronic Document-->
    <div class="modal fade prompt-comment" id="modalElectronicDocument" tabindex="-1" aria-labelledby="modalElectronicDocumentLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content" style="padding-right: 12px;">
                <div class="modal-header" style="padding-left: 27px;">
                    <h5 class="modal-title" id="modalElectronicDocumentLabel">Añadir Documento Electrónico</h5>
                    <button type="button" class="close btnCloseOtherDocument" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" style="padding-left: 1px !important;display: block;">

                    <table>
                        <tr>
                            <td class="col-md-12 col-lg-12" style="padding-right: 30px;">
                                <input type="text" id="txtElectronicDocumentName" class="form-control margin-top-20 input-general fields captureFields" maxlength="50" style="margin-left: 8px;" />
                            </td>
                            <td>
                                <button type="button" class="btn btn-success btn-radian-success btnSuccessOtherDocument" onclick="addNewElectronicDocument()">Añadir</button>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <p id="validNewElectronicDocument" class="text-danger field-validation-error">Por favor digite el nombre del documento electrónico</p>
                            </td>
                        </tr>
                    </table>

                </div>
            </div>
        </div>
    </div>

</div>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")

<script>

    var enumElectronicsDocuments =
    {
        ElectronicPayroll: 1, //Nomina electronica y Nomina de ajuste
        ImportDocument: 2,
        SupportDocument: 3,
    };

        $(document).ready(function ($) {

            if ('@ViewBag.ErrorExistsTestSet' == 'True') {
                var sms = 'Ya se encuentra registrado un set de pruebas para este Documento electrónico y modo de operación';
                ErrorDialogV2("¡Notificación!", sms);
            }

            $('.btn-save').click(function () {
                var form = $('#add-testset-form');
                if (form.valid()) {
                    showLoading('#panel-form', 'Guardando', 'Procesando datos, por favor espere.');
                    form.submit();
                }
            });

            $('#ElectronicDocumentId').change(function () {

                showHideElectronicPayroll();

            });

            //if ($('#ElectronicDocumentId').val() == enumElectronicsDocuments.ElectronicPayroll) {
                showHideElectronicPayroll();
            //}

            $("#OthersDocumentsRequired").focusout(function () {
                console.log("OthersDocumentsRequired focusout");
                updateTotalOthersDocuments();
            });

            $("#ElectronicPayrollAjustmentRequired").focusout(function () {
                console.log("ElectronicPayrollAjustmentRequired focusout");
                updateTotalOthersDocuments();
            });

            $("#OthersDocumentsAcceptedRequired").focusout(function () {
                console.log("OthersDocumentsAcceptedRequired focusout");
                updateTotalOthersDocuments();
            });

            $("#ElectronicPayrollAjustmentAcceptedRequired").focusout(function () {
                console.log("ElectronicPayrollAjustmentAcceptedRequired focusout");
                updateTotalOthersDocuments();

            });


            if ($("#TestSetId").val() != '' && $("#TestSetId").val() != null) {
                updateTotalOthersDocuments();
            }

        });//ready


    function showHideElectronicPayroll() {
        if ($('#ElectronicDocumentId').val() == enumElectronicsDocuments.ElectronicPayroll) {
            $("#divPayrollAjustment").show();
            $("#divPayrollAjustmentAcepted").show();

            $("#lblOthersDocumentsRequired").text('Nomina electrónica');
            $("#lblOthersDocumentsAcceptedRequired").text('Nomina electrónica');

            $("#divPayrollAjustment").find(".control-label").text("Nomina electrónica de ajuste");
            $("#divPayrollAjustmentAcepted").find(".control-label").text("Nomina electrónica de ajuste");

            if ($("#TestSetId").val() == '' || $("#TestSetId").val() == null) {
                $("#OthersDocumentsRequired").val('0');
                $("#ElectronicPayrollAjustmentRequired").val('0');
                $("#OthersDocumentsAcceptedRequired").val('0');
                $("#ElectronicPayrollAjustmentAcceptedRequired").val('0');
            }
        }
        else {
            //$("#divPayrollAjustment").hide();
            //$("#divPayrollAjustmentAcepted").hide();

            $("#lblOthersDocumentsRequired").text($('#ElectronicDocumentId option:selected').text());
            $("#lblOthersDocumentsAcceptedRequired").text($('#ElectronicDocumentId option:selected').text());

            $("#divPayrollAjustment").find(".control-label").text("Nota de Ajuste");
            $("#divPayrollAjustmentAcepted").find(".control-label").text("Nota de Ajuste");

            if ($("#TestSetId").val() == '' || $("#TestSetId").val() == null) {
                $("#OthersDocumentsRequired").val('0');
                $("#ElectronicPayrollAjustmentRequired").val('0');
                $("#OthersDocumentsAcceptedRequired").val('0');
                $("#ElectronicPayrollAjustmentAcceptedRequired").val('0');
            }

        }
        updateTotalOthersDocuments();
    }

    function updateTotalOthersDocuments() {

        var val1 = 0, val2 = 0, val3 = 0, val4 = 0;

        if ($("#OthersDocumentsRequired").val() != '' && $("#OthersDocumentsRequired").val() != null)
            val1 = parseInt($("#OthersDocumentsRequired").val());

        if ($("#ElectronicPayrollAjustmentRequired").val() != '' && $("#ElectronicPayrollAjustmentRequired").val() != null)
            val2 = parseInt($("#ElectronicPayrollAjustmentRequired").val());

        if ($("#OthersDocumentsAcceptedRequired").val() != '' && $("#OthersDocumentsAcceptedRequired").val() != null)
            val3 = parseInt($("#OthersDocumentsAcceptedRequired").val());

        if ($("#ElectronicPayrollAjustmentAcceptedRequired").val() != '' && $("#ElectronicPayrollAjustmentAcceptedRequired").val() != null)
            val4 = parseInt($("#ElectronicPayrollAjustmentAcceptedRequired").val());

        $("#TotalDocumentRequired").val(val1 + val2);
        $("#TotalDocumentAcceptedRequired").val(val3 + val4);

        if ((val3 + val4) > (val1 + val2)) {
            $(".btn-save").prop("disabled", true);
            $("#greaterThanTotalRequired").show();
        }
        else {
            $(".btn-save").prop("disabled", false);
            $("#greaterThanTotalRequired").hide();
        }
    }

    function addNewElectronicDocument() {

        if ($("#txtElectronicDocumentName").val().length <= 0) {
            $("#validNewElectronicDocument").show();
            $("#txtElectronicDocumentName").focus();

            return;
        }
        else
            $("#validNewElectronicDocument").hide();

        $.ajax({
            url: "@Url.Action("AddNewElectronicDocument", "TestSetOthersDocuments")",
            type: "POST",
            data: { docName: $("#txtElectronicDocumentName").val() },
            datatype: "json",
            success: function (jsdata) {

                console.log('res ElectronicDocument:', jsdata);
                if (jsdata != null && jsdata.res != null) {

                    if (jsdata.res.Id > 0) {
                        $("#ElectronicDocumentId").append(`<option value='"${jsdata.res.Id}"'>${jsdata.res.Name}</option>`);
                        $('#modalElectronicDocument').modal('hide');
                        $.niftyNoty({
                            type: "success",
                            container: "floating",
                            title: "Mensaje de información",
                            message: "Documento electrónico Agregado exitosamente",
                            closeBtn: false,
                            timer: 5000
                        });

                        if ($("#TestSetId").val() != '' && $("#TestSetId").val() != null) {
                            location.href = "@Url.Action("Add", "TestSetOthersDocuments")" +
                                "?electronicDocumentId=" + $("#ElectronicDocumentId").val() +
                                "&operationModeId=" + $("#OperationModeId").val();
                        }
                        else {
                            location.href = "@Url.Action("Add", "TestSetOthersDocuments")";
                        }
                    }
                }

            },
            complete: function () {

            },
            error: function (result) {
                alert("Error al tratar de crear un nuevo documento electrónico");
                return false;
            }
        });  //ajax

    }

</script>

}
