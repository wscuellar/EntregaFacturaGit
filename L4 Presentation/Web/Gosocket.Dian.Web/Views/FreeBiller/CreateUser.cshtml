@model Gosocket.Dian.Web.Models.FreeBiller.UserFreeBillerModel
@using Newtonsoft.Json;
@{
    ViewBag.Title = "Creación de Usuarios Solución Gratuita";
    //Layout = "~/Views/Shared/_Layout.cshtml";

    var columnSize = 3;

}

@section css
{
    <!--Bootstrap Select [ OPTIONAL ]-->
    <link href="~/Content/plugins/bootstrap-select/bootstrap-select.min.css" rel="stylesheet">
    <link href="~/Content/plugins/chosen/chosen.min.css" rel="stylesheet">
}

<style>
    .form-control {
        border-radius: 4px;
        height: 43px !important;
        border: 1px solid #CCCCCC;
    }

    .btn-default {
        border-radius: 4px;
        height: 43px !important;
        padding-top: 12px;
        padding-left: 0px !important;
    }

    .title-container {
        margin-bottom: 50px !important;
        margin-top: 30px !important;
    }

    .select-container {
        padding-left: 10px !important;
    }

    .submit-container {
        margin-top: 8px;
        padding-top: 24px;
        padding-bottom: 20px;
    }

    .bootstrap-select button {
        padding-left: 10px !important;
    }

    input[type="checkbox"] {
        /* Add if not using autoprefixer */
        -webkit-appearance: none !important;
        appearance: none !important;
        /* For iOS < 15 to remove gradient background */
        background-color: #fff !important;
        /* Not removed via appearance */
        margin: 0 !important;
        appearance: none !important;
        background-color: #fff !important;
        margin: 0 !important;
        font: inherit !important;
        color: currentColor !important;
        width: 2em !important;
        height: 2em !important;
        border: 0.15em solid #41D78C !important;
        border-radius: 0.15em !important;
        transform: translateY(-0.075em) !important;
        margin: 10px !important;
        display: grid !important;
        place-content: center !important;
        outline: none !important;
        border-radius: 5px !important;
    }


        input[type="checkbox"]:checked {
            border: 1px solid white !important;
            background: #41D78C !important;
            border-radius: 5px !important;
        }

            input[type="checkbox"]:checked::after {
                font-family: 'FontAwesome' !important;
                /*  content:'';*/
                font-weight: 400 !important;
                content: "\F00C" !important;
                color: white !important;
                /* 
    width:5px;
    height:4px;
    display:block;
    background:black;*/
            }
    input[type=checkbox][disabled] {
        background: #CCCCCC !important;
        border: none !important;
    }
</style>

<div class="page-content margin-15">

   

    <div class="row margin-horizontal-0">
        <div class="tab-base">
            <div class="tab-content padding-0">
                <div id="tab-current-country" class="tab-pane fade active in">
                    <div id="divMain" class="panel" data-target="#divMain" data-toggle="panel-overlay">
                        <div class="panel-body padding-top-20">
                            <div class="pad-btm padding-bottom-0">
                                <div class="row margin-horizontal-0">
                                    @using (Html.BeginForm("CreateUser", "FreeBiller", FormMethod.Post, new { id = "create-user-form" }))
                                    {
                                        <div class="row margin-horizontal-0 margin-bottom-10" style="margin-left:5px; margin-right:5px;">
                                            <div class="col-md-12 padding-horizontal-0">
                                                <div id="document-list" class="panel">

                                                    <div class="panel-body padding-20 padding-bottom-0">
                                                        <div class="row">
                                                            <div class="col-sm-@columnSize padding-xs-0">
                                                                <div class="form-group">
                                                                    @Html.LabelFor(m => m.TypeDocId, new { @class = "control-label" })
                                                                    @Html.DropDownListFor(m => m.TypeDocId, Model.TypesDoc, new { @class = "form-control" })
                                                                    @Html.ValidationMessageFor(m => m.TypeDocId, "", new { @class = "text-danger" })
                                                                </div>
                                                            </div>

                                                            <div class="col-sm-3 padding-xs-0">
                                                                <div class="form-group">
                                                                    @Html.LabelFor(m => m.NumberDoc, new { @class = "control-label" })
                                                                    @Html.TextBoxFor(m => m.NumberDoc, new { @class = "form-control" })
                                                                    @Html.ValidationMessageFor(m => m.NumberDoc, "", new { @class = "text-danger" })

                                                                </div>
                                                            </div>

                                                            <div class="col-sm-3 padding-xs-0">
                                                                <div class="form-group">
                                                                    @Html.LabelFor(m => m.FullName, new { @class = "control-label" })
                                                                    @Html.TextBoxFor(m => m.FullName, new { @class = "form-control" })
                                                                    @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                                                                </div>

                                                            </div>

                                                            <div class="col-sm-3 padding-xs-0">
                                                                <div class="form-group">
                                                                    @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                                                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="row">

                                                            <div class="col-sm-3 padding-xs-0">
                                                                <div class="form-group">
                                                                    @Html.LabelFor(m => m.ProfileId, new { @class = "control-label" })
                                                                    @Html.DropDownListFor(m => m.ProfileId, Model.Profiles, new { @class = "form-control" })
                                                                    @Html.ValidationMessageFor(m => m.ProfileId, "", new { @class = "text-danger" })
                                                                </div>
                                                            </div>
                                                            <div class="col-sm-3 padding-xs-0 div-add-profile">
                                                                <div class="add-profile btn btn-secondary" style="border-radius:20px!important;"> Añadir perfil <i class="fa fa-plus-circle"></i></div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <hr class="margin-0 margin-bottom-10">

                                                </div>
                                            </div>
                                        </div>
                                    }

                                </div>
                            </div>

                            @Html.Partial("_checksGrid")

                        </div>
                        <div class="panel-footer-grey text-left submit-container">
                            <button type="submit" id="btnSend" class="btn btn-primary">Crear Usuario</button>
                            <button id="btnCancel" class="btn btn-secondary">Salir</button>

                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <!--Bootstrap Select [ OPTIONAL ]-->
    <script src="~/Content/plugins/bootstrap-select/bootstrap-select.min.js"></script>

    <script src="~/Content/js/bootstrap-filestyle.min.js"></script>
    <script src="~/Content/js/file-validator.js"></script>
    <script src="~/Content/js/Radian/RadianIndex.js"></script>
    <script src="~/Content/js/FreeBiller/FreeBiller.js"></script>
    <script src="~/Content/js/custom-chips.js"></script>


    <script>
        $(document).ready(function () {
            var urlNewUser = "@Url.Action("FreeBillerUser")";
            $("#btnSend").click(function (e) {
                var form = $("#create-user-form");
                if ($(form).valid()) {
                    showLoading('#divMain', 'Guardando', 'Procesando datos, por favor espere.');
                    e.preventDefault();
                    var data = {
                        FullName: $('[name=FullName]').val(),
                        TypeDocId: $('[name=TypeDocId]').val(),
                        NumberDoc: $('[name=NumberDoc]').val(),
                        Email: $('[name=Email]').val(),
                        ProfileIds: getProfiles(),
                    }
                    var url = '@Url.Action("CreateUser", "FreeBiller")';
                    var actionError = (error) => {
                        console.log(error);
                    }
                    var actionSuccess = (success) => {
                        var confirmMessage = success.Message;
                        var operationCancel = () => {
                            if (success.RedirectTo) {
                                window.location.href = success.RedirectTo;
                            } else {
                                hideLoading('#divMain');
                            }
                            hideLoading('#divMain');
                        }
                        hideLoading('#divMain');
                        var buttons = AlertExec(operationCancel);
                        var clName = (success.Code == 200) ? "cancel-confirmation" : null;
                        showConfirmation(confirmMessage, buttons, clName, operationCancel)
                    }
                    createUser(url, 'POST', data, actionError, actionSuccess)
                }
            })
            $("#btnCancel").click(function (e) {
                hideLoading('#divMain');
                e.preventDefault()
                window.location.href = urlNewUser;
            });
        });
    </script>

}



