@model Gosocket.Dian.Web.Models.OthersElectronicDocumentsViewModel

<div class="row">
    <div class="col-sm-6 col-md-3 padding-xs-0">
        <div class="form-group">
            @Html.LabelFor(m => m.OperationModeSelectedId, new { @class = "control-label" })
			@if(!Model.ListTable.Any(t => t.StateSoftware == "En pruebas"))
            {
				@Html.DropDownListFor(m => m.OperationModeSelectedId, (SelectList)ViewBag.OperationModes, " ", new { @class = "form-control selectpicker input-general" });
            }
            else
            {
				@Html.DropDownListFor(m => m.OperationModeSelectedId, (SelectList)ViewBag.OperationModes, " ", new { @class = "form-control selectpicker input-general", @disabled = "disabled" });
            }

        </div>
    </div>
    <div class="col-sm-5 padding-xs-0">
        <div class="form-group">
            @Html.LabelFor(m => m.UrlEventReception, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.UrlEventReception, new { @class = "form-control input-general fields captureFields", @readonly = "readonly" })
            @Html.ValidationMessageFor(m => m.UrlEventReception, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="row">
	<h4 class="panel-title-radian padding-0"><strong>Datos de empresa y software</strong></h4>
	<hr class="margin-5" />

	@*@if (Model.OperationModeId == 2)
	{
		@Html.HiddenFor(m => m.SoftwareName)
		@Html.HiddenFor(m => m.PinSW)

		<div class="col-sm-6 col-md-3 padding-xs-0">
			<div class="form-group">
				@Html.Label("ProviderId", "Nombre empresa proveedora", new { @class = "control-label" })
				@Html.DropDownListFor(m => m.ProviderId, (SelectList)ViewBag.ListTechnoProviders, "Seleccione...", new { @class = "form-control selectpicker" })
				@Html.ValidationMessageFor(m => m.ProviderId, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="col-sm-5 col-md-3 padding-xs-0">
			<div class="form-group">
				@Html.LabelFor(m => m.SoftwareName, new { @class = "control-label" })
				@Html.DropDownListFor(m => m.SoftwareId, new SelectList(ViewBag.ListSoftwares, "Id", "Name"), "Seleccione...", new { @class = "form-control selectpicker" })
				@Html.ValidationMessageFor(m => m.SoftwareId, "", new { @class = "text-danger" })
			</div>
		</div>
	}
	else if (Model.OperationModeId != 0)
	{

		@Html.HiddenFor(m => m.SoftwareId)

		<div class="col-sm-3 padding-xs-0">
			<div class="form-group">
				@Html.LabelFor(m => m.ContributorName, new { @class = "control-label" })
				@Html.TextBoxFor(m => m.ContributorName, new { @class = "form-control input-general", disabled = "disabled" })
			</div>
		</div>
		<div class="col-sm-3 padding-xs-0">
			<div class="form-group">
				@Html.LabelFor(m => m.SoftwareName, new { @class = "control-label" })
				@Html.TextBoxFor(m => m.SoftwareName, new { @class = "form-control input-general" })
				@Html.ValidationMessageFor(m => m.SoftwareName, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="col-sm-3 padding-xs-0">
			<div class="form-group">
				@Html.LabelFor(m => m.PinSW, new { @class = "control-label" })
				@Html.TextBoxFor(m => m.PinSW, new { @class = "form-control input-general" })
				@Html.ValidationMessageFor(m => m.PinSW, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="col-sm-3 padding-xs-0">
			<div class="form-group">
				@Html.LabelFor(m => m.SoftwareId, new { @class = "control-label" })
				@Html.TextBoxFor(m => m.SoftwareId, new { @class = "form-control input-general", disabled = "disabled" })
			</div>
		</div>

	}
	else
	{*@
		<div style="display:none" id="FormPropio">
			@*@Html.HiddenFor(m => m.SoftwareId)*@

			<div class="col-sm-3 padding-xs-0">
				<div class="form-group">
					@Html.LabelFor(m => m.ContributorName, new { @class = "control-label" })
					@Html.TextBoxFor(m => m.ContributorName, new { @class = "form-control input-general", disabled = "disabled" })
				</div>
			</div>
			<div class="col-sm-3 padding-xs-0">
				<div class="form-group">
					@Html.LabelFor(m => m.SoftwareName, new { @class = "control-label" })
					@Html.TextBoxFor(m => m.SoftwareName, new { @class = "form-control input-general SoftwareName" })
					<span id="ErrorSoftwareName" style="display:none" class="text-danger">Nombre de Software es requerido</span>
				</div>
			</div>
			<div class="col-sm-3 padding-xs-0" id="DivPin">
				<div class="form-group">
					@Html.LabelFor(m => m.PinSW, new { @class = "control-label" })
					@Html.TextBoxFor(m => m.PinSW, new { @class = "form-control input-general" })
					<span id="ErrorPinSW" style="display:none"  class="text-danger">PIN del Software es requerido</span>
					<span id="ErrorPinSW-length" style="display:none"  class="text-danger">PIN del Software debe ser de 5 dígitos</span>
				</div>
			</div>
			<div class="col-sm-3 padding-xs-0"  id="DivSoftwareId">
				<div class="form-group">
					@Html.LabelFor(m => m.SoftwareIdPr, new { @class = "control-label" })
					@Html.TextBoxFor(m => m.SoftwareIdPr, new { @class = "form-control input-general", disabled = "disabled" })
				</div>
			</div>
		</div>
		<div style="display:none" id="FormPt">
			@Html.HiddenFor(m => m.SoftwareName, new { @class = "SoftwareName"})
			@Html.HiddenFor(m => m.PinSW)

			<div class="col-sm-6 col-md-3 padding-xs-0">
				<div class="form-group">
					@Html.Label("ProviderId", "Nombre empresa proveedora", new { @class = "control-label" })
					@Html.DropDownListFor(m => m.ProviderId, (SelectList)ViewBag.ListTechnoProviders, "Seleccione...", new { @class = "form-control selectpicker" })
					<span id="ErrorProviderId" style="display:none" class="text-danger">Nombre de empresa proveedora es requerido</span>
				</div>
			</div>
			<div class="col-sm-5 col-md-3 padding-xs-0">
				<div class="form-group">
					@Html.LabelFor(m => m.SoftwareName, new { @class = "control-label SoftwareName" })
					@Html.DropDownListFor(m => m.SoftwareId, new SelectList(ViewBag.ListSoftwares, "Id", "Name"), "Seleccione...", new { @class = "form-control selectpicker" })
					<span id="ErrorSoftwareId" style="display:none" class="text-danger">Nombre de software es requerido</span>
				</div>
			</div>
		</div>
			@*}*@

		</div>
