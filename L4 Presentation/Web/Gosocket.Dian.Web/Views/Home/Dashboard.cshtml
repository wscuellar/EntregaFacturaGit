@model Gosocket.Dian.Web.Models.DocumentStatsViewModel
@using Gosocket.Dian.Web.Common
@using Gosocket.Dian.Domain.Common
@using Gosocket.Dian.Infrastructure

@{
    ViewBag.Title = !User.IsInAnyRole("Administrador", "Super") ? "Inicio" : "Tablero";
}
<style>
    .modal-header:after {
    border:none !important;
    }
    .modal-content {
    padding:0px 20px;
    }
    .modal-body {
    padding:0px 0px 0px 10px;
    }

    .panel-chart {
        width: calc(50% - 12px);
        background: #fff;
        padding: 16px;
        border-radius: 8px;
        display: inline-block;
        margin-bottom: 16px;
    }
    .panel-chart:nth-child(even) {
        margin-left: 16px !important;
    }
    .panel-chart .sub-title {
        font-size: 18px !important;
        display: flex;
        justify-content: space-between;
    }
    .panel-chart .sub-title small {
        font-weight: normal !important;
        font-size: 75% !important;
    }
    div#confirmModal #confirmModal-message, div#errorModal #errorModal-message, div#successModal #successModal-message {
    text-align:center;
    }
</style>
<div id="page-content" data-target="#page-content" data-toggle="panel-overlay" style="padding:0;">
    <div class="row margin-horizontal-0">

        <div class="">
            <div class="">
                <div class="row margin-horizontal-0">
                    @if (User.IsInAnyRole("Administrador", "Super"))
                    {
                        <div class="panel-chart">
                            <p class="sub-title">Resumen general de contribuyentes por estado <small>Total contribuyentes: <strong>@Model.TotalContributors</strong></small></p>
                            <div id="contributor-stats-chart" style="height:320px; margin: 0 auto"></div>
                        </div>
                        <div class="panel-chart">
                            <p class="sub-title">Resumen general de documentos recibidos <small>Total documentos: <strong>@Model.GlobalTotal</strong></small></p>
                            <div id="global-stats-chart" style="height:320px; margin: 0 auto"></div>
                        </div>
                        <div class="panel-chart">
                            <p class="sub-title">Resumen de documentos recibidos diariamente <small>Total: <strong>@Model.JsonSumAll</strong></small></p>
                            <div id="global-daily-stats-chart" style="height:320px; margin: 0 auto"></div>
                        </div>
                        <div class="panel-chart">
                            <p class="sub-title">Resumen de documentos recibidos mensualmente <small>Total: <strong>@Model.JsonMonthSumAll</strong></small></p>
                            <div id="global-monthly-stats-chart" style="height:320px; margin: 0 auto"></div>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(Model.ContributorTestSetMessageInfo))
                    {
                        @Html.Raw(Model.ContributorTestSetMessageInfo)
                    }

                    @if (!User.IsInAnyRole("Administrador", "Super"))
                    {
                        <div class="col-md-6 col-lg-3">
                            <div class="panel panel-mint" style="border-radius: 30px;">
                                <div class="panel-body text-center" style="height: 300px;display: flex;align-items: center;flex-direction: column;justify-content: center;">
                                    <p style="font-family: Work Sans;font-size: 18px; font-weight: bold; color: #262944; line-height:26px;" class="text-uppercase mar-btm text-sm">Documentos emitidos</p>
                                    
                                    
                                    <p id="total-documents-emitted"  style="font-family: Work sans; font-size: 81px; font-weight: bold; color: #262944; line-height: 117px;" class="h2 text-thin">
                                        <i class="fa fa-circle-o-notch fa-spin" aria-hidden="true"></i>
                                    </p>
                                    <small style="font-family: Ubuntu;font-size: 14px; font-weight: 400; color: #262944; line-height:26px;"> Documentos emitidos <br/> en los últimos <small style="color: #00B4DC; font-weight: bold; font-size:14px;">30 días</small>.</small>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6 col-lg-3">
                            <div class="panel panel-info" style="border-radius: 30px;">
                                <div class="panel-body text-center" style="height: 300px;display: flex;align-items: center;flex-direction: column;justify-content: center;">
                                    <p style="font-family: Work Sans;font-size: 18px; font-weight: bold; color: #262944; line-height:26px;" class="text-uppercase mar-btm text-sm">Documentos recibidos</p>
                                    
                                    
                                    <p id="total-documents-received" class="h2 text-thin" style="font-family: Work sans; font-size: 81px; font-weight: bold; color: #262944; line-height: 117px;"><i class="fa fa-circle-o-notch fa-spin" aria-hidden="true"></i></p>
                                    <small style="font-family: Ubuntu;font-size: 14px; font-weight: 400; color: #262944; line-height:26px;"> Documentos recibidos <br /> en los últimos <small style="color: #00B4DC; font-weight: bold; font-size:14px;">30 días</small>.</small>
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>

        </div>

    </div>

</div>

@section Scripts
{


    <script>

        $(document).ready(function ($) {

            if ('@User.IsInAnyRole("Administrador", "Super")' === 'False') {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetEmittedAndreceivedTotal", "Home")',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        if (data.success) {
                            $("#total-documents-emitted").html(data.emitted);
                            $("#total-documents-received").html(data.received)
                        }
                    },
                    error: function () {}
                });
            }

            if ('@ConfigurationManager.GetValue("Environment")' == 'Test' || '@ConfigurationManager.GetValue("Environment")' == 'Hab') {
                if (@Model.ContributorTypeId === @((int)ContributorType.Biller) || @Model.ContributorTypeId === @((int)ContributorType.Provider)) {
                    if ('@User.IsInAnyRole("Administrador", "Super")' === 'False' && @Model.ContributorAcceptanceStatusId === @((int)ContributorStatus.Enabled) && '@Model.ContributorProductionDate' === '') {

                        showRegisterProductionDateModal();

                        $('#productionDate').datepicker({
                            format: 'dd-mm-yyyy',
                            language: 'es',
                            todayBtn: 'linked',
                            autoclose: true,
                            todayHighlight: true,
                            startDate: '@Model.ContributorHabilitationDate.Value.ToString("dd-MM-yyyy")',
                            endDate: '@Model.ContributorHabilitationDate.Value.AddYears(1).ToString("dd-MM-yyyy")'
                        });
                    }
                }
            }


            Highcharts.setOptions({
                lang:
                {
                    months: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],
                    shortMonths: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],
                    weekdays: ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'],
                }
            });

            @if (User.IsInAnyRole("Administrador", "Super"))
            {
                <Text>
                //Global Stat Chart
                Highcharts.chart('global-stats-chart', {
                    credits: {
                        enabled: false
                    },
                    navigation: {
                        buttonOptions: {
                            enabled: false
                        }
                    },
                    chart: {
                        plotBackgroundColor: null,
                        plotBorderWidth: null,
                        plotShadow: false,
                        type: 'pie'
                    },
                    title: {
                        text: ''
                    },
                     subtitle: {
                         text: ''
                     },
                    tooltip: {
                        pointFormat: '<b>{point.name}</b>:{point.y}'
                    },
                    colors: ['#41D78C', '#FED064', '#F54E41'],
                    plotOptions: {
                        pie: {
                            allowPointSelect: true,
                            cursor: 'pointer',
                            dataLabels: {
                                enabled: false,
                                format: '<b>{point.name}</b>:{point.y}',
                                style: {
                                    color: ['#41D78C', '#FED064', '#F54E41']
                                }
                            }
                        }
                    },
                    series: [{
                        data: [{
                                name: 'Aceptados',
                            y: @Model.GlobalTotalAccepted,
                        }, {
                                name: 'Con notificaciones',
                            y: @Model.GlobalTotalNotification,
                        }, {
                                name: 'Rechazados',
                            y: @Model.GlobalTotalRejected,
                        }],
                        showInLegend: true
                    }],
                    legend: {
                        symbolRadius: 0,
                    },
                });

                //Contributor Stats Chart
                 Highcharts.chart('contributor-stats-chart', {
                    credits: {
                        enabled: false
                    },
                    navigation: {
                        buttonOptions: {
                            enabled: false
                        }
                    },
                    chart: {
                        plotBackgroundColor: null,
                        plotBorderWidth: null,
                        plotShadow: false,
                        type: 'pie'
                    },
                    title: {
                        text: ''
                     },
                     subtitle: {
                         text: ''
                     },
                    tooltip: {
                        pointFormat: '<b>{point.name}</b>:{point.y}'
                    },
                     colors: ['#FED064', '#1DB4DC', '#41D78C'],
                    plotOptions: {
                        pie: {
                            allowPointSelect: true,
                            cursor: 'pointer',
                            dataLabels: {
                                enabled: false,
                                format: '<b>{point.name}</b>:{point.y}',
                                style: {
                                    color: ['#FED064', '#1DB4DC', '#41D78C']
                                }
                            }
                        }
                    },
                    series: [{
                        data: [
                            {
                                name: 'Pendientes',
                                y: @Model.PendingContributors,
                            },
                            {
                                name: 'Registrados',
                                y: @Model.RegisteredContributors,
                            },
                            {
                                name: 'Habilitados',
                                y: @Model.EnabledContributors,
                            },
                        ],
                        showInLegend: true
                     }],
                     legend: {
                         symbolRadius: 0,
                     }
                });

                //Global Monthly Stats Chart
                 Highcharts.chart('global-monthly-stats-chart', {
                    credits: {
                       enabled: false
                    },
                    navigation: {
                       buttonOptions: {
                            enabled: false
                        }
                    },
                    chart: {
                        type: 'column'
                    },
                    title: {
                        text: ''
                    },
                    subtitle: {
                        text: ''
                    },
                    xAxis: {
                        categories:@Html.Raw(@Model.JsonMonthDate),
                        crosshair: true
                    },
                    yAxis: {
                        min: 0,
                        title: {
                            text: ''
                        }
                    },
                    tooltip: {
                        headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                        pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                            '<td style="padding:0"><b>{point.y:.0f}</b></td></tr>',
                        footerFormat: '</table>',
                        shared: true,
                        useHTML: true
                    },
                    plotOptions: {
                        column: {
                            pointPadding: 0.2,
                            borderWidth: 0
                        }
                    },
                     colors: ['#1DB4DC', '#41D78C', '#FED064', '#F54E41'],
                    series: [
                        {
                            name: 'Total',
                            data: @Model.JsonMonthAll,
                        },
                        {
                            name: 'Aceptados',
                            data: @Model.JsonMonthAccepted,
                        },
                        {
                            name: 'Con notificaciones',
                            data: @Model.JsonMonthNotification,
                        },
                        {
                            name: 'Rechazados',
                            data: @Model.JsonMonthRejected,
                        }
                    ],
                     legend: {
                         symbolRadius: 0,
                     }
                });

                //Global Daily Stats Chart
                 Highcharts.chart('global-daily-stats-chart', {
                    credits: {
                       enabled: false
                    },
                    navigation: {
                       buttonOptions: {
                            enabled: false
                        }
                    },
                    chart: {
                        type: 'column'
                    },
                    title: {
                        text: ''
                    },
                    subtitle: {
                        text: ''
                    },
                    xAxis: {
                        categories:@Html.Raw(@Model.JsonDate),
                        crosshair: true
                    },
                    yAxis: {
                        min: 0,
                        title: {
                            text: ''
                        }
                    },
                    tooltip: {
                        headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                        pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                            '<td style="padding:0"><b>{point.y:.0f}</b></td></tr>',
                        footerFormat: '</table>',
                        shared: true,
                        useHTML: true
                    },
                    plotOptions: {
                        column: {
                            pointPadding: 0.2,
                            //borderWidth: 0
                        }
                     },
                     colors: ['#1DB4DC', '#41D78C', '#FED064', '#F54E41'],
                    series: [{
                        name: 'Total',
                        data: @Model.JsonAll,
                    }, {
                        name: 'Aceptados',
                        data: @Model.JsonAccepted,
                    }, {
                        name: 'Con notificaciones',
                        data: @Model.JsonNotification,

                    }, {
                        name: 'Rechazados',
                        data: @Model.JsonRejected,
                         }],
                     legend: {
                         symbolRadius: 0,
                     }
                });

                </Text>
            }
        });

        function showRegisterProductionDateModal() {
            bootbox.dialog({
                title: "<h4 class='sub-title padding-0'><strong>Registrar fecha de inicio salida a producción</strong></h4>",
                message: "<div class='row'>" +
                            "<div class= 'col-md-12'>" +
                                "<form class= 'form-horizontal' >" +
                                    "<div>" + 
                    "<div class='col-md-11' style='padding: 0px 0px 0px 10px;'>" +
                    "<label class='col-md-4 control-label' for='name'>Habilitación</label>" +
                                            "<input id='habilitationDate' name='habilitationDate' type='text' value='@Model.ContributorHabilitationDate.Value.ToString("dd-MM-yyyy")' class='form-control input-md' readonly>" +
                                                "<span class='help-block'><small>Fecha de habilitación</small></span>" +
                                        "</div>" +
                                    "</div>" +
                                    "<div>" +                                        
                    "<div class='col-md-11' style='padding: 0px 0px 0px 10px;'>" +
                    "<label class='col-md-4 control-label' for='name'>Producción</label>" +
                                            "<input id='productionDate' name='productionDate' type='text' value='@DateTime.UtcNow.ToString("dd-MM-yyyy")' class='form-control input-md'>" +
                                            "<span class='help-block'><small>Fecha inicio real producción</small></span>" +
                                        "</div>" +
                                    "</div>" +
                                "</form>" +
                            "</div>" +
                        "</div> ",
                buttons: {
                    del: {
                        label: "Aceptar",
                        className: "btn btn-success btn-radian-success",
                        callback: function () {
                            showConfirmSetProductionDate();
                        }
                    },
                }
            });
        }

        function showConfirmSetProductionDate() {
            var habilitationDate = $("#habilitationDate").val();
            var productionDate = $("#productionDate").val();

            ConfirmDialogV2("Responsabilidad “52-Facturador Electrónico” en el RUT será actualizada con la fecha registrada.", `
                <span style="text-align:center;">Esta fecha no se puede modificar posteriormente, ya que con esta fecha se realiza la actualización de la responsabilidad “52-Facturador Electrónico” en el RUT.<span>`,
                { confirm: "Aceptar", cancel: "Cancelar" },
                () => { setProductionDate(habilitationDate, productionDate); });

            //bootbox.dialog({
            //    message: "<div class='text-center'><img src='/Content/images/icon-warning.svg' width='200'></div>" +
            //        "<div class='media'><div style='padding: 10px 80px 20px 80px;'>" +
            //        "<h4 class='title' style='font-size:21px !important;line-height:24px !important;text-align:center !important;margin-bottom: 20px !important;'><strong>Responsabilidad “52-Facturador Electrónico” en el RUT será actualizada con la fecha registrada.</strong></h4>" +
            //        "Esta fecha no se puede modificar posteriormente, ya que con esta fecha se realiza la actualización de la responsabilidad “52-Facturador Electrónico” en el RUT.<br>" +
            //        "</div></div>",
            //    title: "<h4 class='sub-title padding-0'><strong>Advertencia</strong></h4>",
            //    buttons: {
            //        del: {
            //            label: "Aceptar",
            //            className: "btn btn-success btn-radian-success",
            //            callback: function () {
            //                setProductionDate(habilitationDate, productionDate);
            //            }
            //        },
            //    }
            //});
        }

        function setProductionDate(habilitationDate, productionDate) {
            showLoading('#page-content', 'Actualizando', 'Procesando datos, por favor espere.');
            $.ajax({
            url: "@Url.Action("SetHabilitationAndProductionDates", "Contributor")",
            method: "Post",
                data: {
                    habilitationDate: habilitationDate,
                    productionDate: productionDate
                },
                error: function (a, b, c) {},
                success: function (data) {
                    if (data.success) {
                        showPageNotification('success', data.message);
                    } else {
                        showPageNotification('danger', data.message);
                    }
                    hideLoading('#page-content');
                }
            });
        }

    </script>
}